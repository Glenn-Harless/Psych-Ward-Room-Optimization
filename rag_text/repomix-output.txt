This file is a merged representation of the entire codebase, combining all repository files into a single document.
Generated by Repomix on: 2024-12-21T21:18:41.539Z

================================================================
File Summary
================================================================

Purpose:
--------
This file contains a packed representation of the entire repository's contents.
It is designed to be easily consumable by AI systems for analysis, code review,
or other automated processes.

File Format:
------------
The content is organized as follows:
1. This summary section
2. Repository information
3. Repository structure
4. Multiple file entries, each consisting of:
  a. A separator line (================)
  b. The file path (File: path/to/file)
  c. Another separator line
  d. The full contents of the file
  e. A blank line

Usage Guidelines:
-----------------
- This file should be treated as read-only. Any changes should be made to the
  original repository files, not this packed version.
- When processing this file, use the file path to distinguish
  between different files in the repository.
- Be aware that this file may contain sensitive information. Handle it with
  the same level of security as you would the original repository.

Notes:
------
- Some files may have been excluded based on .gitignore rules and Repomix's
  configuration.
- Binary files are not included in this packed representation. Please refer to
  the Repository Structure section for a complete list of file paths, including
  binary files.

Additional Info:
----------------

For more information about Repomix, visit: https://github.com/yamadashy/repomix

================================================================
Repository Structure
================================================================
data/
  CleanOptSheet.csv
  final_census_data_test_set_may_to_oct2024.csv
  final_census_data_test_set.csv
  final_census_data.csv
  Monthly Census 2024(Aug).csv
  Monthly Census 2024(Jul).csv
  Monthly Census 2024(Jun).csv
  Monthly Census 2024(May).csv
  Monthly Census 2024(Oct).csv
  Monthly Census 2024(Sept).csv
output/
  data/
    current_model_data.csv
    current_model_max_capacity.csv
    max_capacity_summary.csv
    optimized_model_data_test_set_may_to_oct2024.csv
    optimized_model_data_test_set.csv
    optimized_model_data.csv
  solver_log.txt
.gitignore
changelog.txt
current_model.py
docker-compose.yml
dockerfile
evaluateModel.md
main.py
max_capacity_events.csv
max_capacity_summary.csv
max_capacity.py
model_current.py
model_optimizer.py
optimizer_overview.md
optimizer_results.md
optimizer_visualizations.py
optimizer.py
preprocess_data.py
preprocess_TEST_data.py
README.md
requirements.txt
visualizer.py

================================================================
Repository Files
================================================================

================
File: data/CleanOptSheet.csv
================
Day,Single Room E,Single Room F,Total Single Room Patients,Double Room Patients,Total Patients for Day,Closed Rooms
Monday,10,1,11,2,13,0
Tuesday,6,7,13,0,13,0
Wednesday,6,5,11,1,12,0
Thursday,4,4,8,5,13,0
Friday,5,6,11,4,15,0
Saturday,8,3,11,4,15,0
Sunday,8,3,11,4,15,0
Monday,8,3,11,4,15,0
Tuesday,8,2,10,4,14,0
Wednesday,8,2,10,5,15,0
Thursday,7,2,9,5,14,0
Friday,6,2,8,6,14,0
Saturday,7,2,9,6,15,0
Sunday,7,2,9,6,15,0
Monday,7,2,9,6,15,0
Tuesday,7,2,9,7,16,0
Wednesday,7,2,9,8,17,0
Thursday,8,0,8,7,15,0
Friday,5,0,5,11,16,2
Saturday,6,0,6,12,18,2
Sunday,6,0,6,12,18,2
Monday,5,0,5,13,18,2
Tuesday,7,0,7,10,17,2
Wednesday,8,0,8,8,16,0
Thursday,8,0,8,9,17,0
Friday,8,0,8,7,15,2
Saturday,9,0,9,5,14,2
Sunday,8,0,8,7,15,2
Monday,9,0,9,6,15,2
Tuesday,9,0,9,6,15,2
Wednesday,8,0,8,8,16,2
Thursday,7,0,7,6,13,2
Friday,8,0,8,8,16,2
Saturday,8,4,12,1,13,0
Sunday,8,4,12,1,13,0
Monday,9,2,11,2,13,2
Tuesday,5,1,6,5,11,2
Wednesday,5,1,6,4,10,2
Thursday,6,0,6,5,11,2
Friday,5,1,6,9,15,2
Saturday,4,1,5,9,14,2
Sunday,5,1,6,10,16,2
Monday,5,1,6,10,16,2
Tuesday,7,1,8,7,15,2
Wednesday,7,1,8,5,13,0
Thursday,6,1,7,5,12,0
Friday,6,1,7,8,15,0
Saturday,8,1,9,6,15,0
Sunday,8,1,9,7,16,0
Monday,9,0,9,7,16,0
Tuesday,9,0,9,7,16,0
Wednesday,9,0,9,6,15,0
Thursday,7,0,7,10,17,0
Friday,8,0,8,10,18,0
Saturday,8,0,8,9,17,0
Sunday,8,0,8,10,18,0
Monday,8,0,8,10,18,0
Tuesday,8,0,8,9,17,0
Wednesday,6,0,6,7,13,0
Thursday,6,0,6,5,11,0
Friday,6,0,6,8,14,0
Saturday,6,0,6,7,13,0
Sunday,7,0,7,11,18,0
Monday,7,0,7,11,18,0
Tuesday,5,0,5,11,16,0
Wednesday,7,0,7,9,16,0
Thursday,7,0,7,7,14,0
Friday,4,0,4,5,9,0
Saturday,5,0,5,5,10,0
Sunday,5,0,5,6,11,0
Monday,5,0,5,7,12,0
Tuesday,6,0,6,9,15,0
Wednesday,4,0,4,11,15,0
Thursday,3,0,3,7,10,0
Friday,3,0,3,8,11,0
Saturday,4,0,4,8,12,0
Sunday,5,0,5,7,12,0
Monday,5,0,5,11,16,0
Tuesday,8,0,8,9,17,0
Wednesday,7,0,7,9,16,0
Thursday,6,0,6,11,17,0
Friday,5,0,5,11,16,0
Saturday,6,0,6,12,18,0
Sunday,6,0,6,12,18,0
Monday,6,0,6,12,18,0
Tuesday,7,0,7,8,15,0
Wednesday,6,0,6,8,14,0
Thursday,6,0,6,8,14,0
Friday,5,0,5,6,11,0
Saturday,5,0,5,6,11,0
Sunday,5,0,5,6,11,0
Monday,5,0,5,6,11,0
Tuesday,4,0,4,8,12,0
Wednesday,6,0,6,9,15,0
Thursday,10,0,10,6,16,0
Friday,7,0,7,7,14,0
Saturday,9,0,9,5,14,0
Sunday,9,0,9,5,14,0
Monday,9,0,9,5,14,0
Tuesday,8,0,8,4,12,0
Wednesday,8,0,8,6,14,0
Thursday,6,0,6,6,12,0
Friday,3,0,3,5,8,0
Saturday,2,0,2,8,10,0
Sunday,4,0,4,8,12,0
Monday,4,0,4,8,12,0
Tuesday,5,0,5,7,12,0
Wednesday,6,0,6,8,14,0

================
File: data/final_census_data_test_set_may_to_oct2024.csv
================
Date,Single Room E,Single Room F,Total Single Room Patients,Double Room Patients,Total Patients for Day,Closed Rooms,Total Census Rooms
2024-08-01,9.0,0.0,9.0,3.0,12.0,0,12
2024-08-02,10.0,0.0,10.0,2.0,12.0,0,12
2024-08-03,10.0,0.0,10.0,1.0,11.0,0,11
2024-08-04,8.0,0.0,8.0,4.0,12.0,0,12
2024-08-05,9.0,0.0,9.0,3.0,12.0,0,12
2024-08-06,8.0,0.0,8.0,3.0,11.0,0,11
2024-08-07,9.0,0.0,9.0,5.0,14.0,0,14
2024-08-08,7.0,0.0,7.0,6.0,13.0,0,13
2024-08-09,5.0,0.0,5.0,6.0,11.0,0,11
2024-08-10,7.0,0.0,7.0,7.0,14.0,0,14
2024-08-11,7.0,0.0,7.0,7.0,14.0,2,14
2024-08-12,7.0,0.0,7.0,7.0,14.0,2,14
2024-08-13,7.0,0.0,7.0,6.0,13.0,0,13
2024-08-14,9.0,0.0,9.0,3.0,12.0,0,12
2024-08-15,6.0,0.0,6.0,2.0,8.0,0,8
2024-08-16,5.0,0.0,5.0,3.0,8.0,0,8
2024-08-17,6.0,0.0,6.0,4.0,10.0,0,10
2024-08-18,7.0,0.0,7.0,5.0,12.0,0,12
2024-08-19,7.0,0.0,7.0,5.0,12.0,0,12
2024-08-20,6.0,0.0,6.0,2.0,8.0,2,8
2024-08-21,6.0,0.0,6.0,3.0,9.0,2,9
2024-08-22,6.0,0.0,6.0,4.0,10.0,2,10
2024-08-23,10.0,0.0,10.0,4.0,14.0,0,14
2024-08-24,10.0,0.0,10.0,1.0,11.0,0,11
2024-08-25,10.0,0.0,10.0,1.0,11.0,0,11
2024-08-26,10.0,0.0,10.0,1.0,11.0,0,11
2024-08-27,9.0,0.0,9.0,1.0,10.0,0,10
2024-08-28,9.0,0.0,9.0,1.0,10.0,0,10
2024-08-29,6.0,0.0,6.0,5.0,11.0,0,11
2024-08-30,6.0,0.0,6.0,7.0,13.0,0,13
2024-08-31,6.0,0.0,6.0,8.0,14.0,0,14
2024-07-01,8.0,0.0,8.0,5.0,13.0,2,13
2024-07-02,7.0,0.0,7.0,6.0,13.0,2,13
2024-07-03,6.0,0.0,6.0,5.0,11.0,2,11
2024-07-04,6.0,0.0,6.0,9.0,15.0,2,15
2024-07-05,6.0,0.0,6.0,9.0,15.0,2,15
2024-07-06,6.0,0.0,6.0,7.0,13.0,2,13
2024-07-07,6.0,0.0,6.0,9.0,15.0,2,15
2024-07-08,6.0,0.0,6.0,9.0,15.0,2,15
2024-07-09,5.0,0.0,5.0,6.0,11.0,2,11
2024-07-10,4.0,0.0,4.0,6.0,10.0,2,10
2024-07-11,4.0,0.0,4.0,7.0,11.0,2,11
2024-07-12,6.0,0.0,6.0,6.0,12.0,2,12
2024-07-13,8.0,0.0,8.0,3.0,11.0,2,11
2024-07-14,8.0,0.0,8.0,5.0,13.0,2,13
2024-07-15,9.0,0.0,9.0,4.0,13.0,2,13
2024-07-16,9.0,0.0,9.0,5.0,14.0,2,14
2024-07-17,9.0,0.0,9.0,5.0,14.0,2,14
2024-07-18,8.0,0.0,8.0,5.0,13.0,2,13
2024-07-19,9.0,0.0,9.0,6.0,15.0,2,15
2024-07-20,9.0,0.0,9.0,3.0,12.0,2,12
2024-07-21,9.0,0.0,9.0,3.0,12.0,2,12
2024-07-22,9.0,0.0,9.0,3.0,12.0,2,12
2024-07-23,9.0,0.0,9.0,3.0,12.0,2,12
2024-07-24,8.0,0.0,8.0,5.0,13.0,2,13
2024-07-25,7.0,0.0,7.0,5.0,12.0,2,12
2024-07-26,8.0,0.0,8.0,5.0,13.0,2,13
2024-07-27,6.0,0.0,6.0,4.0,10.0,0,10
2024-07-28,7.0,0.0,7.0,4.0,11.0,0,11
2024-07-29,7.0,0.0,7.0,4.0,11.0,0,11
2024-07-30,7.0,0.0,7.0,4.0,11.0,0,11
2024-07-31,9.0,0.0,9.0,3.0,12.0,0,12
2024-06-01,6.0,0.0,6.0,5.0,11.0,4,11
2024-06-02,9.0,0.0,9.0,5.0,14.0,2,14
2024-06-03,9.0,0.0,9.0,5.0,14.0,2,14
2024-06-04,8.0,0.0,8.0,3.0,11.0,4,11
2024-06-05,6.0,0.0,6.0,2.0,8.0,2,8
2024-06-06,7.0,0.0,7.0,3.0,10.0,2,10
2024-06-07,7.0,0.0,7.0,7.0,14.0,2,14
2024-06-08,8.0,0.0,8.0,7.0,15.0,2,15
2024-06-09,7.0,0.0,7.0,8.0,15.0,2,15
2024-06-10,8.0,0.0,8.0,8.0,16.0,2,16
2024-06-11,8.0,0.0,8.0,5.0,13.0,2,13
2024-06-12,8.0,0.0,8.0,5.0,13.0,2,13
2024-06-13,7.0,0.0,7.0,4.0,11.0,2,11
2024-06-14,7.0,0.0,7.0,2.0,9.0,2,9
2024-06-15,5.0,0.0,5.0,2.0,7.0,2,7
2024-06-16,6.0,0.0,6.0,5.0,11.0,2,11
2024-06-17,6.0,0.0,6.0,5.0,11.0,2,11
2024-06-18,7.0,0.0,7.0,3.0,10.0,2,10
2024-06-19,4.0,0.0,4.0,5.0,9.0,2,9
2024-06-20,4.0,0.0,4.0,5.0,9.0,2,9
2024-06-21,4.0,0.0,4.0,6.0,10.0,2,10
2024-06-22,6.0,0.0,6.0,7.0,13.0,2,13
2024-06-23,7.0,0.0,7.0,8.0,15.0,2,15
2024-06-24,7.0,0.0,7.0,8.0,15.0,2,15
2024-06-25,8.0,0.0,8.0,5.0,13.0,2,13
2024-06-26,7.0,0.0,7.0,6.0,13.0,2,13
2024-06-27,6.0,0.0,6.0,8.0,14.0,2,14
2024-06-28,6.0,0.0,6.0,8.0,14.0,2,14
2024-06-29,5.0,0.0,5.0,4.0,9.0,2,9
2024-06-30,8.0,0.0,8.0,5.0,13.0,2,13
2024-05-01,7.0,0.0,7.0,3.0,10.0,0,10
2024-05-02,7.0,0.0,7.0,5.0,12.0,0,12
2024-05-03,7.0,0.0,7.0,6.0,13.0,0,13
2024-05-04,8.0,0.0,8.0,6.0,14.0,0,14
2024-05-05,8.0,0.0,8.0,6.0,14.0,0,14
2024-05-06,8.0,0.0,8.0,6.0,14.0,0,14
2024-05-07,7.0,0.0,7.0,8.0,15.0,0,15
2024-05-08,7.0,0.0,7.0,9.0,16.0,0,16
2024-05-09,8.0,0.0,8.0,7.0,15.0,0,15
2024-05-10,8.0,0.0,8.0,7.0,15.0,0,15
2024-05-11,10.0,0.0,10.0,5.0,15.0,0,15
2024-05-12,11.0,0.0,11.0,4.0,15.0,0,15
2024-05-13,11.0,0.0,11.0,4.0,15.0,0,15
2024-05-14,7.0,0.0,7.0,7.0,14.0,0,14
2024-05-15,8.0,0.0,8.0,8.0,16.0,0,16
2024-05-16,9.0,0.0,9.0,7.0,16.0,0,16
2024-05-17,8.0,0.0,8.0,7.0,15.0,0,15
2024-05-18,10.0,0.0,10.0,6.0,16.0,0,16
2024-05-19,10.0,0.0,10.0,6.0,16.0,0,16
2024-05-20,10.0,0.0,10.0,6.0,16.0,0,16
2024-05-21,8.0,0.0,8.0,5.0,13.0,2,13
2024-05-22,8.0,0.0,8.0,3.0,11.0,2,11
2024-05-23,6.0,0.0,6.0,6.0,12.0,2,12
2024-05-24,9.0,0.0,9.0,4.0,13.0,2,13
2024-05-25,6.0,0.0,6.0,6.0,12.0,0,12
2024-05-26,7.0,0.0,7.0,5.0,12.0,2,12
2024-05-27,8.0,0.0,8.0,7.0,15.0,2,15
2024-05-28,8.0,0.0,8.0,7.0,15.0,2,15
2024-05-29,7.0,0.0,7.0,9.0,16.0,2,16
2024-05-30,7.0,0.0,7.0,5.0,12.0,2,12
2024-05-31,7.0,0.0,7.0,4.0,11.0,2,11
2024-10-01,8.0,0.0,8.0,3.0,11.0,0,11
2024-10-02,7.0,0.0,7.0,7.0,14.0,2,14
2024-10-03,7.0,0.0,7.0,8.0,15.0,2,15
2024-10-04,8.0,0.0,8.0,8.0,16.0,0,16
2024-10-05,8.0,0.0,8.0,4.0,12.0,0,12
2024-10-06,8.0,0.0,8.0,4.0,12.0,0,12
2024-10-07,8.0,0.0,8.0,4.0,12.0,0,12
2024-10-08,9.0,0.0,9.0,4.0,13.0,0,13
2024-10-09,8.0,0.0,8.0,4.0,12.0,0,12
2024-10-10,9.0,0.0,9.0,4.0,13.0,2,13
2024-10-11,9.0,0.0,9.0,2.0,11.0,2,11
2024-10-12,9.0,0.0,9.0,7.0,16.0,0,16
2024-10-13,9.0,0.0,9.0,7.0,16.0,0,16
2024-10-14,9.0,0.0,9.0,7.0,16.0,0,16
2024-10-15,8.0,0.0,8.0,7.0,15.0,0,15
2024-10-16,8.0,0.0,8.0,6.0,14.0,0,14
2024-10-17,9.0,0.0,9.0,4.0,13.0,2,13
2024-10-18,7.0,0.0,7.0,5.0,12.0,0,12
2024-10-19,7.0,0.0,7.0,5.0,12.0,0,12
2024-10-20,7.0,0.0,7.0,7.0,14.0,0,14
2024-10-21,7.0,0.0,7.0,7.0,14.0,0,14
2024-10-22,8.0,0.0,8.0,1.0,9.0,0,9
2024-10-23,8.0,0.0,8.0,5.0,13.0,0,13
2024-10-24,8.0,0.0,8.0,5.0,13.0,0,13
2024-10-25,9.0,0.0,9.0,7.0,16.0,0,16
2024-10-26,10.0,0.0,10.0,2.0,12.0,0,12
2024-10-27,10.0,0.0,10.0,3.0,13.0,0,13
2024-10-28,10.0,0.0,10.0,3.0,13.0,0,13
2024-10-29,5.0,0.0,5.0,4.0,9.0,0,9
2024-10-30,6.0,0.0,6.0,3.0,9.0,0,9
2024-10-31,7.0,0.0,7.0,4.0,11.0,0,11
2024-09-01,6.0,0.0,6.0,8.0,14.0,0,14
2024-09-02,6.0,0.0,6.0,8.0,14.0,0,14
2024-09-03,6.0,0.0,6.0,8.0,14.0,0,14
2024-09-04,8.0,0.0,8.0,3.0,11.0,0,11
2024-09-05,9.0,0.0,9.0,5.0,14.0,0,14
2024-09-06,9.0,0.0,9.0,6.0,15.0,0,15
2024-09-07,9.0,0.0,9.0,5.0,14.0,0,14
2024-09-08,9.0,0.0,9.0,5.0,14.0,0,14
2024-09-09,9.0,0.0,9.0,5.0,14.0,0,14
2024-09-10,8.0,0.0,8.0,4.0,12.0,0,12
2024-09-11,9.0,0.0,9.0,7.0,16.0,0,16
2024-09-12,7.0,0.0,7.0,6.0,13.0,0,13
2024-09-13,8.0,0.0,8.0,4.0,12.0,0,12
2024-09-14,7.0,0.0,7.0,4.0,11.0,0,11
2024-09-15,8.0,0.0,8.0,3.0,11.0,0,11
2024-09-16,8.0,0.0,8.0,3.0,11.0,0,11
2024-09-17,7.0,0.0,7.0,8.0,15.0,0,15
2024-09-18,7.0,0.0,7.0,10.0,17.0,0,17
2024-09-19,8.0,0.0,8.0,7.0,15.0,0,15
2024-09-20,6.0,0.0,6.0,7.0,13.0,0,13
2024-09-21,10.0,0.0,10.0,5.0,15.0,0,15
2024-09-22,11.0,0.0,11.0,4.0,15.0,0,15
2024-09-23,11.0,0.0,11.0,4.0,15.0,0,15
2024-09-24,10.0,0.0,10.0,2.0,12.0,0,12
2024-09-25,9.0,0.0,9.0,5.0,14.0,0,14
2024-09-26,9.0,0.0,9.0,7.0,16.0,0,16
2024-09-27,10.0,0.0,10.0,6.0,16.0,0,16
2024-09-28,11.0,0.0,11.0,2.0,13.0,0,13
2024-09-29,11.0,0.0,11.0,3.0,14.0,0,14
2024-09-30,11.0,0.0,11.0,3.0,14.0,0,14

================
File: data/final_census_data_test_set.csv
================
Date,Single Room E,Single Room F,Total Single Room Patients,Double Room Patients,Total Patients for Day,Closed Rooms,Total Census Rooms
2024-08-01,9.0,0.0,9.0,3.0,12.0,0,12
2024-08-02,10.0,0.0,10.0,2.0,12.0,0,12
2024-08-03,10.0,0.0,10.0,1.0,11.0,0,11
2024-08-04,8.0,0.0,8.0,4.0,12.0,0,12
2024-08-05,9.0,0.0,9.0,3.0,12.0,0,12
2024-08-06,8.0,0.0,8.0,3.0,11.0,0,11
2024-08-07,9.0,0.0,9.0,5.0,14.0,0,14
2024-08-08,7.0,0.0,7.0,6.0,13.0,0,13
2024-08-09,5.0,0.0,5.0,6.0,11.0,0,11
2024-08-10,7.0,0.0,7.0,7.0,14.0,0,14
2024-08-11,7.0,0.0,7.0,7.0,14.0,2,14
2024-08-12,7.0,0.0,7.0,7.0,14.0,2,14
2024-08-13,7.0,0.0,7.0,6.0,13.0,0,13
2024-08-14,9.0,0.0,9.0,3.0,12.0,0,12
2024-08-15,6.0,0.0,6.0,2.0,8.0,0,8
2024-08-16,5.0,0.0,5.0,3.0,8.0,0,8
2024-08-17,6.0,0.0,6.0,4.0,10.0,0,10
2024-08-18,7.0,0.0,7.0,5.0,12.0,0,12
2024-08-19,7.0,0.0,7.0,5.0,12.0,0,12
2024-08-20,6.0,0.0,6.0,2.0,8.0,2,8
2024-08-21,6.0,0.0,6.0,3.0,9.0,2,9
2024-08-22,6.0,0.0,6.0,4.0,10.0,2,10
2024-08-23,10.0,0.0,10.0,4.0,14.0,0,14
2024-08-24,10.0,0.0,10.0,1.0,11.0,0,11
2024-08-25,10.0,0.0,10.0,1.0,11.0,0,11
2024-08-26,10.0,0.0,10.0,1.0,11.0,0,11
2024-08-27,9.0,0.0,9.0,1.0,10.0,0,10
2024-08-28,9.0,0.0,9.0,1.0,10.0,0,10
2024-08-29,6.0,0.0,6.0,5.0,11.0,0,11
2024-08-30,6.0,0.0,6.0,7.0,13.0,0,13
2024-08-31,6.0,0.0,6.0,8.0,14.0,0,14
2024-07-01,8.0,0.0,8.0,5.0,13.0,2,13
2024-07-02,7.0,0.0,7.0,6.0,13.0,2,13
2024-07-03,6.0,0.0,6.0,5.0,11.0,2,11
2024-07-04,6.0,0.0,6.0,9.0,15.0,2,15
2024-07-05,6.0,0.0,6.0,9.0,15.0,2,15
2024-07-06,6.0,0.0,6.0,7.0,13.0,2,13
2024-07-07,6.0,0.0,6.0,9.0,15.0,2,15
2024-07-08,6.0,0.0,6.0,9.0,15.0,2,15
2024-07-09,5.0,0.0,5.0,6.0,11.0,2,11
2024-07-10,4.0,0.0,4.0,6.0,10.0,2,10
2024-07-11,4.0,0.0,4.0,7.0,11.0,2,11
2024-07-12,6.0,0.0,6.0,6.0,12.0,2,12
2024-07-13,8.0,0.0,8.0,3.0,11.0,2,11
2024-07-14,8.0,0.0,8.0,5.0,13.0,2,13
2024-07-15,9.0,0.0,9.0,4.0,13.0,2,13
2024-07-16,9.0,0.0,9.0,5.0,14.0,2,14
2024-07-17,9.0,0.0,9.0,5.0,14.0,2,14
2024-07-18,8.0,0.0,8.0,5.0,13.0,2,13
2024-07-19,9.0,0.0,9.0,6.0,15.0,2,15
2024-07-20,9.0,0.0,9.0,3.0,12.0,2,12
2024-07-21,9.0,0.0,9.0,3.0,12.0,2,12
2024-07-22,9.0,0.0,9.0,3.0,12.0,2,12
2024-07-23,9.0,0.0,9.0,3.0,12.0,2,12
2024-07-24,8.0,0.0,8.0,5.0,13.0,2,13
2024-07-25,7.0,0.0,7.0,5.0,12.0,2,12
2024-07-26,8.0,0.0,8.0,5.0,13.0,2,13
2024-07-27,6.0,0.0,6.0,4.0,10.0,0,10
2024-07-28,7.0,0.0,7.0,4.0,11.0,0,11
2024-07-29,7.0,0.0,7.0,4.0,11.0,0,11
2024-07-30,7.0,0.0,7.0,4.0,11.0,0,11
2024-07-31,9.0,0.0,9.0,3.0,12.0,0,12
2024-06-01,6.0,0.0,6.0,5.0,11.0,4,11
2024-06-02,9.0,0.0,9.0,5.0,14.0,2,14
2024-06-03,9.0,0.0,9.0,5.0,14.0,2,14
2024-06-04,8.0,0.0,8.0,3.0,11.0,4,11
2024-06-05,6.0,0.0,6.0,2.0,8.0,2,8
2024-06-06,7.0,0.0,7.0,3.0,10.0,2,10
2024-06-07,7.0,0.0,7.0,7.0,14.0,2,14
2024-06-08,8.0,0.0,8.0,7.0,15.0,2,15
2024-06-09,7.0,0.0,7.0,8.0,15.0,2,15
2024-06-10,8.0,0.0,8.0,8.0,16.0,2,16
2024-06-11,8.0,0.0,8.0,5.0,13.0,2,13
2024-06-12,8.0,0.0,8.0,5.0,13.0,2,13
2024-06-13,7.0,0.0,7.0,4.0,11.0,2,11
2024-06-14,7.0,0.0,7.0,2.0,9.0,2,9
2024-06-15,5.0,0.0,5.0,2.0,7.0,2,7
2024-06-16,6.0,0.0,6.0,5.0,11.0,2,11
2024-06-17,6.0,0.0,6.0,5.0,11.0,2,11
2024-06-18,7.0,0.0,7.0,3.0,10.0,2,10
2024-06-19,4.0,0.0,4.0,5.0,9.0,2,9
2024-06-20,4.0,0.0,4.0,5.0,9.0,2,9
2024-06-21,4.0,0.0,4.0,6.0,10.0,2,10
2024-06-22,6.0,0.0,6.0,7.0,13.0,2,13
2024-06-23,7.0,0.0,7.0,8.0,15.0,2,15
2024-06-24,7.0,0.0,7.0,8.0,15.0,2,15
2024-06-25,8.0,0.0,8.0,5.0,13.0,2,13
2024-06-26,7.0,0.0,7.0,6.0,13.0,2,13
2024-06-27,6.0,0.0,6.0,8.0,14.0,2,14
2024-06-28,6.0,0.0,6.0,8.0,14.0,2,14
2024-06-29,5.0,0.0,5.0,4.0,9.0,2,9
2024-06-30,8.0,0.0,8.0,5.0,13.0,2,13
2024-05-01,7.0,0.0,7.0,3.0,10.0,0,10
2024-05-02,7.0,0.0,7.0,5.0,12.0,0,12
2024-05-03,7.0,0.0,7.0,6.0,13.0,0,13
2024-05-04,8.0,0.0,8.0,6.0,14.0,0,14
2024-05-05,8.0,0.0,8.0,6.0,14.0,0,14
2024-05-06,8.0,0.0,8.0,6.0,14.0,0,14
2024-05-07,7.0,0.0,7.0,8.0,15.0,0,15
2024-05-08,7.0,0.0,7.0,9.0,16.0,0,16
2024-05-09,8.0,0.0,8.0,7.0,15.0,0,15
2024-05-10,8.0,0.0,8.0,7.0,15.0,0,15
2024-05-11,10.0,0.0,10.0,5.0,15.0,0,15
2024-05-12,11.0,0.0,11.0,4.0,15.0,0,15
2024-05-13,11.0,0.0,11.0,4.0,15.0,0,15
2024-05-14,7.0,0.0,7.0,7.0,14.0,0,14
2024-05-15,8.0,0.0,8.0,8.0,16.0,0,16
2024-05-16,9.0,0.0,9.0,7.0,16.0,0,16
2024-05-17,8.0,0.0,8.0,7.0,15.0,0,15
2024-05-18,10.0,0.0,10.0,6.0,16.0,0,16
2024-05-19,10.0,0.0,10.0,6.0,16.0,0,16
2024-05-20,10.0,0.0,10.0,6.0,16.0,0,16
2024-05-21,8.0,0.0,8.0,5.0,13.0,2,13
2024-05-22,8.0,0.0,8.0,3.0,11.0,2,11
2024-05-23,6.0,0.0,6.0,6.0,12.0,2,12
2024-05-24,9.0,0.0,9.0,4.0,13.0,2,13
2024-05-25,6.0,0.0,6.0,6.0,12.0,0,12
2024-05-26,7.0,0.0,7.0,5.0,12.0,2,12
2024-05-27,8.0,0.0,8.0,7.0,15.0,2,15
2024-05-28,8.0,0.0,8.0,7.0,15.0,2,15
2024-05-29,7.0,0.0,7.0,9.0,16.0,2,16
2024-05-30,7.0,0.0,7.0,5.0,12.0,2,12
2024-05-31,7.0,0.0,7.0,4.0,11.0,2,11

================
File: data/final_census_data.csv
================
Date,Day,Single Room E,Single Room F,Total Single Room Patients,Double Room Patients,Total Patients for Day,Closed Rooms,Total Census Rooms
2022-01-01,1,7.0,0.0,7.0,12.0,19.0,0.0,19.0
2022-01-02,2,7.0,0.0,7.0,12.0,19.0,0.0,19.0
2022-01-03,3,7.0,0.0,7.0,12.0,19.0,0.0,19.0
2022-01-04,4,8.0,0.0,8.0,9.0,17.0,0.0,17.0
2022-01-05,5,8.0,0.0,8.0,9.0,17.0,0.0,17.0
2022-01-06,6,8.0,0.0,8.0,10.0,18.0,0.0,18.0
2022-01-07,7,8.0,0.0,8.0,8.0,16.0,0.0,16.0
2022-01-08,8,8.0,0.0,8.0,8.0,16.0,0.0,16.0
2022-01-09,9,8.0,0.0,8.0,8.0,16.0,0.0,16.0
2022-01-10,10,8.0,0.0,8.0,8.0,16.0,2.0,16.0
2022-01-11,11,14.0,0.0,12.0,0.0,12.0,0.0,12.0
2022-01-12,12,8.0,0.0,6.0,0.0,6.0,0.0,6.0
2022-01-13,13,4.0,0.0,4.0,0.0,4.0,0.0,4.0
2022-01-14,14,3.0,0.0,3.0,0.0,3.0,0.0,3.0
2022-01-15,15,2.0,0.0,2.0,0.0,2.0,0.0,2.0
2022-01-16,16,2.0,0.0,2.0,0.0,2.0,0.0,2.0
2022-01-17,17,2.0,0.0,2.0,0.0,2.0,0.0,2.0
2022-01-18,18,3.0,0.0,3.0,0.0,3.0,0.0,3.0
2022-01-19,19,8.0,0.0,8.0,0.0,8.0,0.0,8.0
2022-01-20,20,5.0,0.0,5.0,0.0,5.0,0.0,5.0
2022-01-21,21,7.0,0.0,7.0,0.0,7.0,0.0,7.0
2022-01-22,22,0.0,0.0,0.0,9.0,9.0,0.0,9.0
2022-01-23,23,2.0,0.0,2.0,8.0,10.0,0.0,10.0
2022-01-24,24,10.0,0.0,10.0,0.0,10.0,0.0,10.0
2022-01-25,25,9.0,0.0,9.0,2.0,11.0,0.0,11.0
2022-01-26,26,11.0,0.0,11.0,2.0,13.0,0.0,13.0
2022-01-27,27,13.0,0.0,13.0,0.0,13.0,0.0,13.0
2022-01-28,28,12.0,0.0,12.0,0.0,12.0,0.0,12.0
2022-01-29,29,5.0,0.0,5.0,10.0,15.0,0.0,15.0
2022-01-30,30,6.0,0.0,6.0,10.0,16.0,0.0,16.0
2022-01-31,31,6.0,0.0,6.0,10.0,16.0,0.0,16.0
2022-02-01,1,6.0,4.0,10.0,6.0,16.0,0.0,16.0
2022-02-02,2,6.0,5.0,11.0,3.0,14.0,0.0,14.0
2022-02-03,3,6.0,6.0,12.0,2.0,14.0,0.0,14.0
2022-02-04,4,6.0,6.0,12.0,2.0,14.0,0.0,14.0
2022-02-05,5,8.0,3.0,11.0,4.0,15.0,0.0,15.0
2022-02-06,6,8.0,3.0,11.0,4.0,15.0,0.0,15.0
2022-02-07,7,8.0,3.0,11.0,4.0,15.0,0.0,15.0
2022-02-08,8,8.0,2.0,10.0,4.0,14.0,0.0,14.0
2022-02-09,9,6.0,4.0,10.0,4.0,14.0,0.0,14.0
2022-02-10,10,7.0,6.0,13.0,0.0,13.0,0.0,13.0
2022-02-11,11,6.0,7.0,13.0,0.0,13.0,0.0,13.0
2022-02-12,12,9.0,4.0,13.0,0.0,13.0,0.0,13.0
2022-02-13,13,9.0,4.0,13.0,0.0,13.0,0.0,13.0
2022-02-14,14,9.0,4.0,13.0,0.0,13.0,0.0,13.0
2022-02-15,15,4.0,0.0,4.0,7.0,11.0,0.0,11.0
2022-02-16,16,6.0,0.0,6.0,8.0,14.0,0.0,14.0
2022-02-17,17,8.0,0.0,8.0,8.0,16.0,0.0,16.0
2022-02-18,18,5.0,0.0,5.0,9.0,14.0,0.0,14.0
2022-02-19,19,6.0,4.0,10.0,4.0,14.0,0.0,14.0
2022-02-20,20,6.0,4.0,10.0,5.0,15.0,0.0,15.0
2022-02-21,21,6.0,4.0,10.0,5.0,15.0,0.0,15.0
2022-02-22,22,6.0,2.0,8.0,10.0,18.0,0.0,18.0
2022-02-23,23,4.0,2.0,6.0,11.0,17.0,0.0,17.0
2022-02-24,24,6.0,2.0,8.0,8.0,16.0,0.0,16.0
2022-02-25,25,7.0,3.0,10.0,5.0,15.0,0.0,15.0
2022-02-26,26,8.0,2.0,10.0,5.0,15.0,0.0,15.0
2022-02-27,27,9.0,2.0,11.0,4.0,15.0,0.0,15.0
2022-02-28,28,8.0,3.0,11.0,4.0,15.0,0.0,15.0
2022-03-01,1,7.0,2.0,9.0,7.0,16.0,0.0,16.0
2022-03-02,2,7.0,0.0,7.0,10.0,17.0,0.0,17.0
2022-03-03,3,7.0,0.0,7.0,10.0,17.0,0.0,17.0
2022-03-04,4,7.0,0.0,7.0,11.0,18.0,0.0,18.0
2022-03-05,5,8.0,0.0,8.0,10.0,18.0,0.0,18.0
2022-03-06,6,8.0,0.0,8.0,10.0,18.0,0.0,18.0
2022-03-07,7,8.0,0.0,8.0,10.0,18.0,0.0,18.0
2022-03-08,8,8.0,0.0,8.0,9.0,17.0,0.0,17.0
2022-03-09,9,7.0,0.0,7.0,8.0,15.0,0.0,15.0
2022-03-10,10,8.0,0.0,8.0,10.0,18.0,0.0,18.0
2022-03-11,11,9.0,0.0,9.0,8.0,17.0,0.0,17.0
2022-03-12,12,8.0,0.0,8.0,10.0,18.0,0.0,18.0
2022-03-13,13,8.0,0.0,8.0,10.0,18.0,0.0,18.0
2022-03-14,14,8.0,0.0,8.0,10.0,18.0,0.0,18.0
2022-03-15,15,9.0,0.0,9.0,7.0,16.0,0.0,16.0
2022-03-16,16,8.0,0.0,8.0,8.0,16.0,2.0,16.0
2022-03-17,17,8.0,0.0,8.0,8.0,16.0,0.0,16.0
2022-03-18,18,9.0,0.0,9.0,7.0,16.0,0.0,16.0
2022-03-19,19,7.0,0.0,7.0,9.0,16.0,0.0,16.0
2022-03-20,20,7.0,0.0,7.0,11.0,18.0,0.0,18.0
2022-03-21,21,7.0,0.0,7.0,12.0,19.0,0.0,19.0
2022-03-22,22,7.0,0.0,7.0,11.0,18.0,0.0,18.0
2022-03-23,23,7.0,0.0,7.0,11.0,18.0,0.0,18.0
2022-03-24,24,7.0,0.0,7.0,11.0,18.0,0.0,18.0
2022-03-25,25,5.0,0.0,5.0,13.0,18.0,0.0,18.0
2022-03-26,26,6.0,0.0,6.0,13.0,19.0,0.0,19.0
2022-03-27,27,6.0,0.0,6.0,13.0,19.0,0.0,19.0
2022-03-28,28,6.0,0.0,6.0,13.0,19.0,0.0,19.0
2022-03-29,29,6.0,0.0,6.0,14.0,20.0,0.0,20.0
2022-03-30,30,6.0,0.0,6.0,11.0,17.0,0.0,17.0
2022-03-31,31,6.0,0.0,6.0,9.0,15.0,0.0,15.0
2022-04-01,1,6.0,0.0,6.0,8.0,14.0,0.0,14.0
2022-04-02,2,8.0,0.0,8.0,7.0,15.0,0.0,15.0
2022-04-03,3,9.0,0.0,9.0,7.0,16.0,0.0,16.0
2022-04-04,4,9.0,0.0,9.0,7.0,16.0,0.0,16.0
2022-04-05,5,5.0,0.0,5.0,5.0,10.0,0.0,10.0
2022-04-06,6,7.0,0.0,7.0,7.0,14.0,0.0,14.0
2022-04-07,7,5.0,0.0,5.0,10.0,15.0,0.0,15.0
2022-04-08,8,5.0,0.0,5.0,14.0,19.0,0.0,19.0
2022-04-09,9,4.0,0.0,4.0,12.0,16.0,0.0,16.0
2022-04-10,10,5.0,0.0,5.0,12.0,17.0,0.0,17.0
2022-04-11,11,5.0,0.0,5.0,12.0,17.0,0.0,17.0
2022-04-12,12,4.0,10.0,12.0,0.0,12.0,0.0,12.0
2022-04-13,13,2.0,19.0,5.0,0.0,5.0,0.0,5.0
2022-04-14,14,2.0,19.0,5.0,0.0,5.0,0.0,5.0
2022-04-15,15,2.0,21.0,3.0,0.0,3.0,0.0,3.0
2022-04-16,16,2.0,14.0,9.0,0.0,9.0,0.0,9.0
2022-04-17,17,2.0,14.0,10.0,0.0,10.0,0.0,10.0
2022-04-18,18,2.0,14.0,10.0,0.0,10.0,0.0,10.0
2022-04-19,19,2.0,11.0,11.0,0.0,11.0,0.0,11.0
2022-04-20,20,3.0,7.0,10.0,3.0,13.0,0.0,13.0
2022-04-21,21,3.0,9.0,12.0,2.0,14.0,0.0,14.0
2022-04-22,22,2.0,11.0,11.0,0.0,11.0,0.0,11.0
2022-04-23,23,3.0,10.0,13.0,0.0,13.0,0.0,13.0
2022-04-24,24,3.0,10.0,13.0,0.0,13.0,0.0,13.0
2022-04-25,25,3.0,10.0,13.0,0.0,13.0,0.0,13.0
2022-04-26,26,1.0,8.0,9.0,6.0,15.0,0.0,15.0
2022-04-27,27,1.0,9.0,10.0,6.0,16.0,0.0,16.0
2022-04-28,28,2.0,9.0,11.0,4.0,15.0,0.0,15.0
2022-04-29,29,3.0,9.0,9.0,0.0,9.0,0.0,9.0
2022-04-30,30,6.0,6.0,12.0,0.0,12.0,0.0,12.0
2022-05-01,1,5.0,7.0,12.0,1.0,13.0,0.0,13.0
2022-05-02,2,6.0,7.0,13.0,0.0,13.0,0.0,13.0
2022-05-03,3,2.0,9.0,11.0,2.0,13.0,0.0,13.0
2022-05-04,4,1.0,11.0,12.0,1.0,13.0,0.0,13.0
2022-05-05,5,1.0,13.0,12.0,0.0,12.0,0.0,12.0
2022-05-06,6,2.0,13.0,11.0,0.0,11.0,0.0,11.0
2022-05-07,7,2.0,12.0,11.0,0.0,11.0,0.0,11.0
2022-05-08,8,2.0,12.0,12.0,0.0,12.0,0.0,12.0
2022-05-09,9,2.0,12.0,12.0,0.0,12.0,0.0,12.0
2022-05-10,10,3.0,8.0,9.0,0.0,9.0,0.0,9.0
2022-05-11,11,3.0,8.0,11.0,1.0,12.0,0.0,12.0
2022-05-12,12,3.0,9.0,11.0,0.0,11.0,0.0,11.0
2022-05-13,13,3.0,9.0,11.0,0.0,11.0,0.0,11.0
2022-05-14,14,2.0,10.0,11.0,0.0,11.0,0.0,11.0
2022-05-15,15,2.0,10.0,12.0,0.0,12.0,0.0,12.0
2022-05-16,16,2.0,10.0,12.0,0.0,12.0,0.0,12.0
2022-05-17,17,2.0,10.0,12.0,1.0,13.0,0.0,13.0
2022-05-18,18,1.0,10.0,11.0,2.0,13.0,0.0,13.0
2022-05-19,19,1.0,8.0,9.0,3.0,12.0,0.0,12.0
2022-05-20,20,1.0,14.0,10.0,0.0,10.0,0.0,10.0
2022-05-21,21,2.0,9.0,11.0,0.0,11.0,0.0,11.0
2022-05-22,22,2.0,9.0,11.0,0.0,11.0,0.0,11.0
2022-05-23,23,2.0,9.0,11.0,1.0,12.0,0.0,12.0
2022-05-24,24,2.0,9.0,11.0,3.0,14.0,0.0,14.0
2022-05-25,25,2.0,10.0,12.0,2.0,14.0,0.0,14.0
2022-05-26,26,1.0,10.0,11.0,3.0,14.0,0.0,14.0
2022-05-27,27,2.0,9.0,11.0,2.0,13.0,0.0,13.0
2022-05-28,28,3.0,5.0,8.0,8.0,16.0,0.0,16.0
2022-05-29,29,3.0,5.0,8.0,8.0,16.0,0.0,16.0
2022-05-30,30,3.0,5.0,8.0,8.0,16.0,0.0,16.0
2022-05-31,31,3.0,5.0,8.0,8.0,16.0,0.0,16.0
2022-06-01,1,4.0,8.0,12.0,2.0,14.0,0.0,14.0
2022-06-02,2,1.0,7.0,8.0,5.0,13.0,0.0,13.0
2022-06-03,3,0.0,7.0,7.0,5.0,12.0,0.0,12.0
2022-06-04,4,0.0,7.0,7.0,4.0,11.0,0.0,11.0
2022-06-05,5,0.0,7.0,7.0,5.0,12.0,0.0,12.0
2022-06-06,6,0.0,7.0,7.0,6.0,13.0,0.0,13.0
2022-06-07,7,1.0,7.0,8.0,4.0,12.0,0.0,12.0
2022-06-08,8,1.0,7.0,8.0,2.0,10.0,0.0,10.0
2022-06-09,9,2.0,7.0,9.0,1.0,10.0,0.0,10.0
2022-06-10,10,2.0,7.0,9.0,1.0,10.0,0.0,10.0
2022-06-11,11,2.0,11.0,11.0,0.0,11.0,0.0,11.0
2022-06-12,12,2.0,11.0,12.0,0.0,12.0,0.0,12.0
2022-06-13,13,2.0,11.0,12.0,0.0,12.0,0.0,12.0
2022-06-14,14,3.0,9.0,12.0,1.0,13.0,0.0,13.0
2022-06-15,15,3.0,9.0,11.0,0.0,11.0,0.0,11.0
2022-06-16,16,4.0,9.0,12.0,0.0,12.0,0.0,12.0
2022-06-17,17,3.0,9.0,12.0,0.0,12.0,0.0,12.0
2022-06-18,18,2.0,7.0,9.0,3.0,12.0,0.0,12.0
2022-06-19,19,2.0,7.0,9.0,4.0,13.0,0.0,13.0
2022-06-20,20,2.0,7.0,9.0,4.0,13.0,0.0,13.0
2022-06-21,21,3.0,7.0,10.0,2.0,12.0,0.0,12.0
2022-06-22,22,5.0,7.0,10.0,0.0,10.0,0.0,10.0
2022-06-23,23,5.0,7.0,11.0,0.0,11.0,0.0,11.0
2022-06-24,24,4.0,7.0,11.0,1.0,12.0,0.0,12.0
2022-06-25,25,4.0,7.0,11.0,1.0,12.0,0.0,12.0
2022-06-26,26,5.0,7.0,12.0,2.0,14.0,0.0,14.0
2022-06-27,27,5.0,7.0,12.0,2.0,14.0,0.0,14.0
2022-06-28,28,5.0,6.0,11.0,4.0,15.0,0.0,15.0
2022-06-29,29,4.0,7.0,11.0,2.0,13.0,0.0,13.0
2022-06-30,30,3.0,7.0,10.0,4.0,14.0,0.0,14.0
2022-07-01,1,1.0,7.0,8.0,4.0,12.0,0.0,12.0
2022-07-02,2,1.0,6.0,7.0,5.0,12.0,0.0,12.0
2022-07-03,3,1.0,6.0,7.0,6.0,13.0,0.0,13.0
2022-07-04,4,2.0,6.0,8.0,6.0,14.0,0.0,14.0
2022-07-05,5,2.0,6.0,8.0,6.0,14.0,0.0,14.0
2022-07-06,6,3.0,6.0,9.0,7.0,16.0,0.0,16.0
2022-07-07,7,3.0,6.0,9.0,6.0,15.0,0.0,15.0
2022-07-08,8,2.0,7.0,9.0,6.0,15.0,0.0,15.0
2022-07-09,9,3.0,4.0,7.0,9.0,16.0,0.0,16.0
2022-07-10,10,4.0,4.0,8.0,8.0,16.0,0.0,16.0
2022-07-11,11,4.0,4.0,8.0,10.0,18.0,0.0,18.0
2022-07-12,12,5.0,4.0,9.0,4.0,13.0,0.0,13.0
2022-07-13,13,4.0,5.0,9.0,4.0,13.0,0.0,13.0
2022-07-14,14,3.0,6.0,9.0,6.0,15.0,0.0,15.0
2022-07-15,15,3.0,6.0,9.0,4.0,13.0,0.0,13.0
2022-07-16,16,3.0,7.0,10.0,3.0,13.0,0.0,13.0
2022-07-17,17,4.0,7.0,11.0,3.0,14.0,0.0,14.0
2022-07-18,18,4.0,7.0,11.0,3.0,14.0,0.0,14.0
2022-07-19,19,5.0,5.0,10.0,4.0,14.0,0.0,14.0
2022-07-20,20,3.0,7.0,10.0,2.0,12.0,0.0,12.0
2022-07-21,21,2.0,7.0,9.0,3.0,12.0,0.0,12.0
2022-07-22,22,3.0,7.0,10.0,3.0,13.0,0.0,13.0
2022-07-23,23,3.0,7.0,10.0,2.0,12.0,0.0,12.0
2022-07-24,24,4.0,7.0,11.0,1.0,12.0,0.0,12.0
2022-07-25,25,4.0,7.0,11.0,1.0,12.0,0.0,12.0
2022-07-26,26,4.0,7.0,11.0,0.0,11.0,0.0,11.0
2022-07-27,27,3.0,7.0,10.0,2.0,12.0,0.0,12.0
2022-07-28,28,5.0,0.0,5.0,10.0,15.0,0.0,15.0
2022-07-29,29,3.0,0.0,3.0,11.0,14.0,0.0,14.0
2022-07-30,30,4.0,0.0,4.0,8.0,12.0,0.0,12.0
2022-07-31,31,4.0,0.0,4.0,9.0,13.0,0.0,13.0
2022-08-01,1,2.0,0.0,2.0,11.0,13.0,0.0,13.0
2022-08-02,2,3.0,6.0,9.0,6.0,15.0,0.0,15.0
2022-08-03,3,2.0,7.0,9.0,4.0,13.0,0.0,13.0
2022-08-04,4,2.0,7.0,9.0,3.0,12.0,0.0,12.0
2022-08-05,5,2.0,7.0,9.0,3.0,12.0,1.0,12.0
2022-08-06,6,4.0,7.0,11.0,3.0,14.0,1.0,14.0
2022-08-07,7,5.0,7.0,12.0,1.0,13.0,0.0,13.0
2022-08-08,8,4.0,7.0,11.0,2.0,13.0,0.0,13.0
2022-08-09,9,2.0,8.0,10.0,3.0,13.0,0.0,13.0
2022-08-10,10,2.0,8.0,10.0,4.0,14.0,0.0,14.0
2022-08-11,11,2.0,8.0,10.0,3.0,13.0,0.0,13.0
2022-08-12,12,0.0,8.0,8.0,6.0,14.0,0.0,14.0
2022-08-13,13,0.0,13.0,11.0,0.0,11.0,0.0,11.0
2022-08-14,14,0.0,13.0,13.0,0.0,13.0,0.0,13.0
2022-08-15,15,0.0,13.0,13.0,0.0,13.0,0.0,13.0
2022-08-16,16,0.0,10.0,10.0,2.0,12.0,0.0,12.0
2022-08-17,17,1.0,12.0,9.0,0.0,9.0,0.0,9.0
2022-08-18,18,0.0,13.0,11.0,0.0,11.0,0.0,11.0
2022-08-19,19,0.0,12.0,12.0,1.0,13.0,0.0,13.0
2022-08-20,20,1.0,10.0,11.0,0.0,11.0,0.0,11.0
2022-08-21,21,2.0,10.0,12.0,2.0,14.0,0.0,14.0
2022-08-22,22,2.0,10.0,12.0,2.0,14.0,0.0,14.0
2022-08-23,23,3.0,9.0,11.0,0.0,11.0,0.0,11.0
2022-08-24,24,3.0,11.0,11.0,0.0,11.0,0.0,11.0
2022-08-25,25,3.0,11.0,12.0,0.0,12.0,0.0,12.0
2022-08-26,26,0.0,14.0,10.0,0.0,10.0,0.0,10.0
2022-08-27,27,2.0,11.0,12.0,0.0,12.0,0.0,12.0
2022-08-28,28,2.0,11.0,13.0,0.0,13.0,0.0,13.0
2022-08-29,29,2.0,11.0,13.0,0.0,13.0,0.0,13.0
2022-08-30,30,3.0,9.0,12.0,2.0,14.0,0.0,14.0
2022-08-31,31,3.0,8.0,11.0,4.0,15.0,0.0,15.0
2022-09-01,1,2.0,11.0,13.0,0.0,13.0,0.0,13.0
2022-09-02,2,3.0,8.0,11.0,1.0,12.0,0.0,12.0
2022-09-03,3,4.0,5.0,9.0,6.0,15.0,0.0,15.0
2022-09-04,4,4.0,5.0,9.0,7.0,16.0,0.0,16.0
2022-09-05,5,4.0,5.0,9.0,8.0,17.0,0.0,17.0
2022-09-06,6,4.0,5.0,9.0,8.0,17.0,0.0,17.0
2022-09-07,7,3.0,8.0,11.0,4.0,15.0,0.0,15.0
2022-09-08,8,3.0,8.0,11.0,4.0,15.0,0.0,15.0
2022-09-09,9,3.0,9.0,12.0,2.0,14.0,0.0,14.0
2022-09-10,10,2.0,7.0,9.0,7.0,16.0,0.0,16.0
2022-09-11,11,2.0,7.0,9.0,8.0,17.0,0.0,17.0
2022-09-12,12,2.0,7.0,9.0,8.0,17.0,0.0,17.0
2022-09-13,13,2.0,6.0,8.0,10.0,18.0,0.0,18.0
2022-09-14,14,2.0,6.0,8.0,10.0,18.0,0.0,18.0
2022-09-15,15,2.0,6.0,8.0,9.0,17.0,0.0,17.0
2022-09-16,16,3.0,8.0,11.0,4.0,15.0,0.0,15.0
2022-09-17,17,3.0,6.0,9.0,6.0,15.0,0.0,15.0
2022-09-18,18,3.0,6.0,9.0,7.0,16.0,0.0,16.0
2022-09-19,19,3.0,6.0,9.0,7.0,16.0,0.0,16.0
2022-09-20,20,1.0,7.0,8.0,10.0,18.0,0.0,18.0
2022-09-21,21,1.0,9.0,10.0,6.0,16.0,0.0,16.0
2022-09-22,22,2.0,8.0,10.0,6.0,16.0,0.0,16.0
2022-09-23,23,4.0,6.0,10.0,6.0,16.0,0.0,16.0
2022-09-24,24,5.0,5.0,10.0,5.0,15.0,0.0,15.0
2022-09-25,25,5.0,5.0,10.0,6.0,16.0,0.0,16.0
2022-09-26,26,5.0,5.0,10.0,6.0,16.0,0.0,16.0
2022-09-27,27,4.0,7.0,11.0,4.0,15.0,0.0,15.0
2022-09-28,28,5.0,5.0,10.0,6.0,16.0,0.0,16.0
2022-09-29,29,5.0,5.0,10.0,6.0,16.0,0.0,16.0
2022-09-30,30,5.0,4.0,9.0,8.0,17.0,0.0,17.0
2022-10-01,1,6.0,4.0,10.0,6.0,16.0,0.0,16.0
2022-10-02,2,6.0,4.0,10.0,6.0,16.0,0.0,16.0
2022-10-03,3,6.0,4.0,10.0,6.0,16.0,0.0,16.0
2022-10-04,4,5.0,5.0,10.0,6.0,16.0,0.0,16.0
2022-10-05,5,5.0,6.0,11.0,4.0,15.0,0.0,15.0
2022-10-06,6,5.0,6.0,11.0,4.0,15.0,0.0,15.0
2022-10-07,7,5.0,4.0,9.0,8.0,17.0,0.0,17.0
2022-10-08,8,4.0,6.0,10.0,4.0,14.0,0.0,14.0
2022-10-09,9,4.0,6.0,10.0,5.0,15.0,0.0,15.0
2022-10-10,10,4.0,6.0,10.0,6.0,16.0,0.0,16.0
2022-10-11,11,5.0,4.0,9.0,8.0,17.0,0.0,17.0
2022-10-12,12,1.0,9.0,10.0,5.0,15.0,0.0,15.0
2022-10-13,13,1.0,9.0,10.0,5.0,15.0,0.0,15.0
2022-10-14,14,2.0,8.0,10.0,6.0,16.0,0.0,16.0
2022-10-15,15,4.0,8.0,12.0,1.0,13.0,0.0,13.0
2022-10-16,16,4.0,8.0,12.0,2.0,14.0,0.0,14.0
2022-10-17,17,4.0,8.0,12.0,2.0,14.0,0.0,14.0
2022-10-18,18,4.0,7.0,11.0,4.0,15.0,0.0,15.0
2022-10-19,19,4.0,10.0,12.0,0.0,12.0,0.0,12.0
2022-10-20,20,4.0,9.0,13.0,0.0,13.0,0.0,13.0
2022-10-21,21,4.0,8.0,12.0,2.0,14.0,0.0,14.0
2022-10-22,22,6.0,5.0,11.0,3.0,14.0,0.0,14.0
2022-10-23,23,6.0,5.0,11.0,3.0,14.0,0.0,14.0
2022-10-24,24,6.0,5.0,11.0,4.0,15.0,0.0,15.0
2022-10-25,25,6.0,5.0,11.0,4.0,15.0,0.0,15.0
2022-10-26,26,3.0,8.0,11.0,2.0,13.0,0.0,13.0
2022-10-27,27,3.0,9.0,12.0,1.0,13.0,0.0,13.0
2022-10-28,28,4.0,8.0,12.0,1.0,13.0,0.0,13.0
2022-10-29,29,4.0,5.0,9.0,4.0,13.0,0.0,13.0
2022-10-30,30,5.0,5.0,10.0,6.0,16.0,0.0,16.0
2022-10-31,31,5.0,5.0,10.0,6.0,16.0,0.0,16.0
2022-11-01,1,6.0,4.0,10.0,6.0,16.0,0.0,16.0
2022-11-02,2,6.0,4.0,10.0,5.0,15.0,0.0,15.0
2022-11-03,3,4.0,7.0,11.0,1.0,12.0,0.0,12.0
2022-11-04,4,4.0,6.0,10.0,2.0,12.0,0.0,12.0
2022-11-05,5,6.0,7.0,12.0,0.0,12.0,0.0,12.0
2022-11-06,6,6.0,7.0,12.0,0.0,12.0,0.0,12.0
2022-11-07,7,6.0,7.0,13.0,0.0,13.0,0.0,13.0
2022-11-08,8,6.0,8.0,10.0,0.0,10.0,0.0,10.0
2022-11-09,9,5.0,9.0,9.0,0.0,9.0,0.0,9.0
2022-11-10,10,5.0,9.0,10.0,0.0,10.0,0.0,10.0
2022-11-11,11,6.0,8.0,11.0,0.0,11.0,0.0,11.0
2022-11-12,12,4.0,9.0,9.0,0.0,9.0,0.0,9.0
2022-11-13,13,5.0,9.0,12.0,0.0,12.0,0.0,12.0
2022-11-14,14,5.0,9.0,12.0,0.0,12.0,0.0,12.0
2022-11-15,15,5.0,9.0,12.0,0.0,12.0,0.0,12.0
2022-11-16,16,5.0,9.0,12.0,0.0,12.0,0.0,12.0
2022-11-17,17,4.0,7.0,11.0,3.0,14.0,0.0,14.0
2022-11-18,18,4.0,9.0,13.0,0.0,13.0,0.0,13.0
2022-11-19,19,4.0,10.0,12.0,0.0,12.0,0.0,12.0
2022-11-20,20,4.0,10.0,12.0,0.0,12.0,0.0,12.0
2022-11-21,21,4.0,10.0,12.0,0.0,12.0,0.0,12.0
2022-11-22,22,6.0,5.0,11.0,3.0,14.0,0.0,14.0
2022-11-23,23,6.0,4.0,10.0,6.0,16.0,0.0,16.0
2022-11-24,24,5.0,5.0,10.0,6.0,16.0,0.0,16.0
2022-11-25,25,5.0,5.0,10.0,6.0,16.0,0.0,16.0
2022-11-26,26,5.0,5.0,10.0,6.0,16.0,0.0,16.0
2022-11-27,27,6.0,5.0,11.0,4.0,15.0,0.0,15.0
2022-11-28,28,6.0,5.0,11.0,4.0,15.0,0.0,15.0
2022-11-29,29,4.0,5.0,9.0,7.0,16.0,0.0,16.0
2022-11-30,30,4.0,6.0,10.0,6.0,16.0,0.0,16.0
2022-12-01,1,4.0,7.0,11.0,3.0,14.0,0.0,14.0
2022-12-02,2,5.0,7.0,12.0,2.0,14.0,0.0,14.0
2022-12-03,3,5.0,7.0,12.0,2.0,14.0,0.0,14.0
2022-12-04,4,5.0,7.0,12.0,2.0,14.0,0.0,14.0
2022-12-05,5,5.0,7.0,12.0,2.0,14.0,0.0,14.0
2022-12-06,6,4.0,6.0,10.0,6.0,16.0,0.0,16.0
2022-12-07,7,3.0,8.0,11.0,4.0,15.0,0.0,15.0
2022-12-08,8,2.0,7.0,9.0,8.0,17.0,0.0,17.0
2022-12-09,9,3.0,7.0,10.0,6.0,16.0,0.0,16.0
2022-12-10,10,6.0,3.0,9.0,6.0,15.0,0.0,15.0
2022-12-11,11,6.0,3.0,9.0,7.0,16.0,0.0,16.0
2022-12-12,12,6.0,3.0,9.0,8.0,17.0,0.0,17.0
2022-12-13,13,4.0,8.0,12.0,1.0,13.0,0.0,13.0
2022-12-14,14,5.0,7.0,12.0,1.0,13.0,0.0,13.0
2022-12-15,15,4.0,6.0,10.0,6.0,16.0,0.0,16.0
2022-12-16,16,4.0,6.0,10.0,6.0,16.0,0.0,16.0
2022-12-17,17,5.0,4.0,9.0,8.0,17.0,0.0,17.0
2022-12-18,18,5.0,4.0,9.0,8.0,17.0,0.0,17.0
2022-12-19,19,5.0,4.0,9.0,8.0,17.0,0.0,17.0
2022-12-20,20,7.0,3.0,10.0,6.0,16.0,0.0,16.0
2022-12-21,21,6.0,4.0,10.0,6.0,16.0,0.0,16.0
2022-12-22,22,5.0,5.0,10.0,6.0,16.0,0.0,16.0
2022-12-23,23,4.0,6.0,10.0,6.0,16.0,0.0,16.0
2022-12-24,24,4.0,6.0,10.0,4.0,14.0,0.0,14.0
2022-12-25,25,4.0,6.0,10.0,4.0,14.0,0.0,14.0
2022-12-26,26,5.0,3.0,8.0,8.0,16.0,0.0,16.0
2022-12-27,27,5.0,4.0,9.0,8.0,17.0,0.0,17.0
2022-12-28,28,6.0,5.0,11.0,4.0,15.0,0.0,15.0
2022-12-29,29,6.0,5.0,11.0,4.0,15.0,0.0,15.0
2022-12-30,30,7.0,3.0,10.0,6.0,16.0,0.0,16.0
2022-12-31,31,5.0,4.0,9.0,6.0,15.0,0.0,15.0
2023-01-01,1,5.0,6.0,11.0,4.0,15.0,0.0,15.0
2023-01-02,2,5.0,6.0,11.0,4.0,15.0,0.0,15.0
2023-01-03,3,5.0,6.0,11.0,4.0,15.0,0.0,15.0
2023-01-04,4,4.0,6.0,10.0,6.0,16.0,0.0,16.0
2023-01-05,5,3.0,8.0,11.0,4.0,15.0,0.0,15.0
2023-01-06,6,3.0,8.0,11.0,4.0,15.0,0.0,15.0
2023-01-07,7,5.0,7.0,12.0,2.0,14.0,0.0,14.0
2023-01-08,8,5.0,7.0,12.0,2.0,14.0,0.0,14.0
2023-01-09,9,5.0,7.0,12.0,2.0,14.0,0.0,14.0
2023-01-10,10,4.0,8.0,12.0,2.0,14.0,0.0,14.0
2023-01-11,11,3.0,10.0,13.0,0.0,13.0,0.0,13.0
2023-01-12,12,2.0,12.0,12.0,0.0,12.0,0.0,12.0
2023-01-13,13,2.0,10.0,12.0,0.0,12.0,0.0,12.0
2023-01-14,14,2.0,8.0,10.0,3.0,13.0,0.0,13.0
2023-01-15,15,2.0,8.0,10.0,5.0,15.0,0.0,15.0
2023-01-16,16,2.0,8.0,10.0,5.0,15.0,0.0,15.0
2023-01-17,17,2.0,9.0,11.0,3.0,14.0,0.0,14.0
2023-01-18,18,2.0,8.0,10.0,6.0,16.0,0.0,16.0
2023-01-19,19,3.0,1.0,4.0,10.0,14.0,0.0,14.0
2023-01-20,20,4.0,0.0,4.0,12.0,16.0,0.0,16.0
2023-01-21,21,4.0,0.0,4.0,15.0,19.0,0.0,19.0
2023-01-22,22,5.0,0.0,5.0,15.0,20.0,0.0,20.0
2023-01-23,23,5.0,0.0,5.0,15.0,20.0,0.0,20.0
2023-01-24,24,4.0,0.0,4.0,11.0,15.0,0.0,15.0
2023-01-25,25,5.0,0.0,5.0,11.0,16.0,0.0,16.0
2023-01-26,26,5.0,0.0,5.0,13.0,18.0,0.0,18.0
2023-01-27,27,6.0,1.0,7.0,11.0,18.0,0.0,18.0
2023-01-28,28,5.0,0.0,5.0,16.0,21.0,0.0,21.0
2023-01-29,29,5.0,0.0,5.0,15.0,20.0,0.0,20.0
2023-01-30,30,5.0,0.0,5.0,15.0,20.0,0.0,20.0
2023-01-31,31,4.0,0.0,4.0,17.0,21.0,0.0,21.0
2023-02-01,1,4.0,0.0,4.0,18.0,22.0,0.0,22.0
2023-02-02,2,3.0,0.0,3.0,19.0,22.0,0.0,22.0
2023-02-03,3,4.0,0.0,4.0,18.0,22.0,0.0,22.0
2023-02-04,4,3.0,0.0,3.0,17.0,20.0,0.0,20.0
2023-02-05,5,5.0,0.0,5.0,16.0,21.0,0.0,21.0
2023-02-06,6,5.0,0.0,5.0,16.0,21.0,0.0,21.0
2023-02-07,7,4.0,0.0,4.0,11.0,15.0,0.0,15.0
2023-02-08,8,2.0,0.0,2.0,11.0,13.0,0.0,13.0
2023-02-09,9,2.0,0.0,2.0,17.0,19.0,0.0,19.0
2023-02-10,10,2.0,0.0,2.0,19.0,21.0,0.0,21.0
2023-02-11,11,4.0,0.0,4.0,17.0,21.0,0.0,21.0
2023-02-12,12,5.0,0.0,5.0,16.0,21.0,0.0,21.0
2023-02-13,13,5.0,0.0,5.0,16.0,21.0,0.0,21.0
2023-02-14,14,4.0,0.0,4.0,15.0,19.0,0.0,19.0
2023-02-15,15,2.0,0.0,2.0,12.0,14.0,10.0,14.0
2023-02-16,16,5.0,0.0,5.0,12.0,17.0,1.0,17.0
2023-02-17,17,3.0,0.0,3.0,12.0,15.0,0.0,15.0
2023-02-18,18,5.0,0.0,5.0,16.0,21.0,0.0,21.0
2023-02-19,19,5.0,0.0,5.0,16.0,21.0,0.0,21.0
2023-02-20,20,5.0,0.0,5.0,16.0,21.0,0.0,21.0
2023-02-21,21,6.0,0.0,6.0,13.0,19.0,0.0,19.0
2023-02-22,22,6.0,0.0,6.0,14.0,20.0,0.0,20.0
2023-02-23,23,4.0,0.0,4.0,16.0,20.0,0.0,20.0
2023-02-24,24,4.0,0.0,4.0,18.0,22.0,0.0,22.0
2023-02-25,25,5.0,0.0,5.0,15.0,20.0,0.0,20.0
2023-02-26,26,6.0,0.0,6.0,14.0,20.0,0.0,20.0
2023-02-27,27,6.0,0.0,6.0,14.0,20.0,0.0,20.0
2023-02-28,28,6.0,0.0,6.0,13.0,19.0,0.0,19.0
2023-03-01,1,7.0,0.0,7.0,12.0,19.0,0.0,19.0
2023-03-02,2,5.0,0.0,5.0,13.0,18.0,0.0,18.0
2023-03-03,3,6.0,0.0,6.0,12.0,18.0,0.0,18.0
2023-03-04,4,7.0,0.0,7.0,12.0,19.0,0.0,19.0
2023-03-05,5,7.0,0.0,7.0,12.0,19.0,0.0,19.0
2023-03-06,6,7.0,0.0,7.0,12.0,19.0,0.0,19.0
2023-03-07,7,4.0,0.0,4.0,15.0,19.0,0.0,19.0
2023-03-08,8,4.0,0.0,4.0,13.0,17.0,0.0,17.0
2023-03-09,9,5.0,0.0,5.0,14.0,19.0,0.0,19.0
2023-03-10,10,7.0,0.0,7.0,9.0,16.0,0.0,16.0
2023-03-11,11,6.0,1.0,7.0,9.0,16.0,0.0,16.0
2023-03-12,12,6.0,2.0,8.0,8.0,16.0,0.0,16.0
2023-03-13,13,6.0,2.0,8.0,8.0,16.0,0.0,16.0
2023-03-14,14,5.0,2.0,7.0,9.0,16.0,0.0,16.0
2023-03-15,15,5.0,2.0,7.0,11.0,18.0,0.0,18.0
2023-03-16,16,5.0,2.0,7.0,11.0,18.0,0.0,18.0
2023-03-17,17,6.0,2.0,8.0,10.0,18.0,0.0,18.0
2023-03-18,18,7.0,0.0,7.0,10.0,17.0,0.0,17.0
2023-03-19,19,6.0,0.0,6.0,13.0,19.0,0.0,19.0
2023-03-20,20,6.0,0.0,6.0,13.0,19.0,0.0,19.0
2023-03-21,21,6.0,0.0,6.0,12.0,18.0,0.0,18.0
2023-03-22,22,7.0,0.0,7.0,12.0,19.0,0.0,19.0
2023-03-23,23,5.0,0.0,5.0,10.0,15.0,0.0,15.0
2023-03-24,24,7.0,0.0,7.0,5.0,12.0,0.0,12.0
2023-03-25,25,4.0,0.0,4.0,10.0,14.0,0.0,14.0
2023-03-26,26,5.0,0.0,5.0,13.0,18.0,0.0,18.0
2023-03-27,27,5.0,0.0,5.0,13.0,18.0,0.0,18.0
2023-03-28,28,6.0,0.0,6.0,10.0,16.0,0.0,16.0
2023-03-29,29,6.0,0.0,6.0,7.0,13.0,0.0,13.0
2023-03-30,30,6.0,0.0,6.0,9.0,15.0,0.0,15.0
2023-03-31,31,6.0,0.0,6.0,12.0,18.0,0.0,18.0
2023-04-01,1,5.0,0.0,5.0,10.0,15.0,0.0,15.0
2023-04-02,2,5.0,0.0,5.0,11.0,16.0,0.0,16.0
2023-04-03,3,5.0,0.0,5.0,11.0,16.0,0.0,16.0
2023-04-04,4,4.0,0.0,4.0,8.0,12.0,0.0,12.0
2023-04-05,5,2.0,0.0,2.0,13.0,15.0,0.0,15.0
2023-04-06,6,5.0,0.0,5.0,12.0,17.0,0.0,17.0
2023-04-07,7,6.0,0.0,6.0,13.0,19.0,0.0,19.0
2023-04-08,8,7.0,0.0,7.0,12.0,19.0,0.0,19.0
2023-04-09,9,7.0,0.0,7.0,12.0,19.0,0.0,19.0
2023-04-10,10,7.0,0.0,7.0,12.0,19.0,0.0,19.0
2023-04-11,11,7.0,0.0,7.0,12.0,19.0,0.0,19.0
2023-04-12,12,6.0,0.0,6.0,11.0,17.0,0.0,17.0
2023-04-13,13,5.0,0.0,5.0,11.0,16.0,0.0,16.0
2023-04-14,14,5.0,0.0,5.0,16.0,21.0,0.0,21.0
2023-04-15,15,6.0,0.0,6.0,14.0,20.0,0.0,20.0
2023-04-16,16,7.0,0.0,7.0,11.0,18.0,0.0,18.0
2023-04-17,17,6.0,0.0,6.0,12.0,18.0,0.0,18.0
2023-04-18,18,7.0,0.0,7.0,11.0,18.0,0.0,18.0
2023-04-19,19,7.0,0.0,7.0,11.0,18.0,0.0,18.0
2023-04-20,20,6.0,0.0,6.0,12.0,18.0,0.0,18.0
2023-04-21,21,5.0,0.0,5.0,11.0,16.0,0.0,16.0
2023-04-22,22,8.0,0.0,8.0,9.0,17.0,0.0,17.0
2023-04-23,23,8.0,0.0,8.0,9.0,17.0,0.0,17.0
2023-04-24,24,8.0,0.0,8.0,9.0,17.0,0.0,17.0
2023-04-25,25,6.0,0.0,6.0,11.0,17.0,0.0,17.0
2023-04-26,26,5.0,0.0,5.0,16.0,21.0,0.0,21.0
2023-04-27,27,5.0,0.0,5.0,16.0,21.0,0.0,21.0
2023-04-28,28,6.0,0.0,6.0,14.0,20.0,0.0,20.0
2023-04-29,29,8.0,0.0,8.0,10.0,18.0,0.0,18.0
2023-04-30,30,8.0,0.0,8.0,10.0,18.0,0.0,18.0
2023-05-01,1,8.0,0.0,8.0,10.0,18.0,0.0,18.0
2023-05-02,2,7.0,0.0,7.0,11.0,18.0,0.0,18.0
2023-05-03,3,7.0,0.0,7.0,12.0,19.0,0.0,19.0
2023-05-04,4,5.0,0.0,5.0,15.0,20.0,0.0,20.0
2023-05-05,5,6.0,0.0,6.0,14.0,20.0,0.0,20.0
2023-05-06,6,6.0,0.0,6.0,14.0,20.0,0.0,20.0
2023-05-07,7,6.0,0.0,6.0,14.0,20.0,0.0,20.0
2023-05-08,8,6.0,0.0,6.0,14.0,20.0,0.0,20.0
2023-05-09,9,9.0,0.0,9.0,8.0,17.0,0.0,17.0
2023-05-10,10,5.0,0.0,5.0,16.0,21.0,0.0,21.0
2023-05-11,11,5.0,0.0,5.0,16.0,21.0,0.0,21.0
2023-05-12,12,5.0,0.0,5.0,16.0,21.0,0.0,21.0
2023-05-13,13,7.0,0.0,7.0,12.0,19.0,0.0,19.0
2023-05-14,14,7.0,0.0,7.0,12.0,19.0,0.0,19.0
2023-05-15,15,7.0,0.0,7.0,12.0,19.0,0.0,19.0
2023-05-16,16,8.0,0.0,8.0,10.0,18.0,0.0,18.0
2023-05-17,17,7.0,0.0,7.0,12.0,19.0,0.0,19.0
2023-05-18,18,6.0,0.0,6.0,13.0,19.0,0.0,19.0
2023-05-19,19,5.0,0.0,5.0,12.0,17.0,2.0,17.0
2023-05-20,20,4.0,0.0,4.0,16.0,20.0,0.0,20.0
2023-05-21,21,5.0,0.0,5.0,16.0,21.0,0.0,21.0
2023-05-22,22,5.0,0.0,5.0,15.0,20.0,0.0,20.0
2023-05-23,23,4.0,0.0,4.0,13.0,17.0,0.0,17.0
2023-05-24,24,7.0,0.0,7.0,12.0,19.0,0.0,19.0
2023-05-25,25,7.0,0.0,7.0,12.0,19.0,0.0,19.0
2023-05-26,26,8.0,0.0,8.0,10.0,18.0,0.0,18.0
2023-05-27,27,7.0,0.0,7.0,12.0,19.0,0.0,19.0
2023-05-28,28,7.0,0.0,7.0,12.0,19.0,0.0,19.0
2023-05-29,29,6.0,0.0,6.0,14.0,20.0,0.0,20.0
2023-05-30,30,5.0,0.0,5.0,15.0,20.0,0.0,20.0
2023-05-31,31,6.0,0.0,6.0,14.0,20.0,0.0,20.0
2023-06-01,1,6.0,0.0,6.0,14.0,20.0,0.0,20.0
2023-06-02,2,4.0,0.0,4.0,18.0,22.0,0.0,22.0
2023-06-03,3,5.0,0.0,5.0,15.0,20.0,0.0,20.0
2023-06-04,4,6.0,0.0,6.0,14.0,20.0,0.0,20.0
2023-06-05,5,6.0,0.0,6.0,14.0,20.0,0.0,20.0
2023-06-06,6,5.0,0.0,5.0,13.0,18.0,2.0,18.0
2023-06-07,7,4.0,0.0,4.0,17.0,21.0,0.0,21.0
2023-06-08,8,3.0,0.0,3.0,16.0,19.0,0.0,19.0
2023-06-09,9,3.0,0.0,3.0,17.0,20.0,0.0,20.0
2023-06-10,10,5.0,0.0,5.0,14.0,19.0,0.0,19.0
2023-06-11,11,5.0,0.0,5.0,15.0,20.0,0.0,20.0
2023-06-12,12,5.0,0.0,5.0,15.0,20.0,0.0,20.0
2023-06-13,13,5.0,0.0,5.0,13.0,18.0,0.0,18.0
2023-06-14,14,5.0,0.0,5.0,14.0,19.0,0.0,19.0
2023-06-15,15,6.0,0.0,6.0,14.0,20.0,0.0,20.0
2023-06-16,16,5.0,0.0,5.0,16.0,21.0,0.0,21.0
2023-06-17,17,7.0,0.0,7.0,12.0,19.0,0.0,19.0
2023-06-18,18,7.0,0.0,7.0,12.0,19.0,0.0,19.0
2023-06-19,19,7.0,0.0,7.0,12.0,19.0,0.0,19.0
2023-06-20,20,7.0,0.0,7.0,12.0,19.0,0.0,19.0
2023-06-21,21,8.0,0.0,8.0,10.0,18.0,0.0,18.0
2023-06-22,22,8.0,0.0,8.0,10.0,18.0,0.0,18.0
2023-06-23,23,8.0,0.0,8.0,10.0,18.0,0.0,18.0
2023-06-24,24,7.0,0.0,7.0,11.0,18.0,0.0,18.0
2023-06-25,25,7.0,0.0,7.0,12.0,19.0,0.0,19.0
2023-06-26,26,7.0,0.0,7.0,12.0,19.0,0.0,19.0
2023-06-27,27,7.0,0.0,7.0,11.0,18.0,0.0,18.0
2023-06-28,28,5.0,0.0,5.0,15.0,20.0,0.0,20.0
2023-06-29,29,5.0,0.0,5.0,16.0,21.0,0.0,21.0
2023-06-30,30,4.0,0.0,4.0,15.0,19.0,0.0,19.0
2023-07-01,1,1.0,0.0,1.0,15.0,16.0,0.0,16.0
2023-07-02,2,1.0,0.0,1.0,15.0,16.0,0.0,16.0
2023-07-03,3,1.0,0.0,1.0,15.0,16.0,1.0,16.0
2023-07-04,4,5.0,0.0,5.0,15.0,20.0,0.0,20.0
2023-07-05,5,5.0,0.0,5.0,15.0,20.0,0.0,20.0
2023-07-06,6,5.0,0.0,5.0,15.0,20.0,0.0,20.0
2023-07-07,7,4.0,0.0,4.0,18.0,22.0,0.0,22.0
2023-07-08,8,6.0,0.0,6.0,14.0,20.0,0.0,20.0
2023-07-09,9,6.0,0.0,6.0,14.0,20.0,0.0,20.0
2023-07-10,10,6.0,0.0,6.0,14.0,20.0,0.0,20.0
2023-07-11,11,5.0,0.0,5.0,13.0,18.0,2.0,18.0
2023-07-12,12,6.0,0.0,6.0,11.0,17.0,2.0,17.0
2023-07-13,13,6.0,0.0,6.0,12.0,18.0,0.0,18.0
2023-07-14,14,6.0,0.0,6.0,11.0,17.0,0.0,17.0
2023-07-15,15,8.0,0.0,8.0,9.0,17.0,0.0,17.0
2023-07-16,16,7.0,0.0,7.0,11.0,18.0,0.0,18.0
2023-07-17,17,7.0,0.0,7.0,11.0,18.0,0.0,18.0
2023-07-18,18,6.0,0.0,6.0,11.0,17.0,0.0,17.0
2023-07-19,19,7.0,0.0,7.0,10.0,17.0,0.0,17.0
2023-07-20,20,7.0,0.0,7.0,8.0,15.0,0.0,15.0
2023-07-21,21,5.0,0.0,5.0,5.0,10.0,0.0,10.0
2023-07-22,22,5.0,0.0,5.0,7.0,12.0,2.0,12.0
2023-07-23,23,7.0,0.0,7.0,5.0,12.0,0.0,12.0
2023-07-24,24,7.0,0.0,7.0,5.0,12.0,0.0,12.0
2023-07-25,25,5.0,0.0,5.0,7.0,12.0,0.0,12.0
2023-07-26,26,6.0,0.0,6.0,10.0,16.0,0.0,16.0
2023-07-27,27,4.0,0.0,4.0,12.0,16.0,0.0,16.0
2023-07-28,28,4.0,0.0,4.0,12.0,16.0,0.0,16.0
2023-07-29,29,4.0,0.0,4.0,8.0,12.0,0.0,12.0
2023-07-30,30,4.0,0.0,4.0,10.0,14.0,0.0,14.0
2023-07-31,31,5.0,0.0,5.0,9.0,14.0,4.0,14.0
2023-08-01,1,4.0,0.0,4.0,7.0,11.0,0.0,11.0
2023-08-02,2,3.0,0.0,3.0,6.0,9.0,0.0,9.0
2023-08-03,3,1.0,0.0,1.0,7.0,8.0,6.0,8.0
2023-08-04,4,2.0,0.0,2.0,9.0,11.0,4.0,11.0
2023-08-05,5,2.0,0.0,2.0,13.0,15.0,0.0,15.0
2023-08-06,6,2.0,0.0,2.0,13.0,15.0,0.0,15.0
2023-08-07,7,2.0,0.0,2.0,14.0,16.0,0.0,16.0
2023-08-08,8,2.0,1.0,3.0,10.0,13.0,2.0,13.0
2023-08-09,9,2.0,1.0,3.0,10.0,13.0,2.0,13.0
2023-08-10,10,2.0,0.0,2.0,9.0,11.0,2.0,11.0
2023-08-11,11,2.0,0.0,2.0,11.0,13.0,2.0,13.0
2023-08-12,12,3.0,0.0,3.0,13.0,16.0,0.0,16.0
2023-08-13,13,3.0,0.0,3.0,16.0,19.0,0.0,19.0
2023-08-14,14,3.0,0.0,3.0,16.0,19.0,0.0,19.0
2023-08-15,15,7.0,0.0,7.0,6.0,13.0,0.0,13.0
2023-08-16,16,5.0,0.0,5.0,9.0,14.0,2.0,14.0
2023-08-17,17,4.0,0.0,4.0,10.0,14.0,0.0,14.0
2023-08-18,18,4.0,0.0,4.0,11.0,15.0,0.0,15.0
2023-08-19,19,5.0,0.0,5.0,13.0,18.0,0.0,18.0
2023-08-20,20,5.0,0.0,5.0,15.0,20.0,0.0,20.0
2023-08-21,21,5.0,0.0,5.0,15.0,20.0,0.0,20.0
2023-08-22,22,6.0,0.0,6.0,11.0,17.0,0.0,17.0
2023-08-23,23,6.0,0.0,6.0,12.0,18.0,0.0,18.0
2023-08-24,24,6.0,0.0,6.0,12.0,18.0,0.0,18.0
2023-08-25,25,6.0,0.0,6.0,9.0,15.0,2.0,15.0
2023-08-26,26,9.0,0.0,9.0,8.0,17.0,0.0,17.0
2023-08-27,27,9.0,0.0,9.0,8.0,17.0,0.0,17.0
2023-08-28,28,9.0,0.0,9.0,8.0,17.0,0.0,17.0
2023-08-29,29,7.0,0.0,7.0,8.0,15.0,0.0,15.0
2023-08-30,30,6.0,0.0,6.0,6.0,12.0,2.0,12.0
2023-08-31,31,7.0,0.0,7.0,8.0,15.0,2.0,15.0
2023-09-01,1,7.0,0.0,7.0,8.0,15.0,0.0,15.0
2023-09-02,2,6.0,0.0,6.0,5.0,11.0,0.0,11.0
2023-09-03,3,7.0,0.0,7.0,9.0,16.0,0.0,16.0
2023-09-04,4,7.0,0.0,7.0,9.0,16.0,0.0,16.0
2023-09-05,5,7.0,0.0,7.0,9.0,16.0,0.0,16.0
2023-09-06,6,6.0,0.0,6.0,11.0,17.0,0.0,17.0
2023-09-07,7,5.0,0.0,5.0,11.0,16.0,0.0,16.0
2023-09-08,8,5.0,0.0,5.0,10.0,15.0,0.0,15.0
2023-09-09,9,6.0,0.0,6.0,12.0,18.0,0.0,18.0
2023-09-10,10,6.0,0.0,6.0,14.0,20.0,0.0,20.0
2023-09-11,11,6.0,0.0,6.0,14.0,20.0,0.0,20.0
2023-09-12,12,6.0,0.0,6.0,11.0,17.0,0.0,17.0
2023-09-13,13,5.0,0.0,5.0,13.0,18.0,0.0,18.0
2023-09-14,14,6.0,0.0,6.0,12.0,18.0,0.0,18.0
2023-09-15,15,5.0,0.0,5.0,15.0,20.0,0.0,20.0
2023-09-16,16,6.0,0.0,6.0,14.0,20.0,0.0,20.0
2023-09-17,17,6.0,0.0,6.0,14.0,20.0,0.0,20.0
2023-09-18,18,6.0,0.0,6.0,14.0,20.0,0.0,20.0
2023-09-19,19,6.0,0.0,6.0,10.0,16.0,0.0,16.0
2023-09-20,20,3.0,0.0,3.0,13.0,16.0,0.0,16.0
2023-09-21,21,4.0,0.0,4.0,13.0,17.0,4.0,17.0
2023-09-22,22,2.0,0.0,2.0,11.0,13.0,6.0,13.0
2023-09-23,23,7.0,0.0,7.0,9.0,16.0,0.0,16.0
2023-09-24,24,7.0,0.0,7.0,10.0,17.0,0.0,17.0
2023-09-25,25,3.0,0.0,3.0,14.0,17.0,5.0,17.0
2023-09-26,26,3.0,11.0,12.0,0.0,12.0,0.0,12.0
2023-09-27,27,3.0,10.0,12.0,0.0,12.0,0.0,12.0
2023-09-28,28,3.0,7.0,10.0,3.0,13.0,0.0,13.0
2023-09-29,29,2.0,7.0,9.0,6.0,15.0,0.0,15.0
2023-09-30,30,2.0,5.0,7.0,9.0,16.0,0.0,16.0
2023-10-01,1,2.0,5.0,7.0,11.0,18.0,0.0,18.0
2023-10-02,2,2.0,5.0,7.0,11.0,18.0,0.0,18.0
2023-10-03,3,1.0,3.0,4.0,6.0,10.0,0.0,10.0
2023-10-04,4,3.0,0.0,3.0,11.0,14.0,0.0,14.0
2023-10-05,5,6.0,0.0,6.0,10.0,16.0,0.0,16.0
2023-10-06,6,6.0,0.0,6.0,10.0,16.0,0.0,16.0
2023-10-07,7,9.0,0.0,9.0,7.0,16.0,0.0,16.0
2023-10-08,8,9.0,0.0,9.0,7.0,16.0,0.0,16.0
2023-10-09,9,9.0,0.0,9.0,7.0,16.0,0.0,16.0
2023-10-10,10,9.0,0.0,9.0,5.0,14.0,0.0,14.0
2023-10-11,11,7.0,0.0,7.0,7.0,14.0,0.0,14.0
2023-10-12,12,7.0,0.0,7.0,9.0,16.0,0.0,16.0
2023-10-13,13,8.0,0.0,8.0,8.0,16.0,0.0,16.0
2023-10-14,14,7.0,0.0,7.0,10.0,17.0,0.0,17.0
2023-10-15,15,7.0,0.0,7.0,12.0,19.0,0.0,19.0
2023-10-16,16,7.0,0.0,7.0,12.0,19.0,0.0,19.0
2023-10-17,17,7.0,0.0,7.0,11.0,18.0,0.0,18.0
2023-10-18,18,7.0,0.0,7.0,10.0,17.0,0.0,17.0
2023-10-19,19,7.0,0.0,7.0,12.0,19.0,0.0,19.0
2023-10-20,20,5.0,0.0,5.0,8.0,13.0,0.0,13.0
2023-10-21,21,7.0,0.0,7.0,9.0,16.0,0.0,16.0
2023-10-22,22,7.0,0.0,7.0,9.0,16.0,0.0,16.0
2023-10-23,23,7.0,0.0,7.0,9.0,16.0,0.0,16.0
2023-10-24,24,6.0,0.0,6.0,11.0,17.0,0.0,17.0
2023-10-25,25,8.0,0.0,8.0,8.0,16.0,0.0,16.0
2023-10-26,26,8.0,0.0,8.0,6.0,14.0,0.0,14.0
2023-10-27,27,8.0,0.0,8.0,8.0,16.0,0.0,16.0
2023-10-28,28,8.0,0.0,8.0,8.0,16.0,0.0,16.0
2023-10-29,29,8.0,0.0,8.0,9.0,17.0,0.0,17.0
2023-10-30,30,8.0,0.0,8.0,10.0,18.0,0.0,18.0
2023-10-31,31,8.0,0.0,8.0,10.0,18.0,0.0,18.0
2023-11-01,1,9.0,0.0,9.0,8.0,17.0,0.0,17.0
2023-11-02,2,8.0,0.0,8.0,9.0,17.0,0.0,17.0
2023-11-03,3,8.0,0.0,8.0,10.0,18.0,0.0,18.0
2023-11-04,4,8.0,0.0,8.0,10.0,18.0,0.0,18.0
2023-11-05,5,8.0,0.0,8.0,10.0,18.0,0.0,18.0
2023-11-06,6,8.0,0.0,8.0,10.0,18.0,0.0,18.0
2023-11-07,7,8.0,0.0,8.0,10.0,18.0,0.0,18.0
2023-11-08,8,7.0,0.0,7.0,11.0,18.0,0.0,18.0
2023-11-09,9,8.0,0.0,8.0,10.0,18.0,0.0,18.0
2023-11-10,10,7.0,0.0,7.0,10.0,17.0,0.0,17.0
2023-11-11,11,6.0,0.0,6.0,14.0,20.0,0.0,20.0
2023-11-12,12,6.0,0.0,6.0,14.0,20.0,0.0,20.0
2023-11-13,13,6.0,0.0,6.0,14.0,20.0,0.0,20.0
2023-11-14,14,7.0,0.0,7.0,12.0,19.0,0.0,19.0
2023-11-15,15,7.0,0.0,7.0,11.0,18.0,0.0,18.0
2023-11-16,16,6.0,0.0,6.0,12.0,18.0,0.0,18.0
2023-11-17,17,6.0,0.0,6.0,12.0,18.0,0.0,18.0
2023-11-18,18,7.0,0.0,7.0,11.0,18.0,0.0,18.0
2023-11-19,19,7.0,0.0,7.0,11.0,18.0,0.0,18.0
2023-11-20,20,7.0,0.0,7.0,11.0,18.0,0.0,18.0
2023-11-21,21,7.0,0.0,7.0,10.0,17.0,0.0,17.0
2023-11-22,22,7.0,0.0,7.0,12.0,19.0,0.0,19.0
2023-11-23,23,6.0,0.0,6.0,11.0,17.0,0.0,17.0
2023-11-24,24,6.0,0.0,6.0,11.0,17.0,0.0,17.0
2023-11-25,25,7.0,0.0,7.0,11.0,18.0,0.0,18.0
2023-11-26,26,6.0,0.0,6.0,14.0,20.0,0.0,20.0
2023-11-27,27,6.0,0.0,6.0,14.0,20.0,0.0,20.0
2023-11-28,28,6.0,0.0,6.0,13.0,19.0,0.0,19.0
2023-11-29,29,5.0,0.0,5.0,14.0,19.0,0.0,19.0
2023-11-30,30,6.0,0.0,6.0,12.0,18.0,0.0,18.0
2023-12-01,1,7.0,0.0,7.0,11.0,18.0,1.0,18.0
2023-12-02,2,0.0,13.0,13.0,0.0,13.0,0.0,13.0
2023-12-03,3,0.0,13.0,13.0,0.0,13.0,0.0,13.0
2023-12-04,4,0.0,13.0,13.0,0.0,13.0,0.0,13.0
2023-12-05,5,0.0,10.0,10.0,1.0,11.0,0.0,11.0
2023-12-06,6,0.0,10.0,10.0,1.0,11.0,0.0,11.0
2023-12-07,7,0.0,10.0,10.0,5.0,15.0,0.0,15.0
2023-12-08,8,5.0,2.0,7.0,9.0,16.0,0.0,16.0
2023-12-09,9,6.0,2.0,8.0,7.0,15.0,0.0,15.0
2023-12-10,10,6.0,2.0,8.0,7.0,15.0,0.0,15.0
2023-12-11,11,7.0,0.0,7.0,8.0,15.0,0.0,15.0
2023-12-12,12,7.0,0.0,7.0,6.0,13.0,0.0,13.0
2023-12-13,13,8.0,0.0,8.0,10.0,18.0,0.0,18.0
2023-12-14,14,9.0,0.0,9.0,7.0,16.0,0.0,16.0
2023-12-15,15,8.0,0.0,8.0,10.0,18.0,0.0,18.0
2023-12-16,16,5.0,0.0,5.0,11.0,16.0,0.0,16.0
2023-12-17,17,5.0,0.0,5.0,11.0,16.0,0.0,16.0
2023-12-18,18,7.0,0.0,7.0,11.0,18.0,0.0,18.0
2023-12-19,19,7.0,0.0,7.0,12.0,19.0,0.0,19.0
2023-12-20,20,6.0,0.0,6.0,11.0,17.0,0.0,17.0
2023-12-21,21,7.0,0.0,7.0,11.0,18.0,0.0,18.0
2023-12-22,22,8.0,0.0,8.0,5.0,13.0,0.0,13.0
2023-12-23,23,10.0,0.0,10.0,4.0,14.0,0.0,14.0
2023-12-24,24,10.0,0.0,10.0,4.0,14.0,0.0,14.0
2023-12-25,25,10.0,0.0,10.0,4.0,14.0,0.0,14.0
2023-12-26,26,10.0,0.0,10.0,4.0,14.0,0.0,14.0
2023-12-27,27,10.0,0.0,10.0,4.0,14.0,0.0,14.0
2023-12-28,28,10.0,0.0,10.0,6.0,16.0,0.0,16.0
2023-12-29,29,10.0,2.0,12.0,2.0,14.0,0.0,14.0
2023-12-30,30,10.0,1.0,11.0,2.0,13.0,0.0,13.0
2023-12-31,31,10.0,1.0,11.0,2.0,13.0,0.0,13.0
2024-01-01,1,10.0,1.0,11.0,2.0,13.0,0.0,13.0
2024-01-02,2,6.0,7.0,13.0,0.0,13.0,0.0,13.0
2024-01-03,3,6.0,5.0,11.0,1.0,12.0,0.0,12.0
2024-01-04,4,4.0,4.0,8.0,5.0,13.0,0.0,13.0
2024-01-05,5,5.0,6.0,11.0,4.0,15.0,0.0,15.0
2024-01-06,6,8.0,3.0,11.0,4.0,15.0,0.0,15.0
2024-01-07,7,8.0,3.0,11.0,4.0,15.0,0.0,15.0
2024-01-08,8,8.0,3.0,11.0,4.0,15.0,0.0,15.0
2024-01-09,9,8.0,2.0,10.0,4.0,14.0,0.0,14.0
2024-01-10,10,8.0,2.0,10.0,5.0,15.0,0.0,15.0
2024-01-11,11,7.0,2.0,9.0,5.0,14.0,0.0,14.0
2024-01-12,12,6.0,2.0,8.0,6.0,14.0,0.0,14.0
2024-01-13,13,7.0,2.0,9.0,6.0,15.0,0.0,15.0
2024-01-14,14,7.0,2.0,9.0,6.0,15.0,0.0,15.0
2024-01-15,15,7.0,2.0,9.0,6.0,15.0,0.0,15.0
2024-01-16,16,7.0,2.0,9.0,7.0,16.0,0.0,16.0
2024-01-17,17,7.0,2.0,9.0,8.0,17.0,0.0,17.0
2024-01-18,18,8.0,0.0,8.0,7.0,15.0,0.0,15.0
2024-01-19,19,5.0,0.0,5.0,11.0,16.0,2.0,16.0
2024-01-20,20,6.0,0.0,6.0,12.0,18.0,2.0,18.0
2024-01-21,21,6.0,0.0,6.0,12.0,18.0,2.0,18.0
2024-01-22,22,5.0,0.0,5.0,13.0,18.0,2.0,18.0
2024-01-23,23,7.0,0.0,7.0,10.0,17.0,2.0,17.0
2024-01-24,24,8.0,0.0,8.0,8.0,16.0,0.0,16.0
2024-01-25,25,8.0,0.0,8.0,9.0,17.0,0.0,17.0
2024-01-26,26,8.0,0.0,8.0,7.0,15.0,2.0,15.0
2024-01-27,27,9.0,0.0,9.0,5.0,14.0,2.0,14.0
2024-01-28,28,8.0,0.0,8.0,7.0,15.0,2.0,15.0
2024-01-29,29,9.0,0.0,9.0,6.0,15.0,2.0,15.0
2024-01-30,30,9.0,0.0,9.0,6.0,15.0,2.0,15.0
2024-01-31,31,8.0,0.0,8.0,8.0,16.0,2.0,16.0
2024-02-01,1,7.0,0.0,7.0,6.0,13.0,2.0,13.0
2024-02-02,2,8.0,0.0,8.0,8.0,16.0,2.0,16.0
2024-02-03,3,8.0,4.0,12.0,1.0,13.0,0.0,13.0
2024-02-04,4,8.0,4.0,12.0,1.0,13.0,0.0,13.0
2024-02-05,5,9.0,2.0,11.0,2.0,13.0,2.0,13.0
2024-02-06,6,5.0,1.0,6.0,5.0,11.0,2.0,11.0
2024-02-07,7,5.0,1.0,6.0,4.0,10.0,2.0,10.0
2024-02-08,8,6.0,0.0,6.0,5.0,11.0,2.0,11.0
2024-02-09,9,5.0,1.0,6.0,9.0,15.0,2.0,15.0
2024-02-10,10,4.0,1.0,5.0,9.0,14.0,2.0,14.0
2024-02-11,11,5.0,1.0,6.0,10.0,16.0,2.0,16.0
2024-02-12,12,5.0,1.0,6.0,10.0,16.0,2.0,16.0
2024-02-13,13,7.0,1.0,8.0,7.0,15.0,2.0,15.0
2024-02-14,14,7.0,1.0,8.0,5.0,13.0,0.0,13.0
2024-02-15,15,6.0,1.0,7.0,5.0,12.0,0.0,12.0
2024-02-16,16,6.0,1.0,7.0,8.0,15.0,0.0,15.0
2024-02-17,17,8.0,1.0,9.0,6.0,15.0,0.0,15.0
2024-02-18,18,8.0,1.0,9.0,7.0,16.0,0.0,16.0
2024-02-19,19,9.0,0.0,9.0,7.0,16.0,0.0,16.0
2024-02-20,20,9.0,0.0,9.0,7.0,16.0,0.0,16.0
2024-02-21,21,9.0,0.0,9.0,6.0,15.0,0.0,15.0
2024-02-22,22,7.0,0.0,7.0,10.0,17.0,0.0,17.0
2024-02-23,23,8.0,0.0,8.0,10.0,18.0,0.0,18.0
2024-02-24,24,8.0,0.0,8.0,9.0,17.0,0.0,17.0
2024-02-25,25,8.0,0.0,8.0,10.0,18.0,0.0,18.0
2024-02-26,26,8.0,0.0,8.0,10.0,18.0,0.0,18.0
2024-02-27,27,8.0,0.0,8.0,9.0,17.0,0.0,17.0
2024-02-28,28,6.0,0.0,6.0,7.0,13.0,0.0,13.0
2024-02-29,29,6.0,0.0,6.0,5.0,11.0,0.0,11.0
2024-03-01,1,6.0,0.0,6.0,8.0,14.0,0.0,14.0
2024-03-02,2,6.0,0.0,6.0,7.0,13.0,0.0,13.0
2024-03-03,3,7.0,0.0,7.0,11.0,18.0,0.0,18.0
2024-03-04,4,7.0,0.0,7.0,11.0,18.0,0.0,18.0
2024-03-05,5,5.0,0.0,5.0,11.0,16.0,0.0,16.0
2024-03-06,6,7.0,0.0,7.0,9.0,16.0,0.0,16.0
2024-03-07,7,7.0,0.0,7.0,7.0,14.0,0.0,14.0
2024-03-08,8,4.0,0.0,4.0,5.0,9.0,0.0,9.0
2024-03-09,9,5.0,0.0,5.0,5.0,10.0,0.0,10.0
2024-03-10,10,5.0,0.0,5.0,6.0,11.0,0.0,11.0
2024-03-11,11,5.0,0.0,5.0,7.0,12.0,0.0,12.0
2024-03-12,12,6.0,0.0,6.0,9.0,15.0,0.0,15.0
2024-03-13,13,4.0,0.0,4.0,11.0,15.0,0.0,15.0
2024-03-14,14,3.0,0.0,3.0,7.0,10.0,0.0,10.0
2024-03-15,15,3.0,0.0,3.0,8.0,11.0,0.0,11.0
2024-03-16,16,4.0,0.0,4.0,8.0,12.0,0.0,12.0
2024-03-17,17,5.0,0.0,5.0,7.0,12.0,0.0,12.0
2024-03-18,18,5.0,0.0,5.0,11.0,16.0,0.0,16.0
2024-03-19,19,8.0,0.0,8.0,9.0,17.0,0.0,17.0
2024-03-20,20,7.0,0.0,7.0,9.0,16.0,0.0,16.0
2024-03-21,21,6.0,0.0,6.0,11.0,17.0,0.0,17.0
2024-03-22,22,5.0,0.0,5.0,11.0,16.0,0.0,16.0
2024-03-23,23,6.0,0.0,6.0,12.0,18.0,0.0,18.0
2024-03-24,24,6.0,0.0,6.0,12.0,18.0,0.0,18.0
2024-03-25,25,6.0,0.0,6.0,12.0,18.0,0.0,18.0
2024-03-26,26,7.0,0.0,7.0,8.0,15.0,0.0,15.0
2024-03-27,27,6.0,0.0,6.0,8.0,14.0,0.0,14.0
2024-03-28,28,6.0,0.0,6.0,8.0,14.0,0.0,14.0
2024-03-29,29,5.0,0.0,5.0,6.0,11.0,0.0,11.0
2024-03-30,30,5.0,0.0,5.0,6.0,11.0,0.0,11.0
2024-03-31,31,5.0,0.0,5.0,6.0,11.0,0.0,11.0
2024-04-01,1,5.0,0.0,5.0,6.0,11.0,0.0,11.0
2024-04-02,2,4.0,0.0,4.0,8.0,12.0,0.0,12.0
2024-04-03,3,6.0,0.0,6.0,9.0,15.0,0.0,15.0
2024-04-04,4,10.0,0.0,10.0,6.0,16.0,0.0,16.0
2024-04-05,5,7.0,0.0,7.0,7.0,14.0,0.0,14.0
2024-04-06,6,9.0,0.0,9.0,5.0,14.0,0.0,14.0
2024-04-07,7,9.0,0.0,9.0,5.0,14.0,0.0,14.0
2024-04-08,8,9.0,0.0,9.0,5.0,14.0,0.0,14.0
2024-04-09,9,8.0,0.0,8.0,4.0,12.0,0.0,12.0
2024-04-10,10,8.0,0.0,8.0,6.0,14.0,0.0,14.0
2024-04-11,11,6.0,0.0,6.0,6.0,12.0,0.0,12.0
2024-04-12,12,3.0,0.0,3.0,5.0,8.0,0.0,8.0
2024-04-13,13,2.0,0.0,2.0,8.0,10.0,0.0,10.0
2024-04-14,14,4.0,0.0,4.0,8.0,12.0,0.0,12.0
2024-04-15,15,4.0,0.0,4.0,8.0,12.0,0.0,12.0
2024-04-16,16,5.0,0.0,5.0,7.0,12.0,0.0,12.0
2024-04-17,17,6.0,0.0,6.0,8.0,14.0,0.0,14.0

================
File: data/Monthly Census 2024(Aug).csv
================
Date,August,,Census,Sits,Held Beds,Held Due To Covid Swab/Quarantine,Closed Beds,Daily Admits from CIU,Daily Admits from CL,Daily Admits from ED,Daily Admits from OSH,Total Daily Admits,Daily Readmits,Total Daily Discharges,,,
8/1/24,1,Thursday,12,1,9,0,0,1,0,1,0,2,0,1,,,
8/2/24,2,Friday,12,1,10,0,0,0,0,0,0,0,0,2,,,
8/3/24,3,Saturday,11,1,10,0,0,0,0,1,0,1,1,0,,,
8/4/24,4,Sunday,12,1,8,0,0,0,0,1,0,1,1,0,,,
8/5/24,5,Monday,12,1,9,0,0,1,0,1,0,2,0,3,,,
8/6/24,6,Tuesday,11,1,8,0,0,0,1,2,0,3,1,0,,,
8/7/24,7,Wednesday,14,1,9,0,0,0,1,0,0,1,0,2,,,
8/8/24,8,Thursday,13,1,7,0,0,0,0,1,0,1,0,3,,,
8/9/24,9,Friday,11,1,5,0,0,1,0,3,0,4,0,2,,,
8/10/24,10,Saturday,14,2,7,0,0,0,0,1,0,1,0,0,,,
8/11/24,11,Sunday,14,2,7,0,2,0,0,0,0,0,0,0,,,
8/12/24,12,Monday,14,2,7,0,2,0,0,2,0,2,0,3,,,
8/13/24,13,Tuesday,13,1,7,0,0,0,0,2,0,2,0,3,,,
8/14/24,14,Wednesday,12,1,9,0,0,1,0,1,0,2,0,6,,,
8/15/24,15,Thursday,8,1,6,0,0,0,0,1,0,1,0,1,,,
8/16/24,16,Friday,8,1,5,0,0,0,0,2,0,2,0,0,,,
8/17/24,17,Saturday,10,1,6,0,0,0,0,0,0,0,0,0,,,
8/18/24,18,Sunday,12,1,7,0,0,0,1,1,0,2,0,0,,,
8/19/24,19,Monday,12,1,7,0,0,0,1,0,0,1,0,5,,,
8/20/24,20,Tuesday,8,1,6,0,2,0,0,2,0,2,0,1,,,
8/21/24,21,Wednesday,9,1,6,0,2,0,0,3,0,3,0,2,,,
8/22/24,22,Thursday,10,1,6,0,2,0,0,5,0,5,0,1,,,
8/23/24,23,Friday,14,1,10,0,0,0,1,1,0,2,0,5,,,
8/24/24,24,Saturday,11,4,10,0,0,0,0,0,0,0,0,0,,,
8/25/24,25,Sunday,11,3,10,0,0,0,0,0,0,0,0,0,,,
8/26/24,26,Monday,11,3,10,0,0,0,0,1,0,1,0,2,,,
8/27/24,27,Tuesday,10,2,9,0,0,0,0,1,0,1,0,1,,, 
8/28/24,28,Wednesday,10,2,9,0,0,0,0,4,1,5,0,4,,,
8/29/24,29,Thursday,11,2,6,0,0,1,0,2,0,3,1,2,,,
8/30/24,30,Friday,13,2,6,0,0,2,0,1,0,3,0,1,,,
8/31/24,31,Saturday,14,2,6,0,0,0,0,0,0,0,0,0,,,

================
File: data/Monthly Census 2024(Jul).csv
================
Date,July,,Census,Sits,Held Beds,Held Due To Covid Swab/Quarantine,Closed Beds,Daily Admits from CIU,Daily Admits from CL,Daily Admits from ED,Daily Admits from OSH,Total Daily Admits,Daily Readmits,Total Daily Discharges,,,
7/1/24,1,Monday,13,2,8,0,2,0,1,1,0,2,0,2,,,
7/2/24,2,Tuesday,13,1,7,0,2,0,1,1,0,2,0,4,,,
7/3/24,3,Wednesday,11,0,6,0,2,0,2,1,0,3,0,0,,,
7/4/24,4,Thursday,15,2,6,0,2,0,0,1,0,1,0,0,,,
7/5/24,5,Friday,15,2,6,0,2,0,0,1,0,1,0,4,,,
7/6/24,6,Saturday,13,1,6,0,2,0,0,1,0,1,0,0,,,
7/7/24,7,Sunday,15,1,6,0,2,2,0,0,0,2,1,0,,,
7/8/24,8,Monday,15,1,6,0,2,0,0,0,0,0,0,4,,,
7/9/24,9,Tuesday,11,1,5,0,2,2,0,1,0,3,0,4,,,
7/10/24,10,Wednesday,10,0,4,0,2,1,1,0,0,2,0,1,,,
7/11/24,11,Thursday,11,0,4,0,2,0,0,4,0,4,0,3,,,
7/12/24,12,Friday,12,0,6,0,2,0,0,1,0,1,1,4,,,
7/13/24,13,Saturday,11,0,8,0,2,0,2,0,0,2,0,0,,,
7/14/24,14,Sunday,13,0,8,0,2,0,0,2,0,2,0,0,,,
7/15/24,15,Monday,13,0,9,0,2,0,1,2,0,3,1,2,,,
7/16/24,16,Tuesday,14,0,9,0,2,0,0,0,0,0,0,0,,,
7/17/24,17,Wednesday,14,0,9,0,2,0,0,2,0,2,0,3,,,
7/18/24,18,Thursday,13,0,8,0,2,0,0,3,0,3,0,1,,,
7/19/24,19,Friday,15,1,9,0,2,0,0,0,0,0,0,3,,,
7/20/24,20,Saturday,12,0,9,0,2,0,0,0,0,0,0,0,,,
7/21/24,21,Sunday,12,1,9,0,2,0,0,0,0,0,0,0,,,
7/22/24,22,Monday,12,1,9,0,2,1,0,2,0,3,0,3,,,
7/23/24,23,Tuesday,12,1,9,0,2,2,1,0,0,3,0,2,,,
7/24/24,24,Wednesday,13,1,8,0,2,0,0,2,0,2,0,3,,,
7/25/24,25,Thursday,12,0,7,0,2,1,0,3,0,4,1,4,,,
7/26/24,26,Friday,13,0,8,0,2,0,0,1,0,1,0,4,,,
7/27/24,27,Saturday,10,0,6,0,0,0,0,0,0,0,0,0,,, 
7/28/24,28,Sunday,11,0,7,0,0,0,0,1,0,1,1,0,,,
7/29/24,29,Monday,11,0,7,0,0,0,0,4,0,4,2,6,,,
7/30/24,30,Tuesday,11,0,7,0,0,2,0,1,0,3,0,1,,,
7/31/24,31,Wednesday,12,0,9,0,0,1,0,0,0,1,0,1,,,

================
File: data/Monthly Census 2024(Jun).csv
================
Date,June,,Census,Sits,Held Beds,Held Due To Covid Swab/Quarantine,Closed Beds,Daily Admits from CIU,Daily Admits from CL,Daily Admits from ED,Daily Admits from OSH,Total Daily Admits,Daily Readmits,Total Daily Discharges,,,
6/1/24,1,Saturday,11,2,6,0,4,1,0,2,0,3,0,0,,,
6/2/24,2,Sunday,14,3,9,0,2,1,0,2,0,3,2,0,2:1 sit,,
6/3/24,3,Monday,14,3,9,0,2,0,0,0,0,0,0,3,2:1 sit,,
6/4/24,4,Tuesday,11,2,8,0,4,0,0,2,0,2,1,5,2:1 sit,,
6/5/24,5,Wednesday,8,3,6,0,2,0,0,3,0,3,0,1,2:1 sit,,
6/6/24,6,Thursday,10,2,7,0,2,0,1,2,0,3,1,0,2:1 sit,,
6/7/24,7,Friday,14,3,7,0,2,1,0,2,0,3,0,3,2:1 sit,,
6/8/24,8,Saturday,15,3,8,0,2,0,0,2,0,2,0,0,2:1 sit,,
6/9/24,9,Sunday,15,3,7,0,2,0,0,0,0,0,0,0,2:1 sit,,
6/10/24,10,Monday,16,4,8,0,2,0,1,2,0,3,0,7,2:1 sit,,
6/11/24,11,Tuesday,13,3,8,0,2,1,0,2,0,3,1,2,2:1 sit,,
6/12/24,12,Wednesday,13,4,8,0,2,0,0,1,0,1,0,3,2:1 sit,,
6/13/24,13,Thursday,11,3,7,0,2,0,0,0,0,0,0,2,2:1 sit,,
6/14/24,14,Friday,9,4,7,0,2,1,0,0,0,1,0,3,2:1 sit,,
6/15/24,15,Saturday,7,2,5,0,2,0,0,0,0,0,0,0,2:1 sit,,
6/16/24,16,Sunday,11,3,6,0,2,2,0,2,0,4,0,0,2:1 sit,,
6/17/24,17,Monday,11,4,6,0,2,2,0,0,0,2,2,3,2:1 sit,,
6/18/24,18,Tuesday,10,1,7,0,2,0,0,1,1,2,0,3,,,
6/19/24,19,Wednesday,9,1,4,0,2,0,0,0,1,1,0,1,,,
6/20/24,20,Thursday,9,0,4,0,2,0,0,1,1,2,0,1,,,
6/21/24,21,Friday,10,0,4,0,2,2,0,2,0,4,0,1,,,
6/22/24,22,Saturday,13,1,6,0,2,0,0,0,0,0,0,0,,,
6/23/24,23,Sunday,15,1,7,0,2,0,0,2,0,2,0,0,,,
6/24/24,24,Monday,15,1,7,0,2,0,1,1,0,2,0,5,,,
6/25/24,25,Tuesday,13,2,8,0,2,1,0,1,0,2,0,1,,,
6/26/24,26,Wednesday,13,2,7,0,2,0,0,2,0,2,0,1,,,
6/27/24,27,Thursday,14,2,6,0,2,0,0,0,0,0,0,0,,, 
6/28/24,28,Friday,14,1,6,0,2,0,0,0,0,0,0,5,,,
6/29/24,29,Saturday,9,2,5,0,2,0,0,0,0,0,0,0,,,
6/30/24,30,Sunday,13,2,8,0,2,2,0,2,0,4,2,0,,,

================
File: data/Monthly Census 2024(May).csv
================
Date,May,,Census,Sits,Held Beds,Held Due To Covid Swab/Quarantine,Closed Beds,Daily Admits from CIU,Daily Admits from CL,Daily Admits from ED,Daily Admits from OSH,Total Daily Admits,Daily Readmits,Total Daily Discharges,,,
5/1/24,1,Wednesday,10,3,7,0,0,1,1,1,0,3,1,0,2:1 sit,,
5/2/24,2,Thursday,12,4,7,0,0,0,0,1,0,1,0,0,2:1 sit,,
5/3/24,3,Friday,13,4,7,0,0,1,0,1,0,2,0,1,2:1 sit,,
5/4/24,4,Saturday,14,3,8,0,0,0,0,0,0,0,0,0,,,
5/5/24,5,Sunday,14,4,8,0,0,0,0,0,0,0,0,0,,,
5/6/24,6,Monday,14,4,8,0,0,0,0,5,0,5,0,4,,,
5/7/24,7,Tuesday,15,4,7,0,0,0,0,1,0,1,0,1,,,
5/8/24,8,Wednesday,16,4,7,0,0,0,0,1,0,1,0,2,,,
5/9/24,9,Thursday,15,2,8,0,0,0,1,2,0,3,0,3,,,
5/10/24,10,Friday,15,2,8,0,0,1,0,0,0,1,0,1,,,
5/11/24,11,Saturday,15,2,10,0,0,0,0,0,0,0,0,0,,,
5/12/24,12,Sunday,15,2,11,0,0,0,0,0,0,0,0,0,,,
5/13/24,13,Monday,15,2,11,0,0,0,0,3,0,3,0,4,,,
5/14/24,14,Tuesday,14,1,7,0,0,3,0,0,0,3,0,2,,,
5/15/24,15,Wednesday,16,1,8,0,0,2,1,0,0,3,0,3,,,
5/16/24,16,Thursday,16,0,9,0,0,1,0,1,0,2,1,2,,,
5/17/24,17,Friday,15,2,8,0,0,0,0,3,0,3,1,2,,,
5/18/24,18,Saturday,16,4,10,0,0,0,0,0,0,0,0,0,2:1 sit,,
5/19/24,19,Sunday,16,4,10,0,0,0,0,0,0,0,0,0,2:1 sit,,
5/20/24,20,Monday,16,4,10,0,0,0,0,3,0,3,0,6,2:1 sit,,
5/21/24,21,Tuesday,13,5,8,0,2,0,0,0,0,0,0,3,2:1 sit,,
5/22/24,22,Wednesday,11,4,8,0,2,0,0,5,0,5,0,3,2:1 sit,,
5/23/24,23,Thursday,12,3,6,0,2,1,0,2,0,3,0,2,2:1 sit,,
5/24/24,24,Friday,13,4,9,0,2,0,0,3,0,3,0,6,2:1 sit,,
5/25/24,25,Saturday,12,2,6,0,0,0,0,2,0,2,0,0,2:1 sit,,
5/26/24,26,Sunday,12,2,7,0,2,0,0,2,0,2,0,0,2:1 sit,,
5/27/24,27,Monday,15,2,8,0,2,1,0,0,0,1,1,0,2:1 sit,, 
5/28/24,28,Tuesday,15,3,8,0,2,0,1,3,0,4,0,4,2:1 sit,,
5/29/24,29,Wednesday,16,2,7,0,2,1,0,0,0,1,0,5,,,
5/30/24,30,Thursday,12,2,7,0,2,1,0,3,0,4,0,4,2:1 sit,,
5/31/24,31,Friday,11,0,7,0,2,1,0,1,0,2,0,5,,,

================
File: data/Monthly Census 2024(Oct).csv
================
Date,Index,day,Census,Sits,Held Beds,Held Due To Covid Swab/Quarantine,Closed Beds,Daily Admits from CIU,Daily Admits from CL,Daily Admits from ED,Daily Admits from OSH,Total Daily Admits,Daily Readmits,Total Daily Discharges
10/1/24,1,Tuesday,11,3,8,0,0,0,1,4,0,5,0,2
10/2/24,2,Wednesday,14,3,7,0,2,0,1,2,0,3,0,2
10/3/24,3,Thursday,15,3,7,0,2,0,0,3,0,3,0,2
10/4/24,4,Friday,16,3,8,0,0,0,0,1,0,1,0,5
10/5/24,5,Saturday,12,2,8,0,0,0,0,0,0,0,0,0
10/6/24,6,Sunday,12,2,8,0,0,0,0,0,0,0,0,0
10/7/24,7,Monday,12,2,8,0,0,0,1,2,0,3,0,2
10/8/24,8,Tuesday,13,3,9,0,0,0,1,0,0,1,0,2
10/9/24,9,Wednesday,12,2,8,0,0,1,1,1,1,4,0,3
10/10/24,10,Thursday,13,2,9,0,2,0,0,1,0,1,0,3
10/11/24,11,Friday,11,1,9,0,2,1,0,4,0,5,0,1
10/12/24,12,Saturday,16,1,9,0,0,1,0,0,0,1,0,0
10/13/24,13,Sunday,16,1,9,0,0,0,0,0,0,0,0,0
10/14/24,14,Monday,16,1,9,0,0,0,0,2,0,2,0,3
10/15/24,15,Tuesday,15,1,8,0,0,0,0,2,0,2,0,3
10/16/24,16,Wednesday,14,1,8,0,0,1,0,2,0,3,1,4
10/17/24,17,Thursday,13,1,9,0,2,0,0,1,0,1,0,1
10/18/24,18,Friday,12,1,7,0,0,0,0,0,1,1,0,3
10/19/24,19,Saturday,12,1,7,0,0,1,0,1,0,2,1,0
10/20/24,20,Sunday,14,1,7,0,0,0,0,2,0,2,0,0
10/21/24,21,Monday,14,1,7,0,0,0,0,2,0,2,0,7
10/22/24,22,Tuesday,9,2,8,0,0,1,1,2,1,5,1,1
10/23/24,23,Wednesday,13,2,8,0,0,0,0,0,0,0,0,0
10/24/24,24,Thursday,13,2,8,0,0,0,3,2,0,5,0,2
10/25/24,25,Friday,16,2,9,0,0,0,0,2,0,2,1,7
10/26/24,26,Saturday,12,1,10,0,0,0,0,1,0,1,0,0
10/27/24,27,Sunday,13,1,10,0,0,1,0,0,0,1,0,0
10/28/24,28,Monday,13,1,10,0,0,0,0,1,1,2,0,6
10/29/24,29,Tuesday,9,1,5,0,0,0,0,4,0,4,0,4
10/30/24,30,Wednesday,9,1,6,0,0,1,0,1,0,2,0,1
10/31/24,31,Thursday,11,1,7,0,0,2,0,3,0,5,0,2

================
File: data/Monthly Census 2024(Sept).csv
================
Date,index,day,Census,Sits,Held Beds,Held Due To Covid Swab/Quarantine,Closed Beds,Daily Admits from CIU,Daily Admits from CL,Daily Admits from ED,Daily Admits from OSH,Total Daily Admits,Daily Readmits,Total Daily Discharges
9/1/24,1,Sunday,14,2,6,0,0,0,0,0,0,0,0,0
9/2/24,2,Monday,14,2,6,0,0,0,0,0,0,0,0,0
9/3/24,3,Tuesday,14,2,6,0,0,0,2,2,0,4,1,7
9/4/24,4,Wednesday,11,3,8,0,0,0,0,3,0,3,0,1
9/5/24,5,Thursday,14,4,9,0,0,3,0,1,0,4,0,2
9/6/24,6,Friday,15,3,9,0,0,0,0,0,0,0,0,2
9/7/24,7,Saturday,14,3,9,0,0,1,0,0,0,1,0,0
9/8/24,8,Sunday,14,3,9,0,0,0,0,0,0,0,0,0
9/9/24,9,Monday,14,3,9,0,0,0,0,2,0,2,1,4
9/10/24,10,Tuesday,12,3,8,0,0,0,0,3,0,3,0,0
9/11/24,11,Wednesday,16,4,9,0,0,0,0,3,0,3,0,5
9/12/24,12,Thursday,13,4,7,0,0,0,0,1,0,1,0,2
9/13/24,13,Friday,12,4,8,0,0,0,1,1,1,3,0,4
9/14/24,14,Saturday,11,4,7,0,0,0,0,0,0,0,0,0
9/15/24,15,Sunday,11,4,8,0,0,0,0,0,0,0,0,0
9/16/24,16,Monday,11,4,8,0,0,0,1,2,1,4,0,2
9/17/24,17,Tuesday,15,3,7,0,0,3,0,1,0,4,0,0
9/18/24,18,Wednesday,17,2,7,0,0,0,0,4,0,4,1,6
9/19/24,19,Thursday,15,2,8,0,0,1,1,1,0,3,0,6
9/20/24,20,Friday,13,3,6,0,0,1,0,2,0,3,1,2
9/21/24,21,Saturday,15,4,10,0,0,2,0,0,0,2,0,0
9/22/24,22,Sunday,15,4,11,0,0,0,0,0,0,0,0,0
9/23/24,23,Monday,15,4,11,0,0,0,0,0,0,0,0,3
9/24/24,24,Tuesday,12,4,10,0,0,0,1,2,0,3,0,1
9/25/24,25,Wednesday,14,4,9,0,0,1,1,1,0,3,0,1
9/26/24,26,Thursday,16,4,9,0,0,0,0,3,0,3,0,4
9/27/24,27,Friday,16,3,10,0,0,0,1,1,0,2,0,4
9/28/24,28,Saturday,13,2,11,0,0,0,0,0,0,0,0,0
9/29/24,29,Sunday,14,2,11,0,0,0,0,1,0,1,0,0
9/30/24,30,Monday,14,3,11,0,0,0,0,3,0,3,0,6

================
File: output/data/current_model_data.csv
================
Date,Available Beds,Wasted Beds,Wasted Potential,Daily Efficiency,Cumulative Available Beds,Cumulative Wasted Beds,Cumulative Wasted Potential,Cumulative Efficiency
2023-01-01,26.0,11.0,0,0.5769230769230769,26.0,11.0,0,0.5769230769230769
2023-01-02,26.0,11.0,0,0.5769230769230769,52.0,22.0,0,0.5769230769230769
2023-01-03,26.0,11.0,0,0.5769230769230769,78.0,33.0,0,0.5769230769230769
2023-01-04,26.0,10.0,0,0.6153846153846154,104.0,43.0,0,0.5865384615384616
2023-01-05,26.0,11.0,0,0.5769230769230769,130.0,54.0,0,0.5846153846153846
2023-01-06,26.0,11.0,0,0.5769230769230769,156.0,65.0,0,0.5833333333333334
2023-01-07,26.0,12.0,0,0.5384615384615384,182.0,77.0,0,0.5769230769230769
2023-01-08,26.0,12.0,0,0.5384615384615384,208.0,89.0,0,0.5721153846153846
2023-01-09,26.0,12.0,0,0.5384615384615384,234.0,101.0,0,0.5683760683760684
2023-01-10,26.0,12.0,0,0.5384615384615384,260.0,113.0,0,0.5653846153846154
2023-01-11,26.0,13.0,0,0.5,286.0,126.0,0,0.5594405594405595
2023-01-12,26.0,12.0,0,0.5384615384615384,312.0,138.0,0,0.5576923076923077
2023-01-13,26.0,12.0,0,0.5384615384615384,338.0,150.0,0,0.5562130177514792
2023-01-14,26.0,10.0,0,0.6153846153846154,364.0,160.0,0,0.5604395604395604
2023-01-15,26.0,10.0,0,0.6153846153846154,390.0,170.0,0,0.5641025641025641
2023-01-16,26.0,10.0,0,0.6153846153846154,416.0,180.0,0,0.5673076923076923
2023-01-17,26.0,11.0,0,0.5769230769230769,442.0,191.0,0,0.5678733031674208
2023-01-18,26.0,10.0,0,0.6153846153846154,468.0,201.0,0,0.5705128205128205
2023-01-19,26.0,4.0,0,0.8461538461538461,494.0,205.0,0,0.5850202429149798
2023-01-20,26.0,4.0,0,0.8461538461538461,520.0,209.0,0,0.5980769230769231
2023-01-21,26.0,4.0,0,0.8461538461538461,546.0,213.0,0,0.6098901098901099
2023-01-22,26.0,5.0,0,0.8076923076923077,572.0,218.0,0,0.6188811188811189
2023-01-23,26.0,5.0,0,0.8076923076923077,598.0,223.0,0,0.6270903010033445
2023-01-24,26.0,4.0,0,0.8461538461538461,624.0,227.0,0,0.6362179487179487
2023-01-25,26.0,5.0,0,0.8076923076923077,650.0,232.0,0,0.6430769230769231
2023-01-26,26.0,5.0,0,0.8076923076923077,676.0,237.0,0,0.6494082840236687
2023-01-27,26.0,7.0,0,0.7307692307692307,702.0,244.0,0,0.6524216524216524
2023-01-28,26.0,5.0,0,0.8076923076923077,728.0,249.0,0,0.657967032967033
2023-01-29,26.0,5.0,0,0.8076923076923077,754.0,254.0,0,0.6631299734748011
2023-01-30,26.0,5.0,0,0.8076923076923077,780.0,259.0,0,0.6679487179487179
2023-01-31,26.0,4.0,0,0.8461538461538461,806.0,263.0,0,0.673697270471464
2023-02-01,26.0,4.0,0,0.8461538461538461,832.0,267.0,0,0.6790865384615384
2023-02-02,26.0,3.0,0,0.8846153846153846,858.0,270.0,0,0.6853146853146853
2023-02-03,26.0,4.0,0,0.8461538461538461,884.0,274.0,0,0.6900452488687783
2023-02-04,26.0,3.0,0,0.8846153846153846,910.0,277.0,0,0.6956043956043956
2023-02-05,26.0,5.0,0,0.8076923076923077,936.0,282.0,0,0.6987179487179487
2023-02-06,26.0,5.0,0,0.8076923076923077,962.0,287.0,0,0.7016632016632016
2023-02-07,26.0,4.0,0,0.8461538461538461,988.0,291.0,0,0.7054655870445344
2023-02-08,26.0,2.0,0,0.9230769230769231,1014.0,293.0,0,0.7110453648915187
2023-02-09,26.0,2.0,0,0.9230769230769231,1040.0,295.0,0,0.7163461538461539
2023-02-10,26.0,2.0,0,0.9230769230769231,1066.0,297.0,0,0.7213883677298312
2023-02-11,26.0,4.0,0,0.8461538461538461,1092.0,301.0,0,0.7243589743589743
2023-02-12,26.0,5.0,0,0.8076923076923077,1118.0,306.0,0,0.7262969588550984
2023-02-13,26.0,5.0,0,0.8076923076923077,1144.0,311.0,0,0.7281468531468531
2023-02-14,26.0,4.0,0,0.8461538461538461,1170.0,315.0,0,0.7307692307692307
2023-02-15,16.0,2.0,0,0.875,1186.0,317.0,0,0.7327150084317032
2023-02-16,25.0,5.0,0,0.8,1211.0,322.0,0,0.7341040462427746
2023-02-17,26.0,3.0,0,0.8846153846153846,1237.0,325.0,0,0.7372675828617623
2023-02-18,26.0,5.0,0,0.8076923076923077,1263.0,330.0,0,0.7387173396674585
2023-02-19,26.0,5.0,0,0.8076923076923077,1289.0,335.0,0,0.7401086113266098
2023-02-20,26.0,5.0,0,0.8076923076923077,1315.0,340.0,0,0.7414448669201521
2023-02-21,26.0,6.0,0,0.7692307692307693,1341.0,346.0,0,0.7419835943325876
2023-02-22,26.0,6.0,0,0.7692307692307693,1367.0,352.0,0,0.7425018288222385
2023-02-23,26.0,4.0,0,0.8461538461538461,1393.0,356.0,0,0.7444364680545585
2023-02-24,26.0,4.0,0,0.8461538461538461,1419.0,360.0,0,0.7463002114164905
2023-02-25,26.0,5.0,0,0.8076923076923077,1445.0,365.0,0,0.7474048442906575
2023-02-26,26.0,6.0,0,0.7692307692307693,1471.0,371.0,0,0.7477906186267845
2023-02-27,26.0,6.0,0,0.7692307692307693,1497.0,377.0,0,0.7481629926519706
2023-02-28,26.0,6.0,0,0.7692307692307693,1523.0,383.0,0,0.7485226526592252
2023-03-01,26.0,7.0,0,0.7307692307692307,1549.0,390.0,0,0.7482246610716591
2023-03-02,26.0,5.0,0,0.8076923076923077,1575.0,395.0,0,0.7492063492063492
2023-03-03,26.0,6.0,0,0.7692307692307693,1601.0,401.0,0,0.749531542785759
2023-03-04,26.0,7.0,0,0.7307692307692307,1627.0,408.0,0,0.7492317148125384
2023-03-05,26.0,7.0,0,0.7307692307692307,1653.0,415.0,0,0.7489413188142771
2023-03-06,26.0,7.0,0,0.7307692307692307,1679.0,422.0,0,0.7486599166170339
2023-03-07,26.0,4.0,0,0.8461538461538461,1705.0,426.0,0,0.7501466275659824
2023-03-08,26.0,4.0,0,0.8461538461538461,1731.0,430.0,0,0.7515886770652802
2023-03-09,26.0,5.0,0,0.8076923076923077,1757.0,435.0,0,0.7524188958451906
2023-03-10,26.0,7.0,0,0.7307692307692307,1783.0,442.0,0,0.752103196859226
2023-03-11,26.0,7.0,0,0.7307692307692307,1809.0,449.0,0,0.7517965726920951
2023-03-12,26.0,8.0,0,0.6923076923076923,1835.0,457.0,0,0.7509536784741144
2023-03-13,26.0,8.0,0,0.6923076923076923,1861.0,465.0,0,0.7501343363782912
2023-03-14,26.0,7.0,0,0.7307692307692307,1887.0,472.0,0,0.749867514573397
2023-03-15,26.0,7.0,0,0.7307692307692307,1913.0,479.0,0,0.7496079456351281
2023-03-16,26.0,7.0,0,0.7307692307692307,1939.0,486.0,0,0.7493553378029912
2023-03-17,26.0,8.0,0,0.6923076923076923,1965.0,494.0,0,0.7486005089058524
2023-03-18,26.0,7.0,0,0.7307692307692307,1991.0,501.0,0,0.7483676544450025
2023-03-19,26.0,6.0,0,0.7692307692307693,2017.0,507.0,0,0.7486365889935548
2023-03-20,26.0,6.0,0,0.7692307692307693,2043.0,513.0,0,0.748898678414097
2023-03-21,26.0,6.0,0,0.7692307692307693,2069.0,519.0,0,0.7491541807636539
2023-03-22,26.0,7.0,0,0.7307692307692307,2095.0,526.0,0,0.7489260143198091
2023-03-23,26.0,5.0,0,0.8076923076923077,2121.0,531.0,0,0.7496463932107497
2023-03-24,26.0,7.0,0,0.7307692307692307,2147.0,538.0,0,0.7494177922682813
2023-03-25,26.0,4.0,0,0.8461538461538461,2173.0,542.0,0,0.7505752416014726
2023-03-26,26.0,5.0,0,0.8076923076923077,2199.0,547.0,0,0.7512505684402001
2023-03-27,26.0,5.0,0,0.8076923076923077,2225.0,552.0,0,0.7519101123595505
2023-03-28,26.0,6.0,0,0.7692307692307693,2251.0,558.0,0,0.7521101732563306
2023-03-29,26.0,6.0,0,0.7692307692307693,2277.0,564.0,0,0.7523056653491436
2023-03-30,26.0,6.0,0,0.7692307692307693,2303.0,570.0,0,0.7524967433782024
2023-03-31,26.0,6.0,0,0.7692307692307693,2329.0,576.0,0,0.7526835551738944
2023-04-01,26.0,5.0,0,0.8076923076923077,2355.0,581.0,0,0.7532908704883228
2023-04-02,26.0,5.0,0,0.8076923076923077,2381.0,586.0,0,0.753884922301554
2023-04-03,26.0,5.0,0,0.8076923076923077,2407.0,591.0,0,0.754466140423764
2023-04-04,26.0,4.0,0,0.8461538461538461,2433.0,595.0,0,0.7554459515002055
2023-04-05,26.0,2.0,0,0.9230769230769231,2459.0,597.0,0,0.7572183814558764
2023-04-06,26.0,5.0,0,0.8076923076923077,2485.0,602.0,0,0.7577464788732394
2023-04-07,26.0,6.0,0,0.7692307692307693,2511.0,608.0,0,0.7578653922739944
2023-04-08,26.0,7.0,0,0.7307692307692307,2537.0,615.0,0,0.7575877020102483
2023-04-09,26.0,7.0,0,0.7307692307692307,2563.0,622.0,0,0.7573156457276629
2023-04-10,26.0,7.0,0,0.7307692307692307,2589.0,629.0,0,0.7570490536886829
2023-04-11,26.0,7.0,0,0.7307692307692307,2615.0,636.0,0,0.7567877629063098
2023-04-12,26.0,6.0,0,0.7692307692307693,2641.0,642.0,0,0.7569102612646724
2023-04-13,26.0,5.0,0,0.8076923076923077,2667.0,647.0,0,0.7574053243344582
2023-04-14,26.0,5.0,0,0.8076923076923077,2693.0,652.0,0,0.7578908280727813
2023-04-15,26.0,6.0,0,0.7692307692307693,2719.0,658.0,0,0.7579992644354542
2023-04-16,26.0,7.0,0,0.7307692307692307,2745.0,665.0,0,0.7577413479052824
2023-04-17,26.0,6.0,0,0.7692307692307693,2771.0,671.0,0,0.7578491519307109
2023-04-18,26.0,7.0,0,0.7307692307692307,2797.0,678.0,0,0.7575974258133714
2023-04-19,26.0,7.0,0,0.7307692307692307,2823.0,685.0,0,0.7573503365214311
2023-04-20,26.0,6.0,0,0.7692307692307693,2849.0,691.0,0,0.7574587574587575
2023-04-21,26.0,5.0,0,0.8076923076923077,2875.0,696.0,0,0.7579130434782608
2023-04-22,26.0,8.0,0,0.6923076923076923,2901.0,704.0,0,0.7573250603240262
2023-04-23,26.0,8.0,0,0.6923076923076923,2927.0,712.0,0,0.7567475230611548
2023-04-24,26.0,8.0,0,0.6923076923076923,2953.0,720.0,0,0.7561801557737894
2023-04-25,26.0,6.0,0,0.7692307692307693,2979.0,726.0,0,0.756294058408862
2023-04-26,26.0,5.0,0,0.8076923076923077,3005.0,731.0,0,0.756738768718802
2023-04-27,26.0,5.0,0,0.8076923076923077,3031.0,736.0,0,0.7571758495546025
2023-04-28,26.0,6.0,0,0.7692307692307693,3057.0,742.0,0,0.7572783774942754
2023-04-29,26.0,8.0,0,0.6923076923076923,3083.0,750.0,0,0.7567304573467402
2023-04-30,26.0,8.0,0,0.6923076923076923,3109.0,758.0,0,0.7561917015117401
2023-05-01,26.0,8.0,0,0.6923076923076923,3135.0,766.0,0,0.7556618819776715
2023-05-02,26.0,7.0,0,0.7307692307692307,3161.0,773.0,0,0.7554571338184118
2023-05-03,26.0,7.0,0,0.7307692307692307,3187.0,780.0,0,0.7552557263884531
2023-05-04,26.0,5.0,0,0.8076923076923077,3213.0,785.0,0,0.7556800497976969
2023-05-05,26.0,6.0,0,0.7692307692307693,3239.0,791.0,0,0.755788823711022
2023-05-06,26.0,6.0,0,0.7692307692307693,3265.0,797.0,0,0.755895865237366
2023-05-07,26.0,6.0,0,0.7692307692307693,3291.0,803.0,0,0.7560012154360377
2023-05-08,26.0,6.0,0,0.7692307692307693,3317.0,809.0,0,0.7561049140789871
2023-05-09,26.0,9.0,0,0.6538461538461539,3343.0,818.0,0,0.7553096021537541
2023-05-10,26.0,5.0,0,0.8076923076923077,3369.0,823.0,0,0.7557138616800237
2023-05-11,26.0,5.0,0,0.8076923076923077,3395.0,828.0,0,0.7561119293078056
2023-05-12,26.0,5.0,0,0.8076923076923077,3421.0,833.0,0,0.7565039462145572
2023-05-13,26.0,7.0,0,0.7307692307692307,3447.0,840.0,0,0.7563098346388164
2023-05-14,26.0,7.0,0,0.7307692307692307,3473.0,847.0,0,0.7561186294270084
2023-05-15,26.0,7.0,0,0.7307692307692307,3499.0,854.0,0,0.7559302657902258
2023-05-16,26.0,8.0,0,0.6923076923076923,3525.0,862.0,0,0.7554609929078014
2023-05-17,26.0,7.0,0,0.7307692307692307,3551.0,869.0,0,0.755280202759786
2023-05-18,26.0,6.0,0,0.7692307692307693,3577.0,875.0,0,0.7553816046966731
2023-05-19,24.0,5.0,0,0.7916666666666666,3601.0,880.0,0,0.7556234379339073
2023-05-20,26.0,4.0,0,0.8461538461538461,3627.0,884.0,0,0.7562724014336918
2023-05-21,26.0,5.0,0,0.8076923076923077,3653.0,889.0,0,0.7566383794141801
2023-05-22,26.0,5.0,0,0.8076923076923077,3679.0,894.0,0,0.756999184561022
2023-05-23,26.0,4.0,0,0.8461538461538461,3705.0,898.0,0,0.7576248313090418
2023-05-24,26.0,7.0,0,0.7307692307692307,3731.0,905.0,0,0.7574376842669526
2023-05-25,26.0,7.0,0,0.7307692307692307,3757.0,912.0,0,0.757253127495342
2023-05-26,26.0,8.0,0,0.6923076923076923,3783.0,920.0,0,0.7568067671160454
2023-05-27,26.0,7.0,0,0.7307692307692307,3809.0,927.0,0,0.7566290364925177
2023-05-28,26.0,7.0,0,0.7307692307692307,3835.0,934.0,0,0.7564537157757497
2023-05-29,26.0,6.0,0,0.7692307692307693,3861.0,940.0,0,0.7565397565397566
2023-05-30,26.0,5.0,0,0.8076923076923077,3887.0,945.0,0,0.7568819140725496
2023-05-31,26.0,6.0,0,0.7692307692307693,3913.0,951.0,0,0.7569639662662918
2023-06-01,26.0,6.0,0,0.7692307692307693,3939.0,957.0,0,0.7570449352627571
2023-06-02,26.0,4.0,0,0.8461538461538461,3965.0,961.0,0,0.7576292559899117
2023-06-03,26.0,5.0,0,0.8076923076923077,3991.0,966.0,0,0.7579553996492108
2023-06-04,26.0,6.0,0,0.7692307692307693,4017.0,972.0,0,0.7580283793876027
2023-06-05,26.0,6.0,0,0.7692307692307693,4043.0,978.0,0,0.7581004204798417
2023-06-06,24.0,5.0,0,0.7916666666666666,4067.0,983.0,0,0.7582985001229408
2023-06-07,26.0,4.0,0,0.8461538461538461,4093.0,987.0,0,0.7588565844124114
2023-06-08,26.0,3.0,0,0.8846153846153846,4119.0,990.0,0,0.7596504005826656
2023-06-09,26.0,3.0,0,0.8846153846153846,4145.0,993.0,0,0.7604342581423401
2023-06-10,26.0,5.0,0,0.8076923076923077,4171.0,998.0,0,0.7607288420043156
2023-06-11,26.0,5.0,0,0.8076923076923077,4197.0,1003.0,0,0.761019776030498
2023-06-12,26.0,5.0,0,0.8076923076923077,4223.0,1008.0,0,0.7613071276343831
2023-06-13,26.0,5.0,0,0.8076923076923077,4249.0,1013.0,0,0.7615909625794305
2023-06-14,26.0,5.0,0,0.8076923076923077,4275.0,1018.0,0,0.7618713450292398
2023-06-15,26.0,6.0,0,0.7692307692307693,4301.0,1024.0,0,0.7619158335270867
2023-06-16,26.0,5.0,0,0.8076923076923077,4327.0,1029.0,0,0.7621908943840998
2023-06-17,26.0,7.0,0,0.7307692307692307,4353.0,1036.0,0,0.7620032161727545
2023-06-18,26.0,7.0,0,0.7307692307692307,4379.0,1043.0,0,0.7618177666133821
2023-06-19,26.0,7.0,0,0.7307692307692307,4405.0,1050.0,0,0.7616345062429057
2023-06-20,26.0,7.0,0,0.7307692307692307,4431.0,1057.0,0,0.7614533965244866
2023-06-21,26.0,8.0,0,0.6923076923076923,4457.0,1065.0,0,0.7610500336549249
2023-06-22,26.0,8.0,0,0.6923076923076923,4483.0,1073.0,0,0.760651349542717
2023-06-23,26.0,8.0,0,0.6923076923076923,4509.0,1081.0,0,0.7602572632512752
2023-06-24,26.0,7.0,0,0.7307692307692307,4535.0,1088.0,0,0.7600882028665932
2023-06-25,26.0,7.0,0,0.7307692307692307,4561.0,1095.0,0,0.7599210699408024
2023-06-26,26.0,7.0,0,0.7307692307692307,4587.0,1102.0,0,0.7597558316982778
2023-06-27,26.0,7.0,0,0.7307692307692307,4613.0,1109.0,0,0.7595924561023195
2023-06-28,26.0,5.0,0,0.8076923076923077,4639.0,1114.0,0,0.7598620392325932
2023-06-29,26.0,5.0,0,0.8076923076923077,4665.0,1119.0,0,0.760128617363344
2023-06-30,26.0,4.0,0,0.8461538461538461,4691.0,1123.0,0,0.7606054146237476
2023-07-01,26.0,1.0,0,0.9615384615384616,4717.0,1124.0,0,0.7617129531481874
2023-07-02,26.0,1.0,0,0.9615384615384616,4743.0,1125.0,0,0.7628083491461101
2023-07-03,25.0,1.0,0,0.96,4768.0,1126.0,0,0.7638422818791947
2023-07-04,26.0,5.0,0,0.8076923076923077,4794.0,1131.0,0,0.7640801001251565
2023-07-05,26.0,5.0,0,0.8076923076923077,4820.0,1136.0,0,0.7643153526970954
2023-07-06,26.0,5.0,0,0.8076923076923077,4846.0,1141.0,0,0.7645480808914569
2023-07-07,26.0,4.0,0,0.8461538461538461,4872.0,1145.0,0,0.7649835796387521
2023-07-08,26.0,6.0,0,0.7692307692307693,4898.0,1151.0,0,0.7650061249489588
2023-07-09,26.0,6.0,0,0.7692307692307693,4924.0,1157.0,0,0.7650284321689683
2023-07-10,26.0,6.0,0,0.7692307692307693,4950.0,1163.0,0,0.7650505050505051
2023-07-11,24.0,5.0,0,0.7916666666666666,4974.0,1168.0,0,0.765178930438279
2023-07-12,24.0,6.0,0,0.75,4998.0,1174.0,0,0.7651060424169668
2023-07-13,26.0,6.0,0,0.7692307692307693,5024.0,1180.0,0,0.7651273885350318
2023-07-14,26.0,6.0,0,0.7692307692307693,5050.0,1186.0,0,0.7651485148514852
2023-07-15,26.0,8.0,0,0.6923076923076923,5076.0,1194.0,0,0.764775413711584
2023-07-16,26.0,7.0,0,0.7307692307692307,5102.0,1201.0,0,0.7646021168169346
2023-07-17,26.0,7.0,0,0.7307692307692307,5128.0,1208.0,0,0.7644305772230889
2023-07-18,26.0,6.0,0,0.7692307692307693,5154.0,1214.0,0,0.7644547923942568
2023-07-19,26.0,7.0,0,0.7307692307692307,5180.0,1221.0,0,0.7642857142857142
2023-07-20,26.0,7.0,0,0.7307692307692307,5206.0,1228.0,0,0.7641183250096043
2023-07-21,26.0,5.0,0,0.8076923076923077,5232.0,1233.0,0,0.7643348623853211
2023-07-22,24.0,5.0,0,0.7916666666666666,5256.0,1238.0,0,0.7644596651445966
2023-07-23,26.0,7.0,0,0.7307692307692307,5282.0,1245.0,0,0.7642938280954183
2023-07-24,26.0,7.0,0,0.7307692307692307,5308.0,1252.0,0,0.7641296156744537
2023-07-25,26.0,5.0,0,0.8076923076923077,5334.0,1257.0,0,0.764341957255343
2023-07-26,26.0,6.0,0,0.7692307692307693,5360.0,1263.0,0,0.764365671641791
2023-07-27,26.0,4.0,0,0.8461538461538461,5386.0,1267.0,0,0.7647604901596732
2023-07-28,26.0,4.0,0,0.8461538461538461,5412.0,1271.0,0,0.7651515151515151
2023-07-29,26.0,4.0,0,0.8461538461538461,5438.0,1275.0,0,0.7655388010297903
2023-07-30,26.0,4.0,0,0.8461538461538461,5464.0,1279.0,0,0.7659224011713031
2023-07-31,22.0,5.0,0,0.7727272727272727,5486.0,1284.0,0,0.7659496901203062
2023-08-01,26.0,4.0,0,0.8461538461538461,5512.0,1288.0,0,0.7663280116110305
2023-08-02,26.0,3.0,0,0.8846153846153846,5538.0,1291.0,0,0.7668833513903937
2023-08-03,20.0,1.0,0,0.95,5558.0,1292.0,0,0.7675422813961856
2023-08-04,22.0,2.0,0,0.9090909090909091,5580.0,1294.0,0,0.7681003584229391
2023-08-05,26.0,2.0,0,0.9230769230769231,5606.0,1296.0,0,0.7688191223688905
2023-08-06,26.0,2.0,0,0.9230769230769231,5632.0,1298.0,0,0.76953125
2023-08-07,26.0,2.0,0,0.9230769230769231,5658.0,1300.0,0,0.7702368328031106
2023-08-08,24.0,3.0,0,0.875,5682.0,1303.0,0,0.7706793382611756
2023-08-09,24.0,3.0,0,0.875,5706.0,1306.0,0,0.77111812127585
2023-08-10,24.0,2.0,0,0.9166666666666666,5730.0,1308.0,0,0.7717277486910995
2023-08-11,24.0,2.0,0,0.9166666666666666,5754.0,1310.0,0,0.7723322905804657
2023-08-12,26.0,3.0,0,0.8846153846153846,5780.0,1313.0,0,0.7728373702422145
2023-08-13,26.0,3.0,0,0.8846153846153846,5806.0,1316.0,0,0.7733379262831553
2023-08-14,26.0,3.0,0,0.8846153846153846,5832.0,1319.0,0,0.7738340192043895
2023-08-15,26.0,7.0,0,0.7307692307692307,5858.0,1326.0,0,0.7736428815295323
2023-08-16,24.0,5.0,0,0.7916666666666666,5882.0,1331.0,0,0.7737164229853791
2023-08-17,26.0,4.0,0,0.8461538461538461,5908.0,1335.0,0,0.7740352064996615
2023-08-18,26.0,4.0,0,0.8461538461538461,5934.0,1339.0,0,0.7743511964947759
2023-08-19,26.0,5.0,0,0.8076923076923077,5960.0,1344.0,0,0.774496644295302
2023-08-20,26.0,5.0,0,0.8076923076923077,5986.0,1349.0,0,0.7746408286000668
2023-08-21,26.0,5.0,0,0.8076923076923077,6012.0,1354.0,0,0.7747837658017299
2023-08-22,26.0,6.0,0,0.7692307692307693,6038.0,1360.0,0,0.7747598542563763
2023-08-23,26.0,6.0,0,0.7692307692307693,6064.0,1366.0,0,0.774736147757256
2023-08-24,26.0,6.0,0,0.7692307692307693,6090.0,1372.0,0,0.774712643678161
2023-08-25,24.0,6.0,0,0.75,6114.0,1378.0,0,0.7746156362446843
2023-08-26,26.0,9.0,0,0.6538461538461539,6140.0,1387.0,0,0.7741042345276873
2023-08-27,26.0,9.0,0,0.6538461538461539,6166.0,1396.0,0,0.7735971456373663
2023-08-28,26.0,9.0,0,0.6538461538461539,6192.0,1405.0,0,0.773094315245478
2023-08-29,26.0,7.0,0,0.7307692307692307,6218.0,1412.0,0,0.7729173367642329
2023-08-30,24.0,6.0,0,0.75,6242.0,1418.0,0,0.7728292214033964
2023-08-31,24.0,7.0,0,0.7083333333333334,6266.0,1425.0,0,0.7725821895946378
2023-09-01,26.0,7.0,0,0.7307692307692307,6292.0,1432.0,0,0.7724094087730451
2023-09-02,26.0,6.0,0,0.7692307692307693,6318.0,1438.0,0,0.7723963279518835
2023-09-03,26.0,7.0,0,0.7307692307692307,6344.0,1445.0,0,0.7722257250945775
2023-09-04,26.0,7.0,0,0.7307692307692307,6370.0,1452.0,0,0.7720565149136578
2023-09-05,26.0,7.0,0,0.7307692307692307,6396.0,1459.0,0,0.7718886804252658
2023-09-06,26.0,6.0,0,0.7692307692307693,6422.0,1465.0,0,0.771877919651199
2023-09-07,26.0,5.0,0,0.8076923076923077,6448.0,1470.0,0,0.7720223325062034
2023-09-08,26.0,5.0,0,0.8076923076923077,6474.0,1475.0,0,0.7721655854185975
2023-09-09,26.0,6.0,0,0.7692307692307693,6500.0,1481.0,0,0.7721538461538462
2023-09-10,26.0,6.0,0,0.7692307692307693,6526.0,1487.0,0,0.772142200429053
2023-09-11,26.0,6.0,0,0.7692307692307693,6552.0,1493.0,0,0.7721306471306472
2023-09-12,26.0,6.0,0,0.7692307692307693,6578.0,1499.0,0,0.7721191851626634
2023-09-13,26.0,5.0,0,0.8076923076923077,6604.0,1504.0,0,0.7722592368261659
2023-09-14,26.0,6.0,0,0.7692307692307693,6630.0,1510.0,0,0.7722473604826546
2023-09-15,26.0,5.0,0,0.8076923076923077,6656.0,1515.0,0,0.7723858173076923
2023-09-16,26.0,6.0,0,0.7692307692307693,6682.0,1521.0,0,0.7723735408560312
2023-09-17,26.0,6.0,0,0.7692307692307693,6708.0,1527.0,0,0.7723613595706619
2023-09-18,26.0,6.0,0,0.7692307692307693,6734.0,1533.0,0,0.7723492723492723
2023-09-19,26.0,6.0,0,0.7692307692307693,6760.0,1539.0,0,0.7723372781065089
2023-09-20,26.0,3.0,0,0.8846153846153846,6786.0,1542.0,0,0.7727674624226348
2023-09-21,22.0,4.0,0,0.8181818181818182,6808.0,1546.0,0,0.7729142185663925
2023-09-22,20.0,2.0,0,0.9,6828.0,1548.0,0,0.773286467486819
2023-09-23,26.0,7.0,0,0.7307692307692307,6854.0,1555.0,0,0.7731251823752553
2023-09-24,26.0,7.0,0,0.7307692307692307,6880.0,1562.0,0,0.7729651162790697
2023-09-25,21.0,3.0,0,0.8571428571428571,6901.0,1565.0,0,0.7732212722793798
2023-09-26,26.0,12.0,0,0.5384615384615384,6927.0,1577.0,0,0.7723401183773639
2023-09-27,26.0,12.0,0,0.5384615384615384,6953.0,1589.0,0,0.7714655544369337
2023-09-28,26.0,10.0,0,0.6153846153846154,6979.0,1599.0,0,0.7708840808138702
2023-09-29,26.0,9.0,0,0.6538461538461539,7005.0,1608.0,0,0.7704496788008566
2023-09-30,26.0,7.0,0,0.7307692307692307,7031.0,1615.0,0,0.7703029441046793
2023-10-01,26.0,7.0,0,0.7307692307692307,7057.0,1622.0,0,0.7701572906334136
2023-10-02,26.0,7.0,0,0.7307692307692307,7083.0,1629.0,0,0.770012706480305
2023-10-03,26.0,4.0,0,0.8461538461538461,7109.0,1633.0,0,0.7702911801941201
2023-10-04,26.0,3.0,0,0.8846153846153846,7135.0,1636.0,0,0.770707778556412
2023-10-05,26.0,6.0,0,0.7692307692307693,7161.0,1642.0,0,0.7707024158637061
2023-10-06,26.0,6.0,0,0.7692307692307693,7187.0,1648.0,0,0.7706970919716154
2023-10-07,26.0,9.0,0,0.6538461538461539,7213.0,1657.0,0,0.7702758907528074
2023-10-08,26.0,9.0,0,0.6538461538461539,7239.0,1666.0,0,0.7698577151540268
2023-10-09,26.0,9.0,0,0.6538461538461539,7265.0,1675.0,0,0.7694425326909842
2023-10-10,26.0,9.0,0,0.6538461538461539,7291.0,1684.0,0,0.7690303113427513
2023-10-11,26.0,7.0,0,0.7307692307692307,7317.0,1691.0,0,0.7688943556102228
2023-10-12,26.0,7.0,0,0.7307692307692307,7343.0,1698.0,0,0.768759362658314
2023-10-13,26.0,8.0,0,0.6923076923076923,7369.0,1706.0,0,0.7684896186728186
2023-10-14,26.0,7.0,0,0.7307692307692307,7395.0,1713.0,0,0.7683569979716024
2023-10-15,26.0,7.0,0,0.7307692307692307,7421.0,1720.0,0,0.7682253065624579
2023-10-16,26.0,7.0,0,0.7307692307692307,7447.0,1727.0,0,0.7680945347119645
2023-10-17,26.0,7.0,0,0.7307692307692307,7473.0,1734.0,0,0.7679646728221597
2023-10-18,26.0,7.0,0,0.7307692307692307,7499.0,1741.0,0,0.7678357114281904
2023-10-19,26.0,7.0,0,0.7307692307692307,7525.0,1748.0,0,0.7677076411960133
2023-10-20,26.0,5.0,0,0.8076923076923077,7551.0,1753.0,0,0.7678453185008608
2023-10-21,26.0,7.0,0,0.7307692307692307,7577.0,1760.0,0,0.7677180942325459
2023-10-22,26.0,7.0,0,0.7307692307692307,7603.0,1767.0,0,0.7675917401025911
2023-10-23,26.0,7.0,0,0.7307692307692307,7629.0,1774.0,0,0.767466247214576
2023-10-24,26.0,6.0,0,0.7692307692307693,7655.0,1780.0,0,0.767472240365774
2023-10-25,26.0,8.0,0,0.6923076923076923,7681.0,1788.0,0,0.767217810180966
2023-10-26,26.0,8.0,0,0.6923076923076923,7707.0,1796.0,0,0.7669650966653692
2023-10-27,26.0,8.0,0,0.6923076923076923,7733.0,1804.0,0,0.7667140825035562
2023-10-28,26.0,8.0,0,0.6923076923076923,7759.0,1812.0,0,0.7664647506121923
2023-10-29,26.0,8.0,0,0.6923076923076923,7785.0,1820.0,0,0.7662170841361593
2023-10-30,26.0,8.0,0,0.6923076923076923,7811.0,1828.0,0,0.7659710664447574
2023-10-31,26.0,8.0,0,0.6923076923076923,7837.0,1836.0,0,0.7657266811279827
2023-11-01,26.0,9.0,0,0.6538461538461539,7863.0,1845.0,0,0.7653567340709653
2023-11-02,26.0,8.0,0,0.6923076923076923,7889.0,1853.0,0,0.7651159842819115
2023-11-03,26.0,8.0,0,0.6923076923076923,7915.0,1861.0,0,0.7648768161718257
2023-11-04,26.0,8.0,0,0.6923076923076923,7941.0,1869.0,0,0.7646392142047601
2023-11-05,26.0,8.0,0,0.6923076923076923,7967.0,1877.0,0,0.7644031630475713
2023-11-06,26.0,8.0,0,0.6923076923076923,7993.0,1885.0,0,0.7641686475666208
2023-11-07,26.0,8.0,0,0.6923076923076923,8019.0,1893.0,0,0.7639356528245417
2023-11-08,26.0,7.0,0,0.7307692307692307,8045.0,1900.0,0,0.7638284648850218
2023-11-09,26.0,8.0,0,0.6923076923076923,8071.0,1908.0,0,0.7635980671540081
2023-11-10,26.0,7.0,0,0.7307692307692307,8097.0,1915.0,0,0.7634926515993578
2023-11-11,26.0,6.0,0,0.7692307692307693,8123.0,1921.0,0,0.7635110180967623
2023-11-12,26.0,6.0,0,0.7692307692307693,8149.0,1927.0,0,0.7635292673947723
2023-11-13,26.0,6.0,0,0.7692307692307693,8175.0,1933.0,0,0.7635474006116207
2023-11-14,26.0,7.0,0,0.7307692307692307,8201.0,1940.0,0,0.7634434825021339
2023-11-15,26.0,7.0,0,0.7307692307692307,8227.0,1947.0,0,0.763340221222803
2023-11-16,26.0,6.0,0,0.7692307692307693,8253.0,1953.0,0,0.7633587786259542
2023-11-17,26.0,6.0,0,0.7692307692307693,8279.0,1959.0,0,0.7633772194709506
2023-11-18,26.0,7.0,0,0.7307692307692307,8305.0,1966.0,0,0.7632751354605659
2023-11-19,26.0,7.0,0,0.7307692307692307,8331.0,1973.0,0,0.7631736886328172
2023-11-20,26.0,7.0,0,0.7307692307692307,8357.0,1980.0,0,0.7630728730405648
2023-11-21,26.0,7.0,0,0.7307692307692307,8383.0,1987.0,0,0.7629726828104497
2023-11-22,26.0,7.0,0,0.7307692307692307,8409.0,1994.0,0,0.7628731121417529
2023-11-23,26.0,6.0,0,0.7692307692307693,8435.0,2000.0,0,0.7628927089508002
2023-11-24,26.0,6.0,0,0.7692307692307693,8461.0,2006.0,0,0.762912185320884
2023-11-25,26.0,7.0,0,0.7307692307692307,8487.0,2013.0,0,0.7628137150936727
2023-11-26,26.0,6.0,0,0.7692307692307693,8513.0,2019.0,0,0.7628333137554328
2023-11-27,26.0,6.0,0,0.7692307692307693,8539.0,2025.0,0,0.7628527930671039
2023-11-28,26.0,6.0,0,0.7692307692307693,8565.0,2031.0,0,0.7628721541155867
2023-11-29,26.0,5.0,0,0.8076923076923077,8591.0,2036.0,0,0.7630077988592713
2023-11-30,26.0,6.0,0,0.7692307692307693,8617.0,2042.0,0,0.7630265753742602
2023-12-01,25.0,7.0,0,0.72,8642.0,2049.0,0,0.7629021059939829
2023-12-02,26.0,13.0,0,0.5,8668.0,2062.0,0,0.7621135209967698
2023-12-03,26.0,13.0,0,0.5,8694.0,2075.0,0,0.7613296526340004
2023-12-04,26.0,13.0,0,0.5,8720.0,2088.0,0,0.7605504587155963
2023-12-05,26.0,10.0,0,0.6153846153846154,8746.0,2098.0,0,0.7601189115024011
2023-12-06,26.0,10.0,0,0.6153846153846154,8772.0,2108.0,0,0.7596899224806202
2023-12-07,26.0,10.0,0,0.6153846153846154,8798.0,2118.0,0,0.7592634689702205
2023-12-08,26.0,7.0,0,0.7307692307692307,8824.0,2125.0,0,0.7591795104261106
2023-12-09,26.0,8.0,0,0.6923076923076923,8850.0,2133.0,0,0.7589830508474577
2023-12-10,26.0,8.0,0,0.6923076923076923,8876.0,2141.0,0,0.758787742226228
2023-12-11,26.0,7.0,0,0.7307692307692307,8902.0,2148.0,0,0.7587059087845428
2023-12-12,26.0,7.0,0,0.7307692307692307,8928.0,2155.0,0,0.7586245519713262
2023-12-13,26.0,8.0,0,0.6923076923076923,8954.0,2163.0,0,0.7584319857047129
2023-12-14,26.0,9.0,0,0.6538461538461539,8980.0,2172.0,0,0.7581291759465479
2023-12-15,26.0,8.0,0,0.6923076923076923,9006.0,2180.0,0,0.75793915167666
2023-12-16,26.0,5.0,0,0.8076923076923077,9032.0,2185.0,0,0.7580823737821081
2023-12-17,26.0,5.0,0,0.8076923076923077,9058.0,2190.0,0,0.7582247736807243
2023-12-18,26.0,7.0,0,0.7307692307692307,9084.0,2197.0,0,0.75814619110524
2023-12-19,26.0,7.0,0,0.7307692307692307,9110.0,2204.0,0,0.7580680570801317
2023-12-20,26.0,6.0,0,0.7692307692307693,9136.0,2210.0,0,0.7580998248686515
2023-12-21,26.0,7.0,0,0.7307692307692307,9162.0,2217.0,0,0.758022265880812
2023-12-22,26.0,8.0,0,0.6923076923076923,9188.0,2225.0,0,0.7578363082281236
2023-12-23,26.0,10.0,0,0.6153846153846154,9214.0,2235.0,0,0.7574343390492728
2023-12-24,26.0,10.0,0,0.6153846153846154,9240.0,2245.0,0,0.7570346320346321
2023-12-25,26.0,10.0,0,0.6153846153846154,9266.0,2255.0,0,0.7566371681415929
2023-12-26,26.0,10.0,0,0.6153846153846154,9292.0,2265.0,0,0.7562419285406802
2023-12-27,26.0,10.0,0,0.6153846153846154,9318.0,2275.0,0,0.7558488946125778
2023-12-28,26.0,10.0,0,0.6153846153846154,9344.0,2285.0,0,0.7554580479452054
2023-12-29,26.0,12.0,0,0.5384615384615384,9370.0,2297.0,0,0.7548559231590182
2023-12-30,26.0,11.0,0,0.5769230769230769,9396.0,2308.0,0,0.7543635589612601
2023-12-31,26.0,11.0,0,0.5769230769230769,9422.0,2319.0,0,0.7538739121205689
2024-01-01,26.0,11.0,0,0.5769230769230769,9448.0,2330.0,0,0.7533869602032176
2024-01-02,26.0,13.0,0,0.5,9474.0,2343.0,0,0.752691576947435
2024-01-03,26.0,11.0,0,0.5769230769230769,9500.0,2354.0,0,0.7522105263157894
2024-01-04,26.0,8.0,0,0.6923076923076923,9526.0,2362.0,0,0.7520470291832878
2024-01-05,26.0,11.0,0,0.5769230769230769,9552.0,2373.0,0,0.7515703517587939
2024-01-06,26.0,11.0,0,0.5769230769230769,9578.0,2384.0,0,0.7510962622676968
2024-01-07,26.0,11.0,0,0.5769230769230769,9604.0,2395.0,0,0.7506247396917951
2024-01-08,26.0,11.0,0,0.5769230769230769,9630.0,2406.0,0,0.7501557632398754
2024-01-09,26.0,10.0,0,0.6153846153846154,9656.0,2416.0,0,0.7497928748964374
2024-01-10,26.0,10.0,0,0.6153846153846154,9682.0,2426.0,0,0.7494319355505061
2024-01-11,26.0,9.0,0,0.6538461538461539,9708.0,2435.0,0,0.7491759373712402
2024-01-12,26.0,8.0,0,0.6923076923076923,9734.0,2443.0,0,0.7490240394493528
2024-01-13,26.0,9.0,0,0.6538461538461539,9760.0,2452.0,0,0.7487704918032787
2024-01-14,26.0,9.0,0,0.6538461538461539,9786.0,2461.0,0,0.7485182914367464
2024-01-15,26.0,9.0,0,0.6538461538461539,9812.0,2470.0,0,0.748267427639625
2024-01-16,26.0,9.0,0,0.6538461538461539,9838.0,2479.0,0,0.7480178898150031
2024-01-17,26.0,9.0,0,0.6538461538461539,9864.0,2488.0,0,0.7477696674776967
2024-01-18,26.0,8.0,0,0.6923076923076923,9890.0,2496.0,0,0.747623862487361
2024-01-19,24.0,5.0,0,0.7916666666666666,9914.0,2501.0,0,0.7477304821464595
2024-01-20,24.0,6.0,0,0.75,9938.0,2507.0,0,0.7477359629704166
2024-01-21,24.0,6.0,0,0.75,9962.0,2513.0,0,0.747741417386067
2024-01-22,24.0,5.0,0,0.7916666666666666,9986.0,2518.0,0,0.7478469857800921
2024-01-23,24.0,7.0,0,0.7083333333333334,10010.0,2525.0,0,0.7477522477522478
2024-01-24,26.0,8.0,0,0.6923076923076923,10036.0,2533.0,0,0.7476086090075728
2024-01-25,26.0,8.0,0,0.6923076923076923,10062.0,2541.0,0,0.7474657125819917
2024-01-26,24.0,8.0,0,0.6666666666666666,10086.0,2549.0,0,0.7472734483442396
2024-01-27,24.0,9.0,0,0.625,10110.0,2558.0,0,0.7469831849653809
2024-01-28,24.0,8.0,0,0.6666666666666666,10134.0,2566.0,0,0.7467929741464377
2024-01-29,24.0,9.0,0,0.625,10158.0,2575.0,0,0.7465052175625123
2024-01-30,24.0,9.0,0,0.625,10182.0,2584.0,0,0.7462188175211157
2024-01-31,24.0,8.0,0,0.6666666666666666,10206.0,2592.0,0,0.746031746031746
2024-02-01,24.0,7.0,0,0.7083333333333334,10230.0,2599.0,0,0.7459433040078202
2024-02-02,24.0,8.0,0,0.6666666666666666,10254.0,2607.0,0,0.7457577530719719
2024-02-03,26.0,12.0,0,0.5384615384615384,10280.0,2619.0,0,0.7452334630350195
2024-02-04,26.0,12.0,0,0.5384615384615384,10306.0,2631.0,0,0.744711818358238
2024-02-05,24.0,11.0,0,0.5416666666666666,10330.0,2642.0,0,0.7442400774443368
2024-02-06,24.0,6.0,0,0.75,10354.0,2648.0,0,0.7442534286266177
2024-02-07,24.0,6.0,0,0.75,10378.0,2654.0,0,0.7442667180574292
2024-02-08,24.0,6.0,0,0.75,10402.0,2660.0,0,0.7442799461641992
2024-02-09,24.0,6.0,0,0.75,10426.0,2666.0,0,0.7442931133704201
2024-02-10,24.0,5.0,0,0.7916666666666666,10450.0,2671.0,0,0.7444019138755981
2024-02-11,24.0,6.0,0,0.75,10474.0,2677.0,0,0.7444147412640825
2024-02-12,24.0,6.0,0,0.75,10498.0,2683.0,0,0.7444275100019051
2024-02-13,24.0,8.0,0,0.6666666666666666,10522.0,2691.0,0,0.744250142558449
2024-02-14,26.0,8.0,0,0.6923076923076923,10548.0,2699.0,0,0.7441221084565794
2024-02-15,26.0,7.0,0,0.7307692307692307,10574.0,2706.0,0,0.7440892755816153
2024-02-16,26.0,7.0,0,0.7307692307692307,10600.0,2713.0,0,0.744056603773585
2024-02-17,26.0,9.0,0,0.6538461538461539,10626.0,2722.0,0,0.7438358742706569
2024-02-18,26.0,9.0,0,0.6538461538461539,10652.0,2731.0,0,0.7436162223056703
2024-02-19,26.0,9.0,0,0.6538461538461539,10678.0,2740.0,0,0.7433976400074921
2024-02-20,26.0,9.0,0,0.6538461538461539,10704.0,2749.0,0,0.7431801195814649
2024-02-21,26.0,9.0,0,0.6538461538461539,10730.0,2758.0,0,0.7429636533084809
2024-02-22,26.0,7.0,0,0.7307692307692307,10756.0,2765.0,0,0.7429341762737077
2024-02-23,26.0,8.0,0,0.6923076923076923,10782.0,2773.0,0,0.7428120942311259
2024-02-24,26.0,8.0,0,0.6923076923076923,10808.0,2781.0,0,0.7426905995558846
2024-02-25,26.0,8.0,0,0.6923076923076923,10834.0,2789.0,0,0.7425696880191989
2024-02-26,26.0,8.0,0,0.6923076923076923,10860.0,2797.0,0,0.7424493554327809
2024-02-27,26.0,8.0,0,0.6923076923076923,10886.0,2805.0,0,0.7423295976483557
2024-02-28,26.0,6.0,0,0.7692307692307693,10912.0,2811.0,0,0.7423936950146628
2024-02-29,26.0,6.0,0,0.7692307692307693,10938.0,2817.0,0,0.742457487657707
2024-03-01,26.0,6.0,0,0.7692307692307693,10964.0,2823.0,0,0.7425209777453484
2024-03-02,26.0,6.0,0,0.7692307692307693,10990.0,2829.0,0,0.7425841674249317
2024-03-03,26.0,7.0,0,0.7307692307692307,11016.0,2836.0,0,0.7425562817719681
2024-03-04,26.0,7.0,0,0.7307692307692307,11042.0,2843.0,0,0.742528527440681
2024-03-05,26.0,5.0,0,0.8076923076923077,11068.0,2848.0,0,0.7426816046259487
2024-03-06,26.0,7.0,0,0.7307692307692307,11094.0,2855.0,0,0.7426536866774833
2024-03-07,26.0,7.0,0,0.7307692307692307,11120.0,2862.0,0,0.7426258992805755
2024-03-08,26.0,4.0,0,0.8461538461538461,11146.0,2866.0,0,0.7428673963753814
2024-03-09,26.0,5.0,0,0.8076923076923077,11172.0,2871.0,0,0.7430182599355531
2024-03-10,26.0,5.0,0,0.8076923076923077,11198.0,2876.0,0,0.7431684229326665
2024-03-11,26.0,5.0,0,0.8076923076923077,11224.0,2881.0,0,0.7433178902352102
2024-03-12,26.0,6.0,0,0.7692307692307693,11250.0,2887.0,0,0.7433777777777778
2024-03-13,26.0,4.0,0,0.8461538461538461,11276.0,2891.0,0,0.7436147570060305
2024-03-14,26.0,3.0,0,0.8846153846153846,11302.0,2894.0,0,0.7439391258184392
2024-03-15,26.0,3.0,0,0.8846153846153846,11328.0,2897.0,0,0.7442620056497176
2024-03-16,26.0,4.0,0,0.8461538461538461,11354.0,2901.0,0,0.7444953320415713
2024-03-17,26.0,5.0,0,0.8076923076923077,11380.0,2906.0,0,0.744639718804921
2024-03-18,26.0,5.0,0,0.8076923076923077,11406.0,2911.0,0,0.7447834473084342
2024-03-19,26.0,8.0,0,0.6923076923076923,11432.0,2919.0,0,0.7446641007697691
2024-03-20,26.0,7.0,0,0.7307692307692307,11458.0,2926.0,0,0.7446325711293419
2024-03-21,26.0,6.0,0,0.7692307692307693,11484.0,2932.0,0,0.7446882619296412
2024-03-22,26.0,5.0,0,0.8076923076923077,11510.0,2937.0,0,0.7448305821025195
2024-03-23,26.0,6.0,0,0.7692307692307693,11536.0,2943.0,0,0.7448855755894591
2024-03-24,26.0,6.0,0,0.7692307692307693,11562.0,2949.0,0,0.744940321743643
2024-03-25,26.0,6.0,0,0.7692307692307693,11588.0,2955.0,0,0.744994822229893
2024-03-26,26.0,7.0,0,0.7307692307692307,11614.0,2962.0,0,0.7449629757189599
2024-03-27,26.0,6.0,0,0.7692307692307693,11640.0,2968.0,0,0.7450171821305842
2024-03-28,26.0,6.0,0,0.7692307692307693,11666.0,2974.0,0,0.7450711469226813
2024-03-29,26.0,5.0,0,0.8076923076923077,11692.0,2979.0,0,0.7452104002736915
2024-03-30,26.0,5.0,0,0.8076923076923077,11718.0,2984.0,0,0.7453490356716164
2024-03-31,26.0,5.0,0,0.8076923076923077,11744.0,2989.0,0,0.7454870572207084
2024-04-01,26.0,5.0,0,0.8076923076923077,11770.0,2994.0,0,0.745624468988955
2024-04-02,26.0,4.0,0,0.8461538461538461,11796.0,2998.0,0,0.7458460495083079
2024-04-03,26.0,6.0,0,0.7692307692307693,11822.0,3004.0,0,0.7458974792759262
2024-04-04,26.0,10.0,0,0.6153846153846154,11848.0,3014.0,0,0.7456110735989196
2024-04-05,26.0,7.0,0,0.7307692307692307,11874.0,3021.0,0,0.7455785750378979
2024-04-06,26.0,9.0,0,0.6538461538461539,11900.0,3030.0,0,0.7453781512605042
2024-04-07,26.0,9.0,0,0.6538461538461539,11926.0,3039.0,0,0.7451786013751467
2024-04-08,26.0,9.0,0,0.6538461538461539,11952.0,3048.0,0,0.7449799196787149
2024-04-09,26.0,8.0,0,0.6923076923076923,11978.0,3056.0,0,0.7448655869093338
2024-04-10,26.0,8.0,0,0.6923076923076923,12004.0,3064.0,0,0.7447517494168611
2024-04-11,26.0,6.0,0,0.7692307692307693,12030.0,3070.0,0,0.744804655029094
2024-04-12,26.0,3.0,0,0.8846153846153846,12056.0,3073.0,0,0.7451061712010617
2024-04-13,26.0,2.0,0,0.9230769230769231,12082.0,3075.0,0,0.7454891574242675
2024-04-14,26.0,4.0,0,0.8461538461538461,12108.0,3079.0,0,0.7457053187974892
2024-04-15,26.0,4.0,0,0.8461538461538461,12134.0,3083.0,0,0.7459205538157244
2024-04-16,26.0,5.0,0,0.8076923076923077,12160.0,3088.0,0,0.7460526315789474
2024-04-17,26.0,6.0,0,0.7692307692307693,12186.0,3094.0,0,0.7461020843591006

================
File: output/data/current_model_max_capacity.csv
================
Date,Total_Patients,Single_Room_Patients,Double_Room_Patients,Is_Max_Capacity
2023-01-01,15.0,11.0,4.0,True
2023-01-02,15.0,11.0,4.0,True
2023-01-03,15.0,11.0,4.0,True
2023-01-04,16.0,10.0,6.0,True
2023-01-05,15.0,11.0,4.0,True
2023-01-06,15.0,11.0,4.0,True
2023-01-07,14.0,12.0,2.0,True
2023-01-08,14.0,12.0,2.0,True
2023-01-09,14.0,12.0,2.0,True
2023-01-10,14.0,12.0,2.0,True
2023-01-11,13.0,13.0,0.0,True
2023-01-18,16.0,10.0,6.0,True
2023-01-28,21.0,5.0,16.0,True
2023-02-01,22.0,4.0,18.0,True
2023-02-03,22.0,4.0,18.0,True
2023-02-05,21.0,5.0,16.0,True
2023-02-06,21.0,5.0,16.0,True
2023-02-12,21.0,5.0,16.0,True
2023-02-13,21.0,5.0,16.0,True
2023-02-18,21.0,5.0,16.0,True
2023-02-19,21.0,5.0,16.0,True
2023-02-20,21.0,5.0,16.0,True
2023-02-22,20.0,6.0,14.0,True
2023-02-24,22.0,4.0,18.0,True
2023-02-26,20.0,6.0,14.0,True
2023-02-27,20.0,6.0,14.0,True
2023-03-01,19.0,7.0,12.0,True
2023-03-04,19.0,7.0,12.0,True
2023-03-05,19.0,7.0,12.0,True
2023-03-06,19.0,7.0,12.0,True
2023-03-17,18.0,8.0,10.0,True
2023-03-22,19.0,7.0,12.0,True
2023-04-08,19.0,7.0,12.0,True
2023-04-09,19.0,7.0,12.0,True
2023-04-10,19.0,7.0,12.0,True
2023-04-11,19.0,7.0,12.0,True
2023-04-14,21.0,5.0,16.0,True
2023-04-15,20.0,6.0,14.0,True
2023-04-26,21.0,5.0,16.0,True
2023-04-27,21.0,5.0,16.0,True
2023-04-28,20.0,6.0,14.0,True
2023-04-29,18.0,8.0,10.0,True
2023-04-30,18.0,8.0,10.0,True
2023-05-01,18.0,8.0,10.0,True
2023-05-03,19.0,7.0,12.0,True
2023-05-05,20.0,6.0,14.0,True
2023-05-06,20.0,6.0,14.0,True
2023-05-07,20.0,6.0,14.0,True
2023-05-08,20.0,6.0,14.0,True
2023-05-09,17.0,9.0,8.0,True
2023-05-10,21.0,5.0,16.0,True
2023-05-11,21.0,5.0,16.0,True
2023-05-12,21.0,5.0,16.0,True
2023-05-13,19.0,7.0,12.0,True
2023-05-14,19.0,7.0,12.0,True
2023-05-15,19.0,7.0,12.0,True
2023-05-16,18.0,8.0,10.0,True
2023-05-17,19.0,7.0,12.0,True
2023-05-21,21.0,5.0,16.0,True
2023-05-24,19.0,7.0,12.0,True
2023-05-25,19.0,7.0,12.0,True
2023-05-26,18.0,8.0,10.0,True
2023-05-27,19.0,7.0,12.0,True
2023-05-28,19.0,7.0,12.0,True
2023-05-29,20.0,6.0,14.0,True
2023-05-31,20.0,6.0,14.0,True
2023-06-01,20.0,6.0,14.0,True
2023-06-02,22.0,4.0,18.0,True
2023-06-04,20.0,6.0,14.0,True
2023-06-05,20.0,6.0,14.0,True
2023-06-15,20.0,6.0,14.0,True
2023-06-16,21.0,5.0,16.0,True
2023-06-17,19.0,7.0,12.0,True
2023-06-18,19.0,7.0,12.0,True
2023-06-19,19.0,7.0,12.0,True
2023-06-20,19.0,7.0,12.0,True
2023-06-21,18.0,8.0,10.0,True
2023-06-22,18.0,8.0,10.0,True
2023-06-23,18.0,8.0,10.0,True
2023-06-25,19.0,7.0,12.0,True
2023-06-26,19.0,7.0,12.0,True
2023-06-29,21.0,5.0,16.0,True
2023-07-07,22.0,4.0,18.0,True
2023-07-08,20.0,6.0,14.0,True
2023-07-09,20.0,6.0,14.0,True
2023-07-10,20.0,6.0,14.0,True
2023-08-26,17.0,9.0,8.0,True
2023-08-27,17.0,9.0,8.0,True
2023-08-28,17.0,9.0,8.0,True
2023-09-10,20.0,6.0,14.0,True
2023-09-11,20.0,6.0,14.0,True
2023-09-16,20.0,6.0,14.0,True
2023-09-17,20.0,6.0,14.0,True
2023-09-18,20.0,6.0,14.0,True
2023-10-15,19.0,7.0,12.0,True
2023-10-16,19.0,7.0,12.0,True
2023-10-19,19.0,7.0,12.0,True
2023-10-30,18.0,8.0,10.0,True
2023-10-31,18.0,8.0,10.0,True
2023-11-01,17.0,9.0,8.0,True
2023-11-03,18.0,8.0,10.0,True
2023-11-04,18.0,8.0,10.0,True
2023-11-05,18.0,8.0,10.0,True
2023-11-06,18.0,8.0,10.0,True
2023-11-07,18.0,8.0,10.0,True
2023-11-09,18.0,8.0,10.0,True
2023-11-11,20.0,6.0,14.0,True
2023-11-12,20.0,6.0,14.0,True
2023-11-13,20.0,6.0,14.0,True
2023-11-14,19.0,7.0,12.0,True
2023-11-22,19.0,7.0,12.0,True
2023-11-26,20.0,6.0,14.0,True
2023-11-27,20.0,6.0,14.0,True
2023-12-02,13.0,13.0,0.0,True
2023-12-03,13.0,13.0,0.0,True
2023-12-04,13.0,13.0,0.0,True
2023-12-13,18.0,8.0,10.0,True
2023-12-15,18.0,8.0,10.0,True
2023-12-19,19.0,7.0,12.0,True
2023-12-28,16.0,10.0,6.0,True
2023-12-29,14.0,12.0,2.0,True
2024-01-02,13.0,13.0,0.0,True
2024-01-05,15.0,11.0,4.0,True
2024-01-06,15.0,11.0,4.0,True
2024-01-07,15.0,11.0,4.0,True
2024-01-08,15.0,11.0,4.0,True
2024-01-17,17.0,9.0,8.0,True
2024-02-23,18.0,8.0,10.0,True
2024-02-25,18.0,8.0,10.0,True
2024-02-26,18.0,8.0,10.0,True
2024-04-04,16.0,10.0,6.0,True

================
File: output/data/max_capacity_summary.csv
================
Metric,Current Model,Optimized Model
Total Days at Max Capacity,131,0
Percent Days at Max Capacity,27.70%,0.00%

================
File: output/data/optimized_model_data_test_set_may_to_oct2024.csv
================
Date,Available Beds,Wasted Beds,Wasted Potential,Daily Efficiency,Cumulative Available Beds,Cumulative Wasted Beds,Cumulative Wasted Potential,Cumulative Efficiency
2024-05-01,26,0.0,0,1.0,26,0.0,0,1.0
2024-05-02,26,0.0,0,1.0,52,0.0,0,1.0
2024-05-03,26,0.0,0,1.0,78,0.0,0,1.0
2024-05-04,26,0.0,0,1.0,104,0.0,0,1.0
2024-05-05,26,0.0,0,1.0,130,0.0,0,1.0
2024-05-06,26,0.0,0,1.0,156,0.0,0,1.0
2024-05-07,26,0.0,0,1.0,182,0.0,0,1.0
2024-05-08,26,0.0,0,1.0,208,0.0,0,1.0
2024-05-09,26,0.0,0,1.0,234,0.0,0,1.0
2024-05-10,26,0.0,0,1.0,260,0.0,0,1.0
2024-05-11,26,0.0,0,1.0,286,0.0,0,1.0
2024-05-12,26,1.0,0,0.9615384615384616,312,1.0,0,0.9967948717948718
2024-05-13,26,1.0,0,0.9615384615384616,338,2.0,0,0.9940828402366864
2024-05-14,26,0.0,0,1.0,364,2.0,0,0.9945054945054945
2024-05-15,26,0.0,0,1.0,390,2.0,0,0.9948717948717949
2024-05-16,26,0.0,0,1.0,416,2.0,0,0.9951923076923077
2024-05-17,26,0.0,0,1.0,442,2.0,0,0.995475113122172
2024-05-18,26,0.0,0,1.0,468,2.0,0,0.9957264957264957
2024-05-19,26,0.0,0,1.0,494,2.0,0,0.9959514170040485
2024-05-20,26,0.0,0,1.0,520,2.0,0,0.9961538461538462
2024-05-21,24,0.0,0,1.0,544,2.0,0,0.9963235294117647
2024-05-22,24,0.0,0,1.0,568,2.0,0,0.9964788732394366
2024-05-23,24,0.0,0,1.0,592,2.0,0,0.9966216216216216
2024-05-24,24,0.0,0,1.0,616,2.0,0,0.9967532467532467
2024-05-25,26,0.0,0,1.0,642,2.0,0,0.9968847352024922
2024-05-26,24,0.0,0,1.0,666,2.0,0,0.996996996996997
2024-05-27,24,0.0,0,1.0,690,2.0,0,0.9971014492753624
2024-05-28,24,0.0,0,1.0,714,2.0,0,0.9971988795518207
2024-05-29,24,0.0,0,1.0,738,2.0,0,0.997289972899729
2024-05-30,24,0.0,0,1.0,762,2.0,0,0.9973753280839895
2024-05-31,24,0.0,0,1.0,786,2.0,0,0.9974554707379135
2024-06-01,22,0.0,0,1.0,808,2.0,0,0.9975247524752475
2024-06-02,24,0.0,0,1.0,832,2.0,0,0.9975961538461539
2024-06-03,24,0.0,0,1.0,856,2.0,0,0.9976635514018691
2024-06-04,22,0.0,0,1.0,878,2.0,0,0.9977220956719818
2024-06-05,24,0.0,0,1.0,902,2.0,0,0.9977827050997783
2024-06-06,24,0.0,0,1.0,926,2.0,0,0.9978401727861771
2024-06-07,24,0.0,0,1.0,950,2.0,0,0.9978947368421053
2024-06-08,24,0.0,0,1.0,974,2.0,0,0.997946611909651
2024-06-09,24,0.0,0,1.0,998,2.0,0,0.9979959919839679
2024-06-10,24,0.0,0,1.0,1022,2.0,0,0.9980430528375733
2024-06-11,24,0.0,0,1.0,1046,2.0,0,0.9980879541108987
2024-06-12,24,0.0,0,1.0,1070,2.0,0,0.9981308411214953
2024-06-13,24,0.0,0,1.0,1094,2.0,0,0.9981718464351006
2024-06-14,24,0.0,0,1.0,1118,2.0,0,0.998211091234347
2024-06-15,24,0.0,0,1.0,1142,2.0,0,0.9982486865148862
2024-06-16,24,0.0,0,1.0,1166,2.0,0,0.9982847341337907
2024-06-17,24,0.0,0,1.0,1190,2.0,0,0.9983193277310924
2024-06-18,24,0.0,0,1.0,1214,2.0,0,0.9983525535420099
2024-06-19,24,0.0,0,1.0,1238,2.0,0,0.9983844911147012
2024-06-20,24,0.0,0,1.0,1262,2.0,0,0.9984152139461173
2024-06-21,24,0.0,0,1.0,1286,2.0,0,0.9984447900466563
2024-06-22,24,0.0,0,1.0,1310,2.0,0,0.9984732824427481
2024-06-23,24,0.0,0,1.0,1334,2.0,0,0.9985007496251874
2024-06-24,24,0.0,0,1.0,1358,2.0,0,0.9985272459499264
2024-06-25,24,0.0,0,1.0,1382,2.0,0,0.9985528219971056
2024-06-26,24,0.0,0,1.0,1406,2.0,0,0.9985775248933144
2024-06-27,24,0.0,0,1.0,1430,2.0,0,0.9986013986013986
2024-06-28,24,0.0,0,1.0,1454,2.0,0,0.9986244841815681
2024-06-29,24,0.0,0,1.0,1478,2.0,0,0.9986468200270636
2024-06-30,24,0.0,0,1.0,1502,2.0,0,0.9986684420772304
2024-07-01,24,0.0,0,1.0,1526,2.0,0,0.9986893840104849
2024-07-02,24,0.0,0,1.0,1550,2.0,0,0.9987096774193548
2024-07-03,24,0.0,0,1.0,1574,2.0,0,0.9987293519695044
2024-07-04,24,0.0,0,1.0,1598,2.0,0,0.9987484355444305
2024-07-05,24,0.0,0,1.0,1622,2.0,0,0.998766954377312
2024-07-06,24,0.0,0,1.0,1646,2.0,0,0.9987849331713244
2024-07-07,24,0.0,0,1.0,1670,2.0,0,0.9988023952095808
2024-07-08,24,0.0,0,1.0,1694,2.0,0,0.9988193624557261
2024-07-09,24,0.0,0,1.0,1718,2.0,0,0.9988358556461001
2024-07-10,24,0.0,0,1.0,1742,2.0,0,0.9988518943742825
2024-07-11,24,0.0,0,1.0,1766,2.0,0,0.9988674971687429
2024-07-12,24,0.0,0,1.0,1790,2.0,0,0.9988826815642458
2024-07-13,24,0.0,0,1.0,1814,2.0,0,0.9988974641675854
2024-07-14,24,0.0,0,1.0,1838,2.0,0,0.998911860718172
2024-07-15,24,0.0,0,1.0,1862,2.0,0,0.9989258861439313
2024-07-16,24,0.0,0,1.0,1886,2.0,0,0.9989395546129375
2024-07-17,24,0.0,0,1.0,1910,2.0,0,0.9989528795811519
2024-07-18,24,0.0,0,1.0,1934,2.0,0,0.9989658738366081
2024-07-19,24,0.0,0,1.0,1958,2.0,0,0.9989785495403473
2024-07-20,24,0.0,0,1.0,1982,2.0,0,0.9989909182643795
2024-07-21,24,0.0,0,1.0,2006,2.0,0,0.9990029910269193
2024-07-22,24,0.0,0,1.0,2030,2.0,0,0.9990147783251232
2024-07-23,24,0.0,0,1.0,2054,2.0,0,0.9990262901655307
2024-07-24,24,0.0,0,1.0,2078,2.0,0,0.9990375360923965
2024-07-25,24,0.0,0,1.0,2102,2.0,0,0.9990485252140818
2024-07-26,24,0.0,0,1.0,2126,2.0,0,0.9990592662276576
2024-07-27,26,0.0,0,1.0,2152,2.0,0,0.9990706319702602
2024-07-28,26,0.0,0,1.0,2178,2.0,0,0.9990817263544536
2024-07-29,26,0.0,0,1.0,2204,2.0,0,0.9990925589836661
2024-07-30,26,0.0,0,1.0,2230,2.0,0,0.9991031390134529
2024-07-31,26,0.0,0,1.0,2256,2.0,0,0.999113475177305
2024-08-01,26,0.0,0,1.0,2282,2.0,0,0.9991235758106923
2024-08-02,26,0.0,0,1.0,2308,2.0,0,0.9991334488734835
2024-08-03,26,0.0,0,1.0,2334,2.0,0,0.9991431019708654
2024-08-04,26,0.0,0,1.0,2360,2.0,0,0.9991525423728813
2024-08-05,26,0.0,0,1.0,2386,2.0,0,0.9991617770326907
2024-08-06,26,0.0,0,1.0,2412,2.0,0,0.9991708126036484
2024-08-07,26,0.0,0,1.0,2438,2.0,0,0.9991796554552912
2024-08-08,26,0.0,0,1.0,2464,2.0,0,0.9991883116883117
2024-08-09,26,0.0,0,1.0,2490,2.0,0,0.9991967871485944
2024-08-10,26,0.0,0,1.0,2516,2.0,0,0.9992050874403816
2024-08-11,24,0.0,0,1.0,2540,2.0,0,0.9992125984251968
2024-08-12,24,0.0,0,1.0,2564,2.0,0,0.999219968798752
2024-08-13,26,0.0,0,1.0,2590,2.0,0,0.9992277992277993
2024-08-14,26,0.0,0,1.0,2616,2.0,0,0.9992354740061162
2024-08-15,26,0.0,0,1.0,2642,2.0,0,0.9992429977289932
2024-08-16,26,0.0,0,1.0,2668,2.0,0,0.9992503748125937
2024-08-17,26,0.0,0,1.0,2694,2.0,0,0.9992576095025983
2024-08-18,26,0.0,0,1.0,2720,2.0,0,0.9992647058823529
2024-08-19,26,0.0,0,1.0,2746,2.0,0,0.9992716678805535
2024-08-20,24,0.0,0,1.0,2770,2.0,0,0.9992779783393502
2024-08-21,24,0.0,0,1.0,2794,2.0,0,0.9992841803865425
2024-08-22,24,0.0,0,1.0,2818,2.0,0,0.9992902767920511
2024-08-23,26,0.0,0,1.0,2844,2.0,0,0.9992967651195499
2024-08-24,26,0.0,0,1.0,2870,2.0,0,0.9993031358885017
2024-08-25,26,0.0,0,1.0,2896,2.0,0,0.9993093922651933
2024-08-26,26,0.0,0,1.0,2922,2.0,0,0.999315537303217
2024-08-27,26,0.0,0,1.0,2948,2.0,0,0.9993215739484396
2024-08-28,26,0.0,0,1.0,2974,2.0,0,0.9993275050437121
2024-08-29,26,0.0,0,1.0,3000,2.0,0,0.9993333333333333
2024-08-30,26,0.0,0,1.0,3026,2.0,0,0.9993390614672836
2024-08-31,26,0.0,0,1.0,3052,2.0,0,0.9993446920052425
2024-09-01,26,0.0,0,1.0,3078,2.0,0,0.9993502274204028
2024-09-02,26,0.0,0,1.0,3104,2.0,0,0.9993556701030928
2024-09-03,26,0.0,0,1.0,3130,2.0,0,0.9993610223642172
2024-09-04,26,0.0,0,1.0,3156,2.0,0,0.9993662864385298
2024-09-05,26,0.0,0,1.0,3182,2.0,0,0.9993714644877436
2024-09-06,26,0.0,0,1.0,3208,2.0,0,0.9993765586034913
2024-09-07,26,0.0,0,1.0,3234,2.0,0,0.9993815708101422
2024-09-08,26,0.0,0,1.0,3260,2.0,0,0.9993865030674847
2024-09-09,26,0.0,0,1.0,3286,2.0,0,0.9993913572732805
2024-09-10,26,0.0,0,1.0,3312,2.0,0,0.9993961352657005
2024-09-11,26,0.0,0,1.0,3338,2.0,0,0.9994008388256441
2024-09-12,26,0.0,0,1.0,3364,2.0,0,0.9994054696789536
2024-09-13,26,0.0,0,1.0,3390,2.0,0,0.9994100294985251
2024-09-14,26,0.0,0,1.0,3416,2.0,0,0.9994145199063232
2024-09-15,26,0.0,0,1.0,3442,2.0,0,0.999418942475305
2024-09-16,26,0.0,0,1.0,3468,2.0,0,0.9994232987312572
2024-09-17,26,0.0,0,1.0,3494,2.0,0,0.9994275901545506
2024-09-18,26,0.0,0,1.0,3520,2.0,0,0.9994318181818181
2024-09-19,26,0.0,0,1.0,3546,2.0,0,0.9994359842075579
2024-09-20,26,0.0,0,1.0,3572,2.0,0,0.9994400895856663
2024-09-21,26,0.0,0,1.0,3598,2.0,0,0.9994441356309061
2024-09-22,26,1.0,0,0.9615384615384616,3624,3.0,0,0.9991721854304636
2024-09-23,26,1.0,0,0.9615384615384616,3650,4.0,0,0.9989041095890411
2024-09-24,26,0.0,0,1.0,3676,4.0,0,0.998911860718172
2024-09-25,26,0.0,0,1.0,3702,4.0,0,0.9989195029713668
2024-09-26,26,0.0,0,1.0,3728,4.0,0,0.9989270386266095
2024-09-27,26,0.0,0,1.0,3754,4.0,0,0.9989344698987747
2024-09-28,26,1.0,0,0.9615384615384616,3780,5.0,0,0.9986772486772487
2024-09-29,26,1.0,0,0.9615384615384616,3806,6.0,0,0.9984235417761429
2024-09-30,26,1.0,0,0.9615384615384616,3832,7.0,0,0.9981732776617954
2024-10-01,26,0.0,0,1.0,3858,7.0,0,0.9981855883877657
2024-10-02,24,0.0,0,1.0,3882,7.0,0,0.9981968057702215
2024-10-03,24,0.0,0,1.0,3906,7.0,0,0.9982078853046595
2024-10-04,26,0.0,0,1.0,3932,7.0,0,0.9982197355035606
2024-10-05,26,0.0,0,1.0,3958,7.0,0,0.9982314300151591
2024-10-06,26,0.0,0,1.0,3984,7.0,0,0.9982429718875502
2024-10-07,26,0.0,0,1.0,4010,7.0,0,0.9982543640897755
2024-10-08,26,0.0,0,1.0,4036,7.0,0,0.9982656095143707
2024-10-09,26,0.0,0,1.0,4062,7.0,0,0.9982767109798129
2024-10-10,24,0.0,0,1.0,4086,7.0,0,0.9982868330885952
2024-10-11,24,0.0,0,1.0,4110,7.0,0,0.9982968369829683
2024-10-12,26,0.0,0,1.0,4136,7.0,0,0.9983075435203095
2024-10-13,26,0.0,0,1.0,4162,7.0,0,0.998318116290245
2024-10-14,26,0.0,0,1.0,4188,7.0,0,0.9983285577841452
2024-10-15,26,0.0,0,1.0,4214,7.0,0,0.9983388704318937
2024-10-16,26,0.0,0,1.0,4240,7.0,0,0.9983490566037736
2024-10-17,24,0.0,0,1.0,4264,7.0,0,0.998358348968105
2024-10-18,26,0.0,0,1.0,4290,7.0,0,0.9983682983682983
2024-10-19,26,0.0,0,1.0,4316,7.0,0,0.9983781278962002
2024-10-20,26,0.0,0,1.0,4342,7.0,0,0.998387839705205
2024-10-21,26,0.0,0,1.0,4368,7.0,0,0.9983974358974359
2024-10-22,26,0.0,0,1.0,4394,7.0,0,0.9984069185252618
2024-10-23,26,0.0,0,1.0,4420,7.0,0,0.9984162895927602
2024-10-24,26,0.0,0,1.0,4446,7.0,0,0.99842555105713
2024-10-25,26,0.0,0,1.0,4472,7.0,0,0.9984347048300537
2024-10-26,26,0.0,0,1.0,4498,7.0,0,0.9984437527790129
2024-10-27,26,0.0,0,1.0,4524,7.0,0,0.9984526967285589
2024-10-28,26,0.0,0,1.0,4550,7.0,0,0.9984615384615385
2024-10-29,26,0.0,0,1.0,4576,7.0,0,0.9984702797202797
2024-10-30,26,0.0,0,1.0,4602,7.0,0,0.9984789222077358
2024-10-31,26,0.0,0,1.0,4628,7.0,0,0.9984874675885912

================
File: output/data/optimized_model_data_test_set.csv
================
Date,Available Beds,Wasted Beds,Wasted Potential,Daily Efficiency,Cumulative Available Beds,Cumulative Wasted Beds,Cumulative Wasted Potential,Cumulative Efficiency
2024-05-01,26,0.0,0,1.0,26,0.0,0,1.0
2024-05-02,26,0.0,0,1.0,52,0.0,0,1.0
2024-05-03,26,0.0,0,1.0,78,0.0,0,1.0
2024-05-04,26,0.0,0,1.0,104,0.0,0,1.0
2024-05-05,26,0.0,0,1.0,130,0.0,0,1.0
2024-05-06,26,0.0,0,1.0,156,0.0,0,1.0
2024-05-07,26,0.0,0,1.0,182,0.0,0,1.0
2024-05-08,26,0.0,0,1.0,208,0.0,0,1.0
2024-05-09,26,0.0,0,1.0,234,0.0,0,1.0
2024-05-10,26,0.0,0,1.0,260,0.0,0,1.0
2024-05-11,26,0.0,0,1.0,286,0.0,0,1.0
2024-05-12,26,1.0,0,0.9615384615384616,312,1.0,0,0.9967948717948718
2024-05-13,26,1.0,0,0.9615384615384616,338,2.0,0,0.9940828402366864
2024-05-14,26,0.0,0,1.0,364,2.0,0,0.9945054945054945
2024-05-15,26,0.0,0,1.0,390,2.0,0,0.9948717948717949
2024-05-16,26,0.0,0,1.0,416,2.0,0,0.9951923076923077
2024-05-17,26,0.0,0,1.0,442,2.0,0,0.995475113122172
2024-05-18,26,0.0,0,1.0,468,2.0,0,0.9957264957264957
2024-05-19,26,0.0,0,1.0,494,2.0,0,0.9959514170040485
2024-05-20,26,0.0,0,1.0,520,2.0,0,0.9961538461538462
2024-05-21,24,0.0,0,1.0,544,2.0,0,0.9963235294117647
2024-05-22,24,0.0,0,1.0,568,2.0,0,0.9964788732394366
2024-05-23,24,0.0,0,1.0,592,2.0,0,0.9966216216216216
2024-05-24,24,0.0,0,1.0,616,2.0,0,0.9967532467532467
2024-05-25,26,0.0,0,1.0,642,2.0,0,0.9968847352024922
2024-05-26,24,0.0,0,1.0,666,2.0,0,0.996996996996997
2024-05-27,24,0.0,0,1.0,690,2.0,0,0.9971014492753624
2024-05-28,24,0.0,0,1.0,714,2.0,0,0.9971988795518207
2024-05-29,24,0.0,0,1.0,738,2.0,0,0.997289972899729
2024-05-30,24,0.0,0,1.0,762,2.0,0,0.9973753280839895
2024-05-31,24,0.0,0,1.0,786,2.0,0,0.9974554707379135
2024-06-01,22,0.0,0,1.0,808,2.0,0,0.9975247524752475
2024-06-02,24,0.0,0,1.0,832,2.0,0,0.9975961538461539
2024-06-03,24,0.0,0,1.0,856,2.0,0,0.9976635514018691
2024-06-04,22,0.0,0,1.0,878,2.0,0,0.9977220956719818
2024-06-05,24,0.0,0,1.0,902,2.0,0,0.9977827050997783
2024-06-06,24,0.0,0,1.0,926,2.0,0,0.9978401727861771
2024-06-07,24,0.0,0,1.0,950,2.0,0,0.9978947368421053
2024-06-08,24,0.0,0,1.0,974,2.0,0,0.997946611909651
2024-06-09,24,0.0,0,1.0,998,2.0,0,0.9979959919839679
2024-06-10,24,0.0,0,1.0,1022,2.0,0,0.9980430528375733
2024-06-11,24,0.0,0,1.0,1046,2.0,0,0.9980879541108987
2024-06-12,24,0.0,0,1.0,1070,2.0,0,0.9981308411214953
2024-06-13,24,0.0,0,1.0,1094,2.0,0,0.9981718464351006
2024-06-14,24,0.0,0,1.0,1118,2.0,0,0.998211091234347
2024-06-15,24,0.0,0,1.0,1142,2.0,0,0.9982486865148862
2024-06-16,24,0.0,0,1.0,1166,2.0,0,0.9982847341337907
2024-06-17,24,0.0,0,1.0,1190,2.0,0,0.9983193277310924
2024-06-18,24,0.0,0,1.0,1214,2.0,0,0.9983525535420099
2024-06-19,24,0.0,0,1.0,1238,2.0,0,0.9983844911147012
2024-06-20,24,0.0,0,1.0,1262,2.0,0,0.9984152139461173
2024-06-21,24,0.0,0,1.0,1286,2.0,0,0.9984447900466563
2024-06-22,24,0.0,0,1.0,1310,2.0,0,0.9984732824427481
2024-06-23,24,0.0,0,1.0,1334,2.0,0,0.9985007496251874
2024-06-24,24,0.0,0,1.0,1358,2.0,0,0.9985272459499264
2024-06-25,24,0.0,0,1.0,1382,2.0,0,0.9985528219971056
2024-06-26,24,0.0,0,1.0,1406,2.0,0,0.9985775248933144
2024-06-27,24,0.0,0,1.0,1430,2.0,0,0.9986013986013986
2024-06-28,24,0.0,0,1.0,1454,2.0,0,0.9986244841815681
2024-06-29,24,0.0,0,1.0,1478,2.0,0,0.9986468200270636
2024-06-30,24,0.0,0,1.0,1502,2.0,0,0.9986684420772304
2024-07-01,24,0.0,0,1.0,1526,2.0,0,0.9986893840104849
2024-07-02,24,0.0,0,1.0,1550,2.0,0,0.9987096774193548
2024-07-03,24,0.0,0,1.0,1574,2.0,0,0.9987293519695044
2024-07-04,24,0.0,0,1.0,1598,2.0,0,0.9987484355444305
2024-07-05,24,0.0,0,1.0,1622,2.0,0,0.998766954377312
2024-07-06,24,0.0,0,1.0,1646,2.0,0,0.9987849331713244
2024-07-07,24,0.0,0,1.0,1670,2.0,0,0.9988023952095808
2024-07-08,24,0.0,0,1.0,1694,2.0,0,0.9988193624557261
2024-07-09,24,0.0,0,1.0,1718,2.0,0,0.9988358556461001
2024-07-10,24,0.0,0,1.0,1742,2.0,0,0.9988518943742825
2024-07-11,24,0.0,0,1.0,1766,2.0,0,0.9988674971687429
2024-07-12,24,0.0,0,1.0,1790,2.0,0,0.9988826815642458
2024-07-13,24,0.0,0,1.0,1814,2.0,0,0.9988974641675854
2024-07-14,24,0.0,0,1.0,1838,2.0,0,0.998911860718172
2024-07-15,24,0.0,0,1.0,1862,2.0,0,0.9989258861439313
2024-07-16,24,0.0,0,1.0,1886,2.0,0,0.9989395546129375
2024-07-17,24,0.0,0,1.0,1910,2.0,0,0.9989528795811519
2024-07-18,24,0.0,0,1.0,1934,2.0,0,0.9989658738366081
2024-07-19,24,0.0,0,1.0,1958,2.0,0,0.9989785495403473
2024-07-20,24,0.0,0,1.0,1982,2.0,0,0.9989909182643795
2024-07-21,24,0.0,0,1.0,2006,2.0,0,0.9990029910269193
2024-07-22,24,0.0,0,1.0,2030,2.0,0,0.9990147783251232
2024-07-23,24,0.0,0,1.0,2054,2.0,0,0.9990262901655307
2024-07-24,24,0.0,0,1.0,2078,2.0,0,0.9990375360923965
2024-07-25,24,0.0,0,1.0,2102,2.0,0,0.9990485252140818
2024-07-26,24,0.0,0,1.0,2126,2.0,0,0.9990592662276576
2024-07-27,26,0.0,0,1.0,2152,2.0,0,0.9990706319702602
2024-07-28,26,0.0,0,1.0,2178,2.0,0,0.9990817263544536
2024-07-29,26,0.0,0,1.0,2204,2.0,0,0.9990925589836661
2024-07-30,26,0.0,0,1.0,2230,2.0,0,0.9991031390134529
2024-07-31,26,0.0,0,1.0,2256,2.0,0,0.999113475177305
2024-08-01,26,0.0,0,1.0,2282,2.0,0,0.9991235758106923
2024-08-02,26,0.0,0,1.0,2308,2.0,0,0.9991334488734835
2024-08-03,26,0.0,0,1.0,2334,2.0,0,0.9991431019708654
2024-08-04,26,0.0,0,1.0,2360,2.0,0,0.9991525423728813
2024-08-05,26,0.0,0,1.0,2386,2.0,0,0.9991617770326907
2024-08-06,26,0.0,0,1.0,2412,2.0,0,0.9991708126036484
2024-08-07,26,0.0,0,1.0,2438,2.0,0,0.9991796554552912
2024-08-08,26,0.0,0,1.0,2464,2.0,0,0.9991883116883117
2024-08-09,26,0.0,0,1.0,2490,2.0,0,0.9991967871485944
2024-08-10,26,0.0,0,1.0,2516,2.0,0,0.9992050874403816
2024-08-11,24,0.0,0,1.0,2540,2.0,0,0.9992125984251968
2024-08-12,24,0.0,0,1.0,2564,2.0,0,0.999219968798752
2024-08-13,26,0.0,0,1.0,2590,2.0,0,0.9992277992277993
2024-08-14,26,0.0,0,1.0,2616,2.0,0,0.9992354740061162
2024-08-15,26,0.0,0,1.0,2642,2.0,0,0.9992429977289932
2024-08-16,26,0.0,0,1.0,2668,2.0,0,0.9992503748125937
2024-08-17,26,0.0,0,1.0,2694,2.0,0,0.9992576095025983
2024-08-18,26,0.0,0,1.0,2720,2.0,0,0.9992647058823529
2024-08-19,26,0.0,0,1.0,2746,2.0,0,0.9992716678805535
2024-08-20,24,0.0,0,1.0,2770,2.0,0,0.9992779783393502
2024-08-21,24,0.0,0,1.0,2794,2.0,0,0.9992841803865425
2024-08-22,24,0.0,0,1.0,2818,2.0,0,0.9992902767920511
2024-08-23,26,0.0,0,1.0,2844,2.0,0,0.9992967651195499
2024-08-24,26,0.0,0,1.0,2870,2.0,0,0.9993031358885017
2024-08-25,26,0.0,0,1.0,2896,2.0,0,0.9993093922651933
2024-08-26,26,0.0,0,1.0,2922,2.0,0,0.999315537303217
2024-08-27,26,0.0,0,1.0,2948,2.0,0,0.9993215739484396
2024-08-28,26,0.0,0,1.0,2974,2.0,0,0.9993275050437121
2024-08-29,26,0.0,0,1.0,3000,2.0,0,0.9993333333333333
2024-08-30,26,0.0,0,1.0,3026,2.0,0,0.9993390614672836
2024-08-31,26,0.0,0,1.0,3052,2.0,0,0.9993446920052425

================
File: output/data/optimized_model_data.csv
================
Date,Available Beds,Wasted Beds,Wasted Potential,Daily Efficiency,Cumulative Available Beds,Cumulative Wasted Beds,Cumulative Wasted Potential,Cumulative Efficiency
2023-01-01,26.0,1.0,0.0,0.9615384615384616,26.0,1.0,0.0,0.9615384615384616
2023-01-02,26.0,1.0,0.0,0.9615384615384616,52.0,2.0,0.0,0.9615384615384616
2023-01-03,26.0,1.0,0.0,0.9615384615384616,78.0,3.0,0.0,0.9615384615384616
2023-01-04,26.0,0.0,0.0,1.0,104.0,3.0,0.0,0.9711538461538461
2023-01-05,26.0,1.0,0.0,0.9615384615384616,130.0,4.0,0.0,0.9692307692307692
2023-01-06,26.0,1.0,0.0,0.9615384615384616,156.0,5.0,0.0,0.967948717948718
2023-01-07,26.0,2.0,0.0,0.9230769230769231,182.0,7.0,0.0,0.9615384615384616
2023-01-08,26.0,2.0,0.0,0.9230769230769231,208.0,9.0,0.0,0.9567307692307693
2023-01-09,26.0,2.0,0.0,0.9230769230769231,234.0,11.0,0.0,0.9529914529914529
2023-01-10,26.0,2.0,0.0,0.9230769230769231,260.0,13.0,0.0,0.95
2023-01-11,26.0,3.0,0.0,0.8846153846153846,286.0,16.0,0.0,0.9440559440559441
2023-01-12,26.0,2.0,0.0,0.9230769230769231,312.0,18.0,0.0,0.9423076923076923
2023-01-13,26.0,2.0,0.0,0.9230769230769231,338.0,20.0,0.0,0.9408284023668639
2023-01-14,26.0,0.0,0.0,1.0,364.0,20.0,0.0,0.945054945054945
2023-01-15,26.0,0.0,0.0,1.0,390.0,20.0,0.0,0.9487179487179487
2023-01-16,26.0,0.0,0.0,1.0,416.0,20.0,0.0,0.9519230769230769
2023-01-17,26.0,1.0,0.0,0.9615384615384616,442.0,21.0,0.0,0.9524886877828054
2023-01-18,26.0,0.0,0.0,1.0,468.0,21.0,0.0,0.9551282051282052
2023-01-19,26.0,0.0,0.0,1.0,494.0,21.0,0.0,0.9574898785425101
2023-01-20,26.0,0.0,0.0,1.0,520.0,21.0,0.0,0.9596153846153846
2023-01-21,26.0,0.0,0.0,1.0,546.0,21.0,0.0,0.9615384615384616
2023-01-22,26.0,0.0,0.0,1.0,572.0,21.0,0.0,0.9632867132867133
2023-01-23,26.0,0.0,0.0,1.0,598.0,21.0,0.0,0.9648829431438127
2023-01-24,26.0,0.0,0.0,1.0,624.0,21.0,0.0,0.9663461538461539
2023-01-25,26.0,0.0,0.0,1.0,650.0,21.0,0.0,0.9676923076923077
2023-01-26,26.0,0.0,0.0,1.0,676.0,21.0,0.0,0.9689349112426036
2023-01-27,26.0,0.0,0.0,1.0,702.0,21.0,0.0,0.9700854700854701
2023-01-28,26.0,0.0,0.0,1.0,728.0,21.0,0.0,0.9711538461538461
2023-01-29,26.0,0.0,0.0,1.0,754.0,21.0,0.0,0.9721485411140584
2023-01-30,26.0,0.0,0.0,1.0,780.0,21.0,0.0,0.9730769230769231
2023-01-31,26.0,0.0,1.0,0.9615384615384616,806.0,21.0,1.0,0.9727047146401985
2023-02-01,26.0,0.0,2.0,0.9230769230769231,832.0,21.0,3.0,0.9711538461538461
2023-02-02,26.0,0.0,3.0,0.8846153846153846,858.0,21.0,6.0,0.9685314685314685
2023-02-03,26.0,0.0,2.0,0.9230769230769231,884.0,21.0,8.0,0.9671945701357466
2023-02-04,26.0,0.0,1.0,0.9615384615384616,910.0,21.0,9.0,0.967032967032967
2023-02-05,26.0,0.0,0.0,1.0,936.0,21.0,9.0,0.967948717948718
2023-02-06,26.0,0.0,0.0,1.0,962.0,21.0,9.0,0.9688149688149689
2023-02-07,26.0,0.0,0.0,1.0,988.0,21.0,9.0,0.9696356275303644
2023-02-08,26.0,0.0,0.0,1.0,1014.0,21.0,9.0,0.9704142011834319
2023-02-09,26.0,0.0,1.0,0.9615384615384616,1040.0,21.0,10.0,0.9701923076923077
2023-02-10,26.0,0.0,3.0,0.8846153846153846,1066.0,21.0,13.0,0.9681050656660413
2023-02-11,26.0,0.0,1.0,0.9615384615384616,1092.0,21.0,14.0,0.967948717948718
2023-02-12,26.0,0.0,0.0,1.0,1118.0,21.0,14.0,0.9686940966010733
2023-02-13,26.0,0.0,0.0,1.0,1144.0,21.0,14.0,0.9694055944055944
2023-02-14,26.0,0.0,0.0,1.0,1170.0,21.0,14.0,0.9700854700854701
2023-02-15,16.0,0.0,0.0,1.0,1186.0,21.0,14.0,0.9704890387858347
2023-02-16,25.0,0.0,0.0,1.0,1211.0,21.0,14.0,0.9710982658959537
2023-02-17,26.0,0.0,0.0,1.0,1237.0,21.0,14.0,0.9717057396928052
2023-02-18,26.0,0.0,0.0,1.0,1263.0,21.0,14.0,0.9722882026920031
2023-02-19,26.0,0.0,0.0,1.0,1289.0,21.0,14.0,0.9728471683475562
2023-02-20,26.0,0.0,0.0,1.0,1315.0,21.0,14.0,0.973384030418251
2023-02-21,26.0,0.0,0.0,1.0,1341.0,21.0,14.0,0.9739000745712155
2023-02-22,26.0,0.0,0.0,1.0,1367.0,21.0,14.0,0.9743964886613021
2023-02-23,26.0,0.0,0.0,1.0,1393.0,21.0,14.0,0.9748743718592965
2023-02-24,26.0,0.0,2.0,0.9230769230769231,1419.0,21.0,16.0,0.9739252995066948
2023-02-25,26.0,0.0,0.0,1.0,1445.0,21.0,16.0,0.9743944636678201
2023-02-26,26.0,0.0,0.0,1.0,1471.0,21.0,16.0,0.9748470428280082
2023-02-27,26.0,0.0,0.0,1.0,1497.0,21.0,16.0,0.9752839011356046
2023-02-28,26.0,0.0,0.0,1.0,1523.0,21.0,16.0,0.9757058437294813
2023-03-01,26.0,0.0,0.0,1.0,1549.0,21.0,16.0,0.9761136216914138
2023-03-02,26.0,0.0,0.0,1.0,1575.0,21.0,16.0,0.9765079365079365
2023-03-03,26.0,0.0,0.0,1.0,1601.0,21.0,16.0,0.976889444097439
2023-03-04,26.0,0.0,0.0,1.0,1627.0,21.0,16.0,0.9772587584511371
2023-03-05,26.0,0.0,0.0,1.0,1653.0,21.0,16.0,0.9776164549304295
2023-03-06,26.0,0.0,0.0,1.0,1679.0,21.0,16.0,0.9779630732578916
2023-03-07,26.0,0.0,0.0,1.0,1705.0,21.0,16.0,0.9782991202346041
2023-03-08,26.0,0.0,0.0,1.0,1731.0,21.0,16.0,0.9786250722125939
2023-03-09,26.0,0.0,0.0,1.0,1757.0,21.0,16.0,0.9789413773477519
2023-03-10,26.0,0.0,0.0,1.0,1783.0,21.0,16.0,0.9792484576556366
2023-03-11,26.0,0.0,0.0,1.0,1809.0,21.0,16.0,0.9795467108899945
2023-03-12,26.0,0.0,0.0,1.0,1835.0,21.0,16.0,0.9798365122615804
2023-03-13,26.0,0.0,0.0,1.0,1861.0,21.0,16.0,0.9801182160128963
2023-03-14,26.0,0.0,0.0,1.0,1887.0,21.0,16.0,0.9803921568627451
2023-03-15,26.0,0.0,0.0,1.0,1913.0,21.0,16.0,0.9806586513329848
2023-03-16,26.0,0.0,0.0,1.0,1939.0,21.0,16.0,0.9809179989685405
2023-03-17,26.0,0.0,0.0,1.0,1965.0,21.0,16.0,0.9811704834605598
2023-03-18,26.0,0.0,0.0,1.0,1991.0,21.0,16.0,0.9814163736815671
2023-03-19,26.0,0.0,0.0,1.0,2017.0,21.0,16.0,0.9816559246405553
2023-03-20,26.0,0.0,0.0,1.0,2043.0,21.0,16.0,0.9818893783651493
2023-03-21,26.0,0.0,0.0,1.0,2069.0,21.0,16.0,0.9821169647172547
2023-03-22,26.0,0.0,0.0,1.0,2095.0,21.0,16.0,0.9823389021479714
2023-03-23,26.0,0.0,0.0,1.0,2121.0,21.0,16.0,0.9825553983969826
2023-03-24,26.0,0.0,0.0,1.0,2147.0,21.0,16.0,0.9827666511411272
2023-03-25,26.0,0.0,0.0,1.0,2173.0,21.0,16.0,0.9829728485964105
2023-03-26,26.0,0.0,0.0,1.0,2199.0,21.0,16.0,0.9831741700773079
2023-03-27,26.0,0.0,0.0,1.0,2225.0,21.0,16.0,0.983370786516854
2023-03-28,26.0,0.0,0.0,1.0,2251.0,21.0,16.0,0.9835628609506886
2023-03-29,26.0,0.0,0.0,1.0,2277.0,21.0,16.0,0.9837505489679402
2023-03-30,26.0,0.0,0.0,1.0,2303.0,21.0,16.0,0.9839339991315675
2023-03-31,26.0,0.0,0.0,1.0,2329.0,21.0,16.0,0.9841133533705453
2023-04-01,26.0,0.0,0.0,1.0,2355.0,21.0,16.0,0.9842887473460722
2023-04-02,26.0,0.0,0.0,1.0,2381.0,21.0,16.0,0.9844603107937842
2023-04-03,26.0,0.0,0.0,1.0,2407.0,21.0,16.0,0.9846281678437889
2023-04-04,26.0,0.0,0.0,1.0,2433.0,21.0,16.0,0.9847924373201808
2023-04-05,26.0,0.0,0.0,1.0,2459.0,21.0,16.0,0.9849532330215535
2023-04-06,26.0,0.0,0.0,1.0,2485.0,21.0,16.0,0.9851106639839035
2023-04-07,26.0,0.0,0.0,1.0,2511.0,21.0,16.0,0.9852648347272003
2023-04-08,26.0,0.0,0.0,1.0,2537.0,21.0,16.0,0.9854158454867954
2023-04-09,26.0,0.0,0.0,1.0,2563.0,21.0,16.0,0.9855637924307452
2023-04-10,26.0,0.0,0.0,1.0,2589.0,21.0,16.0,0.9857087678640402
2023-04-11,26.0,0.0,0.0,1.0,2615.0,21.0,16.0,0.9858508604206501
2023-04-12,26.0,0.0,0.0,1.0,2641.0,21.0,16.0,0.9859901552442256
2023-04-13,26.0,0.0,0.0,1.0,2667.0,21.0,16.0,0.9861267341582303
2023-04-14,26.0,0.0,0.0,1.0,2693.0,21.0,16.0,0.9862606758262161
2023-04-15,26.0,0.0,0.0,1.0,2719.0,21.0,16.0,0.9863920559029055
2023-04-16,26.0,0.0,0.0,1.0,2745.0,21.0,16.0,0.9865209471766849
2023-04-17,26.0,0.0,0.0,1.0,2771.0,21.0,16.0,0.986647419704078
2023-04-18,26.0,0.0,0.0,1.0,2797.0,21.0,16.0,0.9867715409367179
2023-04-19,26.0,0.0,0.0,1.0,2823.0,21.0,16.0,0.9868933758413035
2023-04-20,26.0,0.0,0.0,1.0,2849.0,21.0,16.0,0.987012987012987
2023-04-21,26.0,0.0,0.0,1.0,2875.0,21.0,16.0,0.9871304347826086
2023-04-22,26.0,0.0,0.0,1.0,2901.0,21.0,16.0,0.9872457773181661
2023-04-23,26.0,0.0,0.0,1.0,2927.0,21.0,16.0,0.9873590707208746
2023-04-24,26.0,0.0,0.0,1.0,2953.0,21.0,16.0,0.987470369116153
2023-04-25,26.0,0.0,0.0,1.0,2979.0,21.0,16.0,0.9875797247398456
2023-04-26,26.0,0.0,0.0,1.0,3005.0,21.0,16.0,0.9876871880199667
2023-04-27,26.0,0.0,0.0,1.0,3031.0,21.0,16.0,0.9877928076542395
2023-04-28,26.0,0.0,0.0,1.0,3057.0,21.0,16.0,0.9878966306836768
2023-04-29,26.0,0.0,0.0,1.0,3083.0,21.0,16.0,0.9879987025624392
2023-04-30,26.0,0.0,0.0,1.0,3109.0,21.0,16.0,0.9880990672241878
2023-05-01,26.0,0.0,0.0,1.0,3135.0,21.0,16.0,0.9881977671451355
2023-05-02,26.0,0.0,0.0,1.0,3161.0,21.0,16.0,0.9882948434039861
2023-05-03,26.0,0.0,0.0,1.0,3187.0,21.0,16.0,0.9883903357389394
2023-05-04,26.0,0.0,0.0,1.0,3213.0,21.0,16.0,0.9884842826019297
2023-05-05,26.0,0.0,0.0,1.0,3239.0,21.0,16.0,0.9885767212102501
2023-05-06,26.0,0.0,0.0,1.0,3265.0,21.0,16.0,0.9886676875957121
2023-05-07,26.0,0.0,0.0,1.0,3291.0,21.0,16.0,0.9887572166514738
2023-05-08,26.0,0.0,0.0,1.0,3317.0,21.0,16.0,0.9888453421766656
2023-05-09,26.0,0.0,0.0,1.0,3343.0,21.0,16.0,0.9889320969189351
2023-05-10,26.0,0.0,0.0,1.0,3369.0,21.0,16.0,0.9890175126150192
2023-05-11,26.0,0.0,0.0,1.0,3395.0,21.0,16.0,0.9891016200294551
2023-05-12,26.0,0.0,0.0,1.0,3421.0,21.0,16.0,0.9891844489915229
2023-05-13,26.0,0.0,0.0,1.0,3447.0,21.0,16.0,0.9892660284305193
2023-05-14,26.0,0.0,0.0,1.0,3473.0,21.0,16.0,0.9893463864094443
2023-05-15,26.0,0.0,0.0,1.0,3499.0,21.0,16.0,0.9894255501571878
2023-05-16,26.0,0.0,0.0,1.0,3525.0,21.0,16.0,0.9895035460992908
2023-05-17,26.0,0.0,0.0,1.0,3551.0,21.0,16.0,0.9895803998873557
2023-05-18,26.0,0.0,0.0,1.0,3577.0,21.0,16.0,0.9896561364271736
2023-05-19,24.0,0.0,0.0,1.0,3601.0,21.0,16.0,0.9897250763676756
2023-05-20,26.0,0.0,0.0,1.0,3627.0,21.0,16.0,0.9897987317342156
2023-05-21,26.0,0.0,0.0,1.0,3653.0,21.0,16.0,0.989871338625787
2023-05-22,26.0,0.0,0.0,1.0,3679.0,21.0,16.0,0.9899429192715412
2023-05-23,26.0,0.0,0.0,1.0,3705.0,21.0,16.0,0.9900134952766532
2023-05-24,26.0,0.0,0.0,1.0,3731.0,21.0,16.0,0.9900830876440633
2023-05-25,26.0,0.0,0.0,1.0,3757.0,21.0,16.0,0.9901517167953154
2023-05-26,26.0,0.0,0.0,1.0,3783.0,21.0,16.0,0.9902194025905366
2023-05-27,26.0,0.0,0.0,1.0,3809.0,21.0,16.0,0.9902861643475978
2023-05-28,26.0,0.0,0.0,1.0,3835.0,21.0,16.0,0.9903520208604955
2023-05-29,26.0,0.0,0.0,1.0,3861.0,21.0,16.0,0.9904169904169904
2023-05-30,26.0,0.0,0.0,1.0,3887.0,21.0,16.0,0.9904810908155389
2023-05-31,26.0,0.0,0.0,1.0,3913.0,21.0,16.0,0.9905443393815487
2023-06-01,26.0,0.0,0.0,1.0,3939.0,21.0,16.0,0.9906067529829906
2023-06-02,26.0,0.0,2.0,0.9230769230769231,3965.0,21.0,18.0,0.9901639344262295
2023-06-03,26.0,0.0,0.0,1.0,3991.0,21.0,18.0,0.990228013029316
2023-06-04,26.0,0.0,0.0,1.0,4017.0,21.0,18.0,0.9902912621359223
2023-06-05,26.0,0.0,0.0,1.0,4043.0,21.0,18.0,0.9903536977491961
2023-06-06,24.0,0.0,0.0,1.0,4067.0,21.0,18.0,0.9904106220801574
2023-06-07,26.0,0.0,1.0,0.9615384615384616,4093.0,21.0,19.0,0.9902272172000978
2023-06-08,26.0,0.0,0.0,1.0,4119.0,21.0,19.0,0.9902889050740471
2023-06-09,26.0,0.0,1.0,0.9615384615384616,4145.0,21.0,20.0,0.990108564535585
2023-06-10,26.0,0.0,0.0,1.0,4171.0,21.0,20.0,0.9901702229681132
2023-06-11,26.0,0.0,0.0,1.0,4197.0,21.0,20.0,0.9902311174648558
2023-06-12,26.0,0.0,0.0,1.0,4223.0,21.0,20.0,0.9902912621359223
2023-06-13,26.0,0.0,0.0,1.0,4249.0,21.0,20.0,0.9903506707460579
2023-06-14,26.0,0.0,0.0,1.0,4275.0,21.0,20.0,0.9904093567251462
2023-06-15,26.0,0.0,0.0,1.0,4301.0,21.0,20.0,0.9904673331783306
2023-06-16,26.0,0.0,0.0,1.0,4327.0,21.0,20.0,0.9905246128957708
2023-06-17,26.0,0.0,0.0,1.0,4353.0,21.0,20.0,0.9905812083620492
2023-06-18,26.0,0.0,0.0,1.0,4379.0,21.0,20.0,0.9906371317652432
2023-06-19,26.0,0.0,0.0,1.0,4405.0,21.0,20.0,0.9906923950056754
2023-06-20,26.0,0.0,0.0,1.0,4431.0,21.0,20.0,0.9907470097043557
2023-06-21,26.0,0.0,0.0,1.0,4457.0,21.0,20.0,0.9908009872111285
2023-06-22,26.0,0.0,0.0,1.0,4483.0,21.0,20.0,0.9908543386125362
2023-06-23,26.0,0.0,0.0,1.0,4509.0,21.0,20.0,0.9909070747394101
2023-06-24,26.0,0.0,0.0,1.0,4535.0,21.0,20.0,0.9909592061742006
2023-06-25,26.0,0.0,0.0,1.0,4561.0,21.0,20.0,0.9910107432580575
2023-06-26,26.0,0.0,0.0,1.0,4587.0,21.0,20.0,0.9910616960976674
2023-06-27,26.0,0.0,0.0,1.0,4613.0,21.0,20.0,0.9911120745718621
2023-06-28,26.0,0.0,0.0,1.0,4639.0,21.0,20.0,0.9911618883380039
2023-06-29,26.0,0.0,0.0,1.0,4665.0,21.0,20.0,0.9912111468381565
2023-06-30,26.0,0.0,0.0,1.0,4691.0,21.0,20.0,0.9912598593050522
2023-07-01,26.0,0.0,0.0,1.0,4717.0,21.0,20.0,0.9913080347678609
2023-07-02,26.0,0.0,0.0,1.0,4743.0,21.0,20.0,0.9913556820577694
2023-07-03,25.0,0.0,0.0,1.0,4768.0,21.0,20.0,0.9914010067114094
2023-07-04,26.0,0.0,0.0,1.0,4794.0,21.0,20.0,0.991447642886942
2023-07-05,26.0,0.0,0.0,1.0,4820.0,21.0,20.0,0.99149377593361
2023-07-06,26.0,0.0,0.0,1.0,4846.0,21.0,20.0,0.9915394139496492
2023-07-07,26.0,0.0,2.0,0.9230769230769231,4872.0,21.0,22.0,0.9911740558292282
2023-07-08,26.0,0.0,0.0,1.0,4898.0,21.0,22.0,0.9912209064924459
2023-07-09,26.0,0.0,0.0,1.0,4924.0,21.0,22.0,0.9912672623883022
2023-07-10,26.0,0.0,0.0,1.0,4950.0,21.0,22.0,0.9913131313131314
2023-07-11,24.0,0.0,0.0,1.0,4974.0,21.0,22.0,0.9913550462404503
2023-07-12,24.0,0.0,0.0,1.0,4998.0,21.0,22.0,0.9913965586234493
2023-07-13,26.0,0.0,0.0,1.0,5024.0,21.0,22.0,0.9914410828025477
2023-07-14,26.0,0.0,0.0,1.0,5050.0,21.0,22.0,0.9914851485148515
2023-07-15,26.0,0.0,0.0,1.0,5076.0,21.0,22.0,0.9915287628053585
2023-07-16,26.0,0.0,0.0,1.0,5102.0,21.0,22.0,0.9915719325754606
2023-07-17,26.0,0.0,0.0,1.0,5128.0,21.0,22.0,0.9916146645865834
2023-07-18,26.0,0.0,0.0,1.0,5154.0,21.0,22.0,0.9916569654637175
2023-07-19,26.0,0.0,0.0,1.0,5180.0,21.0,22.0,0.9916988416988417
2023-07-20,26.0,0.0,0.0,1.0,5206.0,21.0,22.0,0.9917402996542451
2023-07-21,26.0,0.0,0.0,1.0,5232.0,21.0,22.0,0.9917813455657493
2023-07-22,24.0,0.0,0.0,1.0,5256.0,21.0,22.0,0.9918188736681888
2023-07-23,26.0,0.0,0.0,1.0,5282.0,21.0,22.0,0.9918591442635365
2023-07-24,26.0,0.0,0.0,1.0,5308.0,21.0,22.0,0.9918990203466466
2023-07-25,26.0,0.0,0.0,1.0,5334.0,21.0,22.0,0.9919385076865391
2023-07-26,26.0,0.0,0.0,1.0,5360.0,21.0,22.0,0.9919776119402985
2023-07-27,26.0,0.0,0.0,1.0,5386.0,21.0,22.0,0.9920163386557742
2023-07-28,26.0,0.0,0.0,1.0,5412.0,21.0,22.0,0.9920546932742055
2023-07-29,26.0,0.0,0.0,1.0,5438.0,21.0,22.0,0.9920926811327694
2023-07-30,26.0,0.0,0.0,1.0,5464.0,21.0,22.0,0.9921303074670571
2023-07-31,22.0,0.0,0.0,1.0,5486.0,21.0,22.0,0.9921618665694495
2023-08-01,26.0,0.0,0.0,1.0,5512.0,21.0,22.0,0.9921988388969522
2023-08-02,26.0,0.0,0.0,1.0,5538.0,21.0,22.0,0.99223546406645
2023-08-03,20.0,0.0,0.0,1.0,5558.0,21.0,22.0,0.992263404102195
2023-08-04,22.0,0.0,0.0,1.0,5580.0,21.0,22.0,0.9922939068100358
2023-08-05,26.0,0.0,0.0,1.0,5606.0,21.0,22.0,0.9923296468069925
2023-08-06,26.0,0.0,0.0,1.0,5632.0,21.0,22.0,0.9923650568181818
2023-08-07,26.0,0.0,0.0,1.0,5658.0,21.0,22.0,0.9924001413927183
2023-08-08,24.0,0.0,0.0,1.0,5682.0,21.0,22.0,0.9924322421682507
2023-08-09,24.0,0.0,0.0,1.0,5706.0,21.0,22.0,0.9924640729057133
2023-08-10,24.0,0.0,0.0,1.0,5730.0,21.0,22.0,0.9924956369982548
2023-08-11,24.0,0.0,0.0,1.0,5754.0,21.0,22.0,0.9925269377824122
2023-08-12,26.0,0.0,0.0,1.0,5780.0,21.0,22.0,0.992560553633218
2023-08-13,26.0,0.0,0.0,1.0,5806.0,21.0,22.0,0.9925938684119876
2023-08-14,26.0,0.0,0.0,1.0,5832.0,21.0,22.0,0.9926268861454046
2023-08-15,26.0,0.0,0.0,1.0,5858.0,21.0,22.0,0.992659610788665
2023-08-16,24.0,0.0,0.0,1.0,5882.0,21.0,22.0,0.9926895613736825
2023-08-17,26.0,0.0,0.0,1.0,5908.0,21.0,22.0,0.9927217332430602
2023-08-18,26.0,0.0,0.0,1.0,5934.0,21.0,22.0,0.9927536231884058
2023-08-19,26.0,0.0,0.0,1.0,5960.0,21.0,22.0,0.9927852348993289
2023-08-20,26.0,0.0,0.0,1.0,5986.0,21.0,22.0,0.9928165720013364
2023-08-21,26.0,0.0,0.0,1.0,6012.0,21.0,22.0,0.9928476380572189
2023-08-22,26.0,0.0,0.0,1.0,6038.0,21.0,22.0,0.9928784365684001
2023-08-23,26.0,0.0,0.0,1.0,6064.0,21.0,22.0,0.9929089709762533
2023-08-24,26.0,0.0,0.0,1.0,6090.0,21.0,22.0,0.9929392446633826
2023-08-25,24.0,0.0,0.0,1.0,6114.0,21.0,22.0,0.9929669610729474
2023-08-26,26.0,0.0,0.0,1.0,6140.0,21.0,22.0,0.9929967426710098
2023-08-27,26.0,0.0,0.0,1.0,6166.0,21.0,22.0,0.9930262731106065
2023-08-28,26.0,0.0,0.0,1.0,6192.0,21.0,22.0,0.9930555555555556
2023-08-29,26.0,0.0,0.0,1.0,6218.0,21.0,22.0,0.9930845931167578
2023-08-30,24.0,0.0,0.0,1.0,6242.0,21.0,22.0,0.9931111823133612
2023-08-31,24.0,0.0,0.0,1.0,6266.0,21.0,22.0,0.9931375678263645
2023-09-01,26.0,0.0,0.0,1.0,6292.0,21.0,22.0,0.9931659249841068
2023-09-02,26.0,0.0,0.0,1.0,6318.0,21.0,22.0,0.9931940487496043
2023-09-03,26.0,0.0,0.0,1.0,6344.0,21.0,22.0,0.9932219419924337
2023-09-04,26.0,0.0,0.0,1.0,6370.0,21.0,22.0,0.9932496075353218
2023-09-05,26.0,0.0,0.0,1.0,6396.0,21.0,22.0,0.993277048155097
2023-09-06,26.0,0.0,0.0,1.0,6422.0,21.0,22.0,0.9933042665836188
2023-09-07,26.0,0.0,0.0,1.0,6448.0,21.0,22.0,0.9933312655086849
2023-09-08,26.0,0.0,0.0,1.0,6474.0,21.0,22.0,0.9933580475749151
2023-09-09,26.0,0.0,0.0,1.0,6500.0,21.0,22.0,0.9933846153846154
2023-09-10,26.0,0.0,0.0,1.0,6526.0,21.0,22.0,0.9934109714986209
2023-09-11,26.0,0.0,0.0,1.0,6552.0,21.0,22.0,0.9934371184371185
2023-09-12,26.0,0.0,0.0,1.0,6578.0,21.0,22.0,0.99346305868045
2023-09-13,26.0,0.0,0.0,1.0,6604.0,21.0,22.0,0.993488794669897
2023-09-14,26.0,0.0,0.0,1.0,6630.0,21.0,22.0,0.9935143288084465
2023-09-15,26.0,0.0,0.0,1.0,6656.0,21.0,22.0,0.9935396634615384
2023-09-16,26.0,0.0,0.0,1.0,6682.0,21.0,22.0,0.9935648009577971
2023-09-17,26.0,0.0,0.0,1.0,6708.0,21.0,22.0,0.9935897435897436
2023-09-18,26.0,0.0,0.0,1.0,6734.0,21.0,22.0,0.9936144936144936
2023-09-19,26.0,0.0,0.0,1.0,6760.0,21.0,22.0,0.9936390532544379
2023-09-20,26.0,0.0,0.0,1.0,6786.0,21.0,22.0,0.9936634246979075
2023-09-21,22.0,0.0,0.0,1.0,6808.0,21.0,22.0,0.993683901292597
2023-09-22,20.0,0.0,0.0,1.0,6828.0,21.0,22.0,0.9937024018746339
2023-09-23,26.0,0.0,0.0,1.0,6854.0,21.0,22.0,0.9937262912168077
2023-09-24,26.0,0.0,0.0,1.0,6880.0,21.0,22.0,0.99375
2023-09-25,21.0,0.0,0.0,1.0,6901.0,21.0,22.0,0.9937690189827562
2023-09-26,26.0,2.0,0.0,0.9230769230769231,6927.0,23.0,22.0,0.9935036812472932
2023-09-27,26.0,2.0,0.0,0.9230769230769231,6953.0,25.0,22.0,0.9932403279160075
2023-09-28,26.0,0.0,0.0,1.0,6979.0,25.0,22.0,0.9932655108181688
2023-09-29,26.0,0.0,0.0,1.0,7005.0,25.0,22.0,0.9932905067808708
2023-09-30,26.0,0.0,0.0,1.0,7031.0,25.0,22.0,0.993315317877969
2023-10-01,26.0,0.0,0.0,1.0,7057.0,25.0,22.0,0.9933399461527561
2023-10-02,26.0,0.0,0.0,1.0,7083.0,25.0,22.0,0.9933643936185232
2023-10-03,26.0,0.0,0.0,1.0,7109.0,25.0,22.0,0.9933886622591082
2023-10-04,26.0,0.0,0.0,1.0,7135.0,25.0,22.0,0.9934127540294324
2023-10-05,26.0,0.0,0.0,1.0,7161.0,25.0,22.0,0.9934366708560257
2023-10-06,26.0,0.0,0.0,1.0,7187.0,25.0,22.0,0.99346041463754
2023-10-07,26.0,0.0,0.0,1.0,7213.0,25.0,22.0,0.9934839872452517
2023-10-08,26.0,0.0,0.0,1.0,7239.0,25.0,22.0,0.993507390523553
2023-10-09,26.0,0.0,0.0,1.0,7265.0,25.0,22.0,0.9935306262904335
2023-10-10,26.0,0.0,0.0,1.0,7291.0,25.0,22.0,0.9935536963379509
2023-10-11,26.0,0.0,0.0,1.0,7317.0,25.0,22.0,0.993576602432691
2023-10-12,26.0,0.0,0.0,1.0,7343.0,25.0,22.0,0.9935993463162195
2023-10-13,26.0,0.0,0.0,1.0,7369.0,25.0,22.0,0.9936219297055231
2023-10-14,26.0,0.0,0.0,1.0,7395.0,25.0,22.0,0.9936443542934416
2023-10-15,26.0,0.0,0.0,1.0,7421.0,25.0,22.0,0.9936666217490904
2023-10-16,26.0,0.0,0.0,1.0,7447.0,25.0,22.0,0.9936887337182758
2023-10-17,26.0,0.0,0.0,1.0,7473.0,25.0,22.0,0.9937106918238994
2023-10-18,26.0,0.0,0.0,1.0,7499.0,25.0,22.0,0.9937324976663555
2023-10-19,26.0,0.0,0.0,1.0,7525.0,25.0,22.0,0.9937541528239202
2023-10-20,26.0,0.0,0.0,1.0,7551.0,25.0,22.0,0.993775658853132
2023-10-21,26.0,0.0,0.0,1.0,7577.0,25.0,22.0,0.9937970172891646
2023-10-22,26.0,0.0,0.0,1.0,7603.0,25.0,22.0,0.9938182296461923
2023-10-23,26.0,0.0,0.0,1.0,7629.0,25.0,22.0,0.993839297417748
2023-10-24,26.0,0.0,0.0,1.0,7655.0,25.0,22.0,0.9938602220770738
2023-10-25,26.0,0.0,0.0,1.0,7681.0,25.0,22.0,0.9938810050774639
2023-10-26,26.0,0.0,0.0,1.0,7707.0,25.0,22.0,0.9939016478526015
2023-10-27,26.0,0.0,0.0,1.0,7733.0,25.0,22.0,0.9939221518168887
2023-10-28,26.0,0.0,0.0,1.0,7759.0,25.0,22.0,0.9939425183657687
2023-10-29,26.0,0.0,0.0,1.0,7785.0,25.0,22.0,0.9939627488760436
2023-10-30,26.0,0.0,0.0,1.0,7811.0,25.0,22.0,0.9939828447061836
2023-10-31,26.0,0.0,0.0,1.0,7837.0,25.0,22.0,0.9940028071966314
2023-11-01,26.0,0.0,0.0,1.0,7863.0,25.0,22.0,0.9940226376701005
2023-11-02,26.0,0.0,0.0,1.0,7889.0,25.0,22.0,0.9940423374318672
2023-11-03,26.0,0.0,0.0,1.0,7915.0,25.0,22.0,0.9940619077700569
2023-11-04,26.0,0.0,0.0,1.0,7941.0,25.0,22.0,0.9940813499559249
2023-11-05,26.0,0.0,0.0,1.0,7967.0,25.0,22.0,0.9941006652441321
2023-11-06,26.0,0.0,0.0,1.0,7993.0,25.0,22.0,0.9941198548730139
2023-11-07,26.0,0.0,0.0,1.0,8019.0,25.0,22.0,0.9941389200648459
2023-11-08,26.0,0.0,0.0,1.0,8045.0,25.0,22.0,0.9941578620261031
2023-11-09,26.0,0.0,0.0,1.0,8071.0,25.0,22.0,0.994176681947714
2023-11-10,26.0,0.0,0.0,1.0,8097.0,25.0,22.0,0.9941953810053106
2023-11-11,26.0,0.0,0.0,1.0,8123.0,25.0,22.0,0.9942139603594731
2023-11-12,26.0,0.0,0.0,1.0,8149.0,25.0,22.0,0.9942324211559701
2023-11-13,26.0,0.0,0.0,1.0,8175.0,25.0,22.0,0.9942507645259939
2023-11-14,26.0,0.0,0.0,1.0,8201.0,25.0,22.0,0.9942689915863919
2023-11-15,26.0,0.0,0.0,1.0,8227.0,25.0,22.0,0.994287103439893
2023-11-16,26.0,0.0,0.0,1.0,8253.0,25.0,22.0,0.9943051011753302
2023-11-17,26.0,0.0,0.0,1.0,8279.0,25.0,22.0,0.9943229858678584
2023-11-18,26.0,0.0,0.0,1.0,8305.0,25.0,22.0,0.9943407585791691
2023-11-19,26.0,0.0,0.0,1.0,8331.0,25.0,22.0,0.9943584203577002
2023-11-20,26.0,0.0,0.0,1.0,8357.0,25.0,22.0,0.9943759722388417
2023-11-21,26.0,0.0,0.0,1.0,8383.0,25.0,22.0,0.994393415245139
2023-11-22,26.0,0.0,0.0,1.0,8409.0,25.0,22.0,0.9944107503864906
2023-11-23,26.0,0.0,0.0,1.0,8435.0,25.0,22.0,0.9944279786603438
2023-11-24,26.0,0.0,0.0,1.0,8461.0,25.0,22.0,0.9944451010518851
2023-11-25,26.0,0.0,0.0,1.0,8487.0,25.0,22.0,0.9944621185342288
2023-11-26,26.0,0.0,0.0,1.0,8513.0,25.0,22.0,0.994479032068601
2023-11-27,26.0,0.0,0.0,1.0,8539.0,25.0,22.0,0.9944958426045204
2023-11-28,26.0,0.0,0.0,1.0,8565.0,25.0,22.0,0.9945125510799766
2023-11-29,26.0,0.0,0.0,1.0,8591.0,25.0,22.0,0.994529158421604
2023-11-30,26.0,0.0,0.0,1.0,8617.0,25.0,22.0,0.9945456655448532
2023-12-01,25.0,0.0,0.0,1.0,8642.0,25.0,22.0,0.9945614441101597
2023-12-02,26.0,3.0,0.0,0.8846153846153846,8668.0,28.0,22.0,0.9942316566682049
2023-12-03,26.0,3.0,0.0,0.8846153846153846,8694.0,31.0,22.0,0.9939038417299287
2023-12-04,26.0,3.0,0.0,0.8846153846153846,8720.0,34.0,22.0,0.9935779816513761
2023-12-05,26.0,0.0,0.0,1.0,8746.0,34.0,22.0,0.9935970729476332
2023-12-06,26.0,0.0,0.0,1.0,8772.0,34.0,22.0,0.9936160510715915
2023-12-07,26.0,0.0,0.0,1.0,8798.0,34.0,22.0,0.993634917026597
2023-12-08,26.0,0.0,0.0,1.0,8824.0,34.0,22.0,0.9936536718041704
2023-12-09,26.0,0.0,0.0,1.0,8850.0,34.0,22.0,0.9936723163841807
2023-12-10,26.0,0.0,0.0,1.0,8876.0,34.0,22.0,0.9936908517350158
2023-12-11,26.0,0.0,0.0,1.0,8902.0,34.0,22.0,0.9937092788137497
2023-12-12,26.0,0.0,0.0,1.0,8928.0,34.0,22.0,0.9937275985663082
2023-12-13,26.0,0.0,0.0,1.0,8954.0,34.0,22.0,0.9937458119276301
2023-12-14,26.0,0.0,0.0,1.0,8980.0,34.0,22.0,0.9937639198218263
2023-12-15,26.0,0.0,0.0,1.0,9006.0,34.0,22.0,0.9937819231623363
2023-12-16,26.0,0.0,0.0,1.0,9032.0,34.0,22.0,0.9937998228520815
2023-12-17,26.0,0.0,0.0,1.0,9058.0,34.0,22.0,0.9938176197836167
2023-12-18,26.0,0.0,0.0,1.0,9084.0,34.0,22.0,0.9938353148392779
2023-12-19,26.0,0.0,0.0,1.0,9110.0,34.0,22.0,0.9938529088913282
2023-12-20,26.0,0.0,0.0,1.0,9136.0,34.0,22.0,0.9938704028021016
2023-12-21,26.0,0.0,0.0,1.0,9162.0,34.0,22.0,0.9938877974241432
2023-12-22,26.0,0.0,0.0,1.0,9188.0,34.0,22.0,0.9939050936003483
2023-12-23,26.0,0.0,0.0,1.0,9214.0,34.0,22.0,0.9939222921640981
2023-12-24,26.0,0.0,0.0,1.0,9240.0,34.0,22.0,0.9939393939393939
2023-12-25,26.0,0.0,0.0,1.0,9266.0,34.0,22.0,0.9939563997409886
2023-12-26,26.0,0.0,0.0,1.0,9292.0,34.0,22.0,0.9939733103745158
2023-12-27,26.0,0.0,0.0,1.0,9318.0,34.0,22.0,0.9939901266366173
2023-12-28,26.0,0.0,0.0,1.0,9344.0,34.0,22.0,0.9940068493150684
2023-12-29,26.0,2.0,0.0,0.9230769230769231,9370.0,36.0,22.0,0.9938100320170757
2023-12-30,26.0,1.0,0.0,0.9615384615384616,9396.0,37.0,22.0,0.9937207322264794
2023-12-31,26.0,1.0,0.0,0.9615384615384616,9422.0,38.0,22.0,0.9936319252812567
2024-01-01,26.0,1.0,0.0,0.9615384615384616,9448.0,39.0,22.0,0.9935436071126165
2024-01-02,26.0,3.0,0.0,0.8846153846153846,9474.0,42.0,22.0,0.9932446696221237
2024-01-03,26.0,1.0,0.0,0.9615384615384616,9500.0,43.0,22.0,0.9931578947368421
2024-01-04,26.0,0.0,0.0,1.0,9526.0,43.0,22.0,0.9931765693890405
2024-01-05,26.0,1.0,0.0,0.9615384615384616,9552.0,44.0,22.0,0.9930904522613065
2024-01-06,26.0,1.0,0.0,0.9615384615384616,9578.0,45.0,22.0,0.9930048026727918
2024-01-07,26.0,1.0,0.0,0.9615384615384616,9604.0,46.0,22.0,0.9929196168263223
2024-01-08,26.0,1.0,0.0,0.9615384615384616,9630.0,47.0,22.0,0.9928348909657321
2024-01-09,26.0,0.0,0.0,1.0,9656.0,47.0,22.0,0.992854183927092
2024-01-10,26.0,0.0,0.0,1.0,9682.0,47.0,22.0,0.9928733732699856
2024-01-11,26.0,0.0,0.0,1.0,9708.0,47.0,22.0,0.9928924598269468
2024-01-12,26.0,0.0,0.0,1.0,9734.0,47.0,22.0,0.9929114444216149
2024-01-13,26.0,0.0,0.0,1.0,9760.0,47.0,22.0,0.9929303278688525
2024-01-14,26.0,0.0,0.0,1.0,9786.0,47.0,22.0,0.992949110974862
2024-01-15,26.0,0.0,0.0,1.0,9812.0,47.0,22.0,0.9929677945373012
2024-01-16,26.0,0.0,0.0,1.0,9838.0,47.0,22.0,0.9929863793453954
2024-01-17,26.0,0.0,0.0,1.0,9864.0,47.0,22.0,0.9930048661800487
2024-01-18,26.0,0.0,0.0,1.0,9890.0,47.0,22.0,0.9930232558139535
2024-01-19,24.0,0.0,0.0,1.0,9914.0,47.0,22.0,0.9930401452491426
2024-01-20,24.0,0.0,0.0,1.0,9938.0,47.0,22.0,0.9930569531092776
2024-01-21,24.0,0.0,0.0,1.0,9962.0,47.0,22.0,0.9930736799839389
2024-01-22,24.0,0.0,0.0,1.0,9986.0,47.0,22.0,0.9930903264570399
2024-01-23,24.0,0.0,0.0,1.0,10010.0,47.0,22.0,0.9931068931068932
2024-01-24,26.0,0.0,0.0,1.0,10036.0,47.0,22.0,0.9931247508967717
2024-01-25,26.0,0.0,0.0,1.0,10062.0,47.0,22.0,0.9931425163983304
2024-01-26,24.0,0.0,0.0,1.0,10086.0,47.0,22.0,0.9931588340273647
2024-01-27,24.0,0.0,0.0,1.0,10110.0,47.0,22.0,0.9931750741839762
2024-01-28,24.0,0.0,0.0,1.0,10134.0,47.0,22.0,0.9931912374185908
2024-01-29,24.0,0.0,0.0,1.0,10158.0,47.0,22.0,0.9932073242764323
2024-01-30,24.0,0.0,0.0,1.0,10182.0,47.0,22.0,0.993223335297584
2024-01-31,24.0,0.0,0.0,1.0,10206.0,47.0,22.0,0.9932392710170488
2024-02-01,24.0,0.0,0.0,1.0,10230.0,47.0,22.0,0.9932551319648094
2024-02-02,24.0,0.0,0.0,1.0,10254.0,47.0,22.0,0.9932709186658865
2024-02-03,26.0,2.0,0.0,0.9230769230769231,10280.0,49.0,22.0,0.9930933852140078
2024-02-04,26.0,2.0,0.0,0.9230769230769231,10306.0,51.0,22.0,0.9929167475257131
2024-02-05,24.0,1.0,0.0,0.9583333333333334,10330.0,52.0,22.0,0.992836398838335
2024-02-06,24.0,0.0,0.0,1.0,10354.0,52.0,22.0,0.9928530036700792
2024-02-07,24.0,0.0,0.0,1.0,10378.0,52.0,22.0,0.9928695317016766
2024-02-08,24.0,0.0,0.0,1.0,10402.0,52.0,22.0,0.9928859834647183
2024-02-09,24.0,0.0,0.0,1.0,10426.0,52.0,22.0,0.9929023594859007
2024-02-10,24.0,0.0,0.0,1.0,10450.0,52.0,22.0,0.9929186602870813
2024-02-11,24.0,0.0,0.0,1.0,10474.0,52.0,22.0,0.9929348863853351
2024-02-12,24.0,0.0,0.0,1.0,10498.0,52.0,22.0,0.9929510382930082
2024-02-13,24.0,0.0,0.0,1.0,10522.0,52.0,22.0,0.9929671165177723
2024-02-14,26.0,0.0,0.0,1.0,10548.0,52.0,22.0,0.9929844520288206
2024-02-15,26.0,0.0,0.0,1.0,10574.0,52.0,22.0,0.9930017022886325
2024-02-16,26.0,0.0,0.0,1.0,10600.0,52.0,22.0,0.9930188679245283
2024-02-17,26.0,0.0,0.0,1.0,10626.0,52.0,22.0,0.9930359495576887
2024-02-18,26.0,0.0,0.0,1.0,10652.0,52.0,22.0,0.9930529478032294
2024-02-19,26.0,0.0,0.0,1.0,10678.0,52.0,22.0,0.9930698632702754
2024-02-20,26.0,0.0,0.0,1.0,10704.0,52.0,22.0,0.9930866965620329
2024-02-21,26.0,0.0,0.0,1.0,10730.0,52.0,22.0,0.993103448275862
2024-02-22,26.0,0.0,0.0,1.0,10756.0,52.0,22.0,0.993120119003347
2024-02-23,26.0,0.0,0.0,1.0,10782.0,52.0,22.0,0.9931367093303655
2024-02-24,26.0,0.0,0.0,1.0,10808.0,52.0,22.0,0.9931532198371577
2024-02-25,26.0,0.0,0.0,1.0,10834.0,52.0,22.0,0.993169651098394
2024-02-26,26.0,0.0,0.0,1.0,10860.0,52.0,22.0,0.9931860036832413
2024-02-27,26.0,0.0,0.0,1.0,10886.0,52.0,22.0,0.9932022781554289
2024-02-28,26.0,0.0,0.0,1.0,10912.0,52.0,22.0,0.9932184750733137
2024-02-29,26.0,0.0,0.0,1.0,10938.0,52.0,22.0,0.9932345949899433
2024-03-01,26.0,0.0,0.0,1.0,10964.0,52.0,22.0,0.9932506384531193
2024-03-02,26.0,0.0,0.0,1.0,10990.0,52.0,22.0,0.9932666060054595
2024-03-03,26.0,0.0,0.0,1.0,11016.0,52.0,22.0,0.993282498184459
2024-03-04,26.0,0.0,0.0,1.0,11042.0,52.0,22.0,0.9932983155225502
2024-03-05,26.0,0.0,0.0,1.0,11068.0,52.0,22.0,0.993314058547163
2024-03-06,26.0,0.0,0.0,1.0,11094.0,52.0,22.0,0.9933297277807824
2024-03-07,26.0,0.0,0.0,1.0,11120.0,52.0,22.0,0.9933453237410071
2024-03-08,26.0,0.0,0.0,1.0,11146.0,52.0,22.0,0.9933608469406064
2024-03-09,26.0,0.0,0.0,1.0,11172.0,52.0,22.0,0.9933762978875761
2024-03-10,26.0,0.0,0.0,1.0,11198.0,52.0,22.0,0.9933916770851938
2024-03-11,26.0,0.0,0.0,1.0,11224.0,52.0,22.0,0.9934069850320741
2024-03-12,26.0,0.0,0.0,1.0,11250.0,52.0,22.0,0.9934222222222222
2024-03-13,26.0,0.0,0.0,1.0,11276.0,52.0,22.0,0.993437389145087
2024-03-14,26.0,0.0,0.0,1.0,11302.0,52.0,22.0,0.9934524862856131
2024-03-15,26.0,0.0,0.0,1.0,11328.0,52.0,22.0,0.9934675141242938
2024-03-16,26.0,0.0,0.0,1.0,11354.0,52.0,22.0,0.9934824731372204
2024-03-17,26.0,0.0,0.0,1.0,11380.0,52.0,22.0,0.9934973637961335
2024-03-18,26.0,0.0,0.0,1.0,11406.0,52.0,22.0,0.9935121865684727
2024-03-19,26.0,0.0,0.0,1.0,11432.0,52.0,22.0,0.9935269419174247
2024-03-20,26.0,0.0,0.0,1.0,11458.0,52.0,22.0,0.9935416303019724
2024-03-21,26.0,0.0,0.0,1.0,11484.0,52.0,22.0,0.9935562521769419
2024-03-22,26.0,0.0,0.0,1.0,11510.0,52.0,22.0,0.9935708079930495
2024-03-23,26.0,0.0,0.0,1.0,11536.0,52.0,22.0,0.9935852981969486
2024-03-24,26.0,0.0,0.0,1.0,11562.0,52.0,22.0,0.9935997232312749
2024-03-25,26.0,0.0,0.0,1.0,11588.0,52.0,22.0,0.993614083534691
2024-03-26,26.0,0.0,0.0,1.0,11614.0,52.0,22.0,0.9936283795419322
2024-03-27,26.0,0.0,0.0,1.0,11640.0,52.0,22.0,0.9936426116838488
2024-03-28,26.0,0.0,0.0,1.0,11666.0,52.0,22.0,0.9936567803874508
2024-03-29,26.0,0.0,0.0,1.0,11692.0,52.0,22.0,0.9936708860759493
2024-03-30,26.0,0.0,0.0,1.0,11718.0,52.0,22.0,0.9936849291688001
2024-03-31,26.0,0.0,0.0,1.0,11744.0,52.0,22.0,0.9936989100817438
2024-04-01,26.0,0.0,0.0,1.0,11770.0,52.0,22.0,0.9937128292268479
2024-04-02,26.0,0.0,0.0,1.0,11796.0,52.0,22.0,0.9937266870125466
2024-04-03,26.0,0.0,0.0,1.0,11822.0,52.0,22.0,0.9937404838436813
2024-04-04,26.0,0.0,0.0,1.0,11848.0,52.0,22.0,0.9937542201215395
2024-04-05,26.0,0.0,0.0,1.0,11874.0,52.0,22.0,0.9937678962438943
2024-04-06,26.0,0.0,0.0,1.0,11900.0,52.0,22.0,0.993781512605042
2024-04-07,26.0,0.0,0.0,1.0,11926.0,52.0,22.0,0.9937950695958411
2024-04-08,26.0,0.0,0.0,1.0,11952.0,52.0,22.0,0.9938085676037484
2024-04-09,26.0,0.0,0.0,1.0,11978.0,52.0,22.0,0.993822007012857
2024-04-10,26.0,0.0,0.0,1.0,12004.0,52.0,22.0,0.993835388203932
2024-04-11,26.0,0.0,0.0,1.0,12030.0,52.0,22.0,0.9938487115544472
2024-04-12,26.0,0.0,0.0,1.0,12056.0,52.0,22.0,0.9938619774386198
2024-04-13,26.0,0.0,0.0,1.0,12082.0,52.0,22.0,0.9938751862274458
2024-04-14,26.0,0.0,0.0,1.0,12108.0,52.0,22.0,0.9938883382887347
2024-04-15,26.0,0.0,0.0,1.0,12134.0,52.0,22.0,0.9939014339871436
2024-04-16,26.0,0.0,0.0,1.0,12160.0,52.0,22.0,0.9939144736842105
2024-04-17,26.0,0.0,0.0,1.0,12186.0,52.0,22.0,0.9939274577383883

================
File: output/solver_log.txt
================
Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /Users/glennharless/miniconda3/envs/psych_opt/lib/python3.12/site-packages/pulp/solverdir/cbc/osx/64/cbc /var/folders/7m/njx2trb92gs75_vg_zs20px00000gn/T/08b49294ece842a3b801ccefa1e2236a-pulp.mps -timeMode elapsed -branch -printingOptions all -solution /var/folders/7m/njx2trb92gs75_vg_zs20px00000gn/T/08b49294ece842a3b801ccefa1e2236a-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 2844 COLUMNS
At line 232735 RHS
At line 235575 BOUNDS
At line 236526 ENDATA
Problem MODEL has 2839 rows, 950 columns and 227988 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 74 - 0.03 seconds
Cgl0003I 0 fixed, 2 tightened bounds, 9 strengthened rows, 0 substitutions
Cgl0004I processed model has 1872 rows, 940 columns (940 integer (9 of which binary)) and 222795 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0045I 2 integer variables out of 940 objects (940 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0012I Integer solution of 74 found by DiveCoefficient after 0 iterations and 0 nodes (0.23 seconds)
Cbc0001I Search completed - best objective 74, took 0 iterations and 0 nodes (0.24 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Cuts at root node changed objective from 74 to 74
Probing was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Gomory was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Knapsack was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Clique was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
FlowCover was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
ZeroHalf was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                74.00000000
Enumerated nodes:               0
Total iterations:               0
Time (CPU seconds):             0.20
Time (Wallclock seconds):       0.26

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.25   (Wallclock seconds):       0.32

================
File: .gitignore
================
# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
.pybuilder/
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
# .python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# poetry
#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
#poetry.lock

# pdm
#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.
#pdm.lock
#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it
#   in version control.
#   https://pdm.fming.dev/#use-with-ide
.pdm.toml

# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Cython debug symbols
cython_debug/

# PyCharm
#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can
#  be found at https://github.com/github/gitignore/blob/main/Global/JetBrains.gitignore
#  and can be added to the global gitignore or merged into this file.  For a more nuclear
#  option (not recommended) you can uncomment the following to ignore the entire idea folder.
#.idea/

================
File: changelog.txt
================
# TODO: double room patients CAN be in single rooms
# TODO: Single room patients CAN be in double rooms
    # Maybe expand this in the future
# TODO: Only look at most recent year of data
# TODO: 
"""
Held beds are isolated single rooms


As it is right now, if a patient (under this new model) would be placed in a single room

How it works right now:
- all rooms are double rooms (2 beds)
- since they need their own room, that extra bed is wasted
- that extra bed = held beds

Output goal we are looking for:
- available beds for the last year

Under new system:
- its possible we wouldnt be accept all patients

Available beds under old set up compared to available beds on new set up

- goal is to maximize occupancy
- minimize wasted beds


Old metric (all double rooms):
    - wasted beds = total held beds

How does a room become wasted under new model (combination of single rooms + double rooms)
- if single rooms fill up, can they go into open double rooms?
    - that would be a wasted bed
- Sent away patients?


I think the goal is to minimize wasted beds, so single room patients CAN go into double rooms


Old Model:
- Wasted Beds = "Held Beds":
    Held bed is when a psychotic patient has to be in a single room, old model has all double rooms so second bed is wasted

New Models:
- Wasted Beds:
    - Will only be wasted once all single rooms are filled up
    - any new psychotic patients will have to go in a double room
    - if a double room is filled up with a psychotic patient , then the second bed is wasted


# TODO: Train on a year of data
- if "double room patients" is "-" then it is 0
but the total availale beds becomes 26 - (that difference)
 - omit it for now for simplicity then we can come revisit

 - If census is 12, held beds is 14 then single room patients = 12, double room patients = 0

 
 Output goals:
 - Graphs:
    Show wasted beds under old model compared with wasted beds under new model
        Cumulative
        Daily

    Have a spreadsheet to go along with that
"""

================
File: current_model.py
================
"""
This file represents the current model.

The Current Model being:

- All rooms are Double Rooms (2 beds per room)
- 26 total beds (13 double rooms)

When a patient has extra needs and cannot be safely kept with other people, the second bed becomes unavailable/held
- This is a wasted bed.

We want to look historically at all the data and do the following:

- Calculate wasted beds for each day given the room configuration

"""

================
File: docker-compose.yml
================
version: '3.8'

services:
  ward-optimization:
    build: .
    volumes:
      - .:/app
    command: python main.py

================
File: dockerfile
================
# Use an official Python runtime as a parent image
FROM python:3.9-slim

# Set the working directory in the container
WORKDIR /app

# Install system packages required for Python C extensions
RUN apt-get update && apt-get install -y \
    gcc \
    python3-dev \
    && rm -rf /var/lib/apt/lists/*

# Copy the requirements file into the container
COPY requirements.txt /app/requirements.txt

# Install the required dependencies
RUN pip install --no-cache-dir -r requirements.txt

# Copy the rest of the application code into the container
COPY . /app

# Run the application
CMD ["python", "main.py"]

================
File: evaluateModel.md
================
# Psychiatric Ward Room Configuration Evaluation
## Test Period: May-August 2024

### Overview
This evaluation assessed the performance of our optimized room configuration (10 Single, 8 Double Rooms) against unseen test data. The configuration demonstrated exceptional efficiency with minimal resource wastage. In the entire 4-month test period, inefficiencies only occurred on May 12-13 when we had 11 single room patients but only 10 single rooms available, resulting in one single patient requiring a double room.

### Key Results
- **Configuration:** 10 Single Rooms, 8 Double Rooms
- **Total Capacity:** 26 beds
- **Efficiency:** 99.99%
- **Wasted Resources:**
  - Wasted Beds: 2 (single patients in double rooms)
  - Wasted Space: 0 (no double patients split into singles)

### Data Visualization

#### 1. Room Configuration Inefficiency Bar Chart
![Inefficiency Analysis](output/optimizer_bar_chart_test_set.png)
This graph shows the total inefficiency (wasted beds + wasted potential) across different room configurations. The selected configuration (S:10, D:8) demonstrates minimal inefficiency compared to more extreme ratios of single to double rooms.

#### 2. Room Configuration Efficiency Plot
![Efficiency Analysis](output/optimizer_efficiency_plot_test_set.png)
The efficiency curve demonstrates that our chosen configuration achieves near-perfect efficiency (≈1.0). Configurations with more extreme ratios of single to double rooms show lower efficiency scores, ranging from 0.80 to 0.95.

#### 3. Room Configuration Heatmap
![Heatmap Analysis](output/optimizer_heatmap_test_set.png)
This heatmap visualizes the total number of incorrectly assigned patients across different room configurations. The optimal zone (yellow region) includes our selected configuration (10S, 8D), showing minimal misassignments.

#### 4. Wasted Patient Assignments Analysis
![Assignment Analysis](output/wasted_patients_plot_test_set.png)
This graph shows the breakdown of assignment mismatches:
- Blue line: Single patients incorrectly placed in double rooms
- Red line: Double patients incorrectly placed in single rooms
The selected configuration sits at the intersection point where both types of misassignments are minimized.

### Test Data Insights
- Single room patients: 4-11 per day
- Double room patients: 1-9 per day
- The two wasted beds occurred during a brief period in May
- No instances of having to split double room patients into singles

### Optimization Results Data
```
Date,Available Beds,Wasted Beds,Wasted Potential,Daily Efficiency
2024-05-01,26,0.0,0,1.0
...
2024-05-12,26,1.0,0,0.9615384615384616
2024-05-13,26,1.0,0,0.9615384615384616
2024-05-14,26,0.0,0,1.0
...
2024-08-31,26,0.0,0,1.0

Final Cumulative Efficiency: 0.9993446920052425
```
Full dataset available in: output/optimized_model_data_test_set.csv

### Conclusion
The evaluation confirms that the optimized configuration performs exceptionally well on unseen data, maintaining high efficiency while accommodating natural variations in patient admission patterns. The optimization results data shows that the only efficiency drops occurred during two days in May, with perfect efficiency maintained throughout the rest of the test period.

---
*Data Source: May-August 2024 Test Dataset*

================
File: main.py
================
import os
import pandas as pd
from model_optimizer import OptimizedModelEvaluator
from model_current import CurrentModelEvaluator
from visualizer import Visualizer

def main():
    data_path = 'data/final_census_data.csv'
    output_dir = 'output'
    os.makedirs(output_dir, exist_ok=True)
    
    # Run the current model evaluation
    current_evaluator = CurrentModelEvaluator(data_path)
    current_df = current_evaluator.calculate_wasted_beds()
    current_output_path = os.path.join(output_dir, 'current_model_data.csv')
    current_df.to_csv(current_output_path, index=False)
    
    # Run the optimized model evaluation
    optimized_evaluator = OptimizedModelEvaluator(data_path)
    optimized_df = optimized_evaluator.calculate_wasted_beds()
    optimized_output_path = os.path.join(output_dir, 'optimized_model_data.csv')
    optimized_df.to_csv(optimized_output_path, index=False)
    
    # Visualize the results
    current_df = pd.read_csv('output/current_model_data.csv')
    optimized_df = pd.read_csv('output/optimized_model_data.csv')
    visualizer = Visualizer(current_df, optimized_df)
    
    visualizer.plot_wasted_beds_comparison(os.path.join(output_dir, 'wasted_beds_comparison.png'))
    visualizer.plot_daily_efficiency_comparison(os.path.join(output_dir, 'daily_efficiency_comparison.png'))
    visualizer.plot_cumulative_efficiency_comparison(os.path.join(output_dir, 'cumulative_efficiency_comparison.png'))
    
    print("All operations completed successfully. Check the 'output' directory for results.")

if __name__ == "__main__":
    main()

================
File: max_capacity_events.csv
================
Date,Event,Model
2023-01-01,Max Capacity,Current
2023-01-02,Max Capacity,Current
2023-01-03,Max Capacity,Current
2023-01-04,Max Capacity,Current
2023-01-05,Max Capacity,Current
2023-01-06,Max Capacity,Current
2023-01-07,Max Capacity,Current
2023-01-08,Max Capacity,Current
2023-01-09,Max Capacity,Current
2023-01-10,Max Capacity,Current
2023-01-11,Max Capacity,Current
2023-01-15,Max Capacity,Current
2023-01-16,Max Capacity,Current
2023-01-17,Max Capacity,Current
2023-01-18,Max Capacity,Current
2023-01-22,Max Capacity,Current
2023-01-23,Max Capacity,Current
2023-01-27,Max Capacity,Current
2023-01-28,Max Capacity,Current
2023-01-29,Max Capacity,Current
2023-01-30,Max Capacity,Current
2023-01-31,Turn Away,Optimized
2023-01-31,Max Capacity,Current
2023-02-01,Turn Away,Optimized
2023-02-01,Max Capacity,Current
2023-02-02,Max Capacity,Current
2023-02-02,Turn Away,Optimized
2023-02-03,Turn Away,Optimized
2023-02-03,Max Capacity,Current
2023-02-04,Turn Away,Optimized
2023-02-05,Max Capacity,Current
2023-02-06,Max Capacity,Current
2023-02-09,Turn Away,Optimized
2023-02-10,Turn Away,Optimized
2023-02-11,Max Capacity,Current
2023-02-11,Turn Away,Optimized
2023-02-12,Max Capacity,Current
2023-02-13,Max Capacity,Current
2023-02-18,Max Capacity,Current
2023-02-19,Max Capacity,Current
2023-02-20,Max Capacity,Current
2023-02-21,Max Capacity,Current
2023-02-22,Max Capacity,Current
2023-02-24,Max Capacity,Current
2023-02-24,Turn Away,Optimized
2023-02-25,Max Capacity,Current
2023-02-26,Max Capacity,Current
2023-02-27,Max Capacity,Current
2023-02-28,Max Capacity,Current
2023-03-01,Max Capacity,Current
2023-03-04,Max Capacity,Current
2023-03-05,Max Capacity,Current
2023-03-06,Max Capacity,Current
2023-03-15,Max Capacity,Current
2023-03-16,Max Capacity,Current
2023-03-17,Max Capacity,Current
2023-03-19,Max Capacity,Current
2023-03-20,Max Capacity,Current
2023-03-22,Max Capacity,Current
2023-04-07,Max Capacity,Current
2023-04-08,Max Capacity,Current
2023-04-09,Max Capacity,Current
2023-04-10,Max Capacity,Current
2023-04-11,Max Capacity,Current
2023-04-14,Max Capacity,Current
2023-04-15,Max Capacity,Current
2023-04-16,Max Capacity,Current
2023-04-18,Max Capacity,Current
2023-04-19,Max Capacity,Current
2023-04-22,Max Capacity,Current
2023-04-23,Max Capacity,Current
2023-04-24,Max Capacity,Current
2023-04-26,Max Capacity,Current
2023-04-27,Max Capacity,Current
2023-04-28,Max Capacity,Current
2023-04-29,Max Capacity,Current
2023-04-30,Max Capacity,Current
2023-05-01,Max Capacity,Current
2023-05-02,Max Capacity,Current
2023-05-03,Max Capacity,Current
2023-05-04,Max Capacity,Current
2023-05-05,Max Capacity,Current
2023-05-06,Max Capacity,Current
2023-05-07,Max Capacity,Current
2023-05-08,Max Capacity,Current
2023-05-09,Max Capacity,Current
2023-05-10,Max Capacity,Current
2023-05-11,Max Capacity,Current
2023-05-12,Max Capacity,Current
2023-05-13,Max Capacity,Current
2023-05-14,Max Capacity,Current
2023-05-15,Max Capacity,Current
2023-05-16,Max Capacity,Current
2023-05-17,Max Capacity,Current
2023-05-18,Max Capacity,Current
2023-05-21,Max Capacity,Current
2023-05-22,Max Capacity,Current
2023-05-24,Max Capacity,Current
2023-05-25,Max Capacity,Current
2023-05-26,Max Capacity,Current
2023-05-27,Max Capacity,Current
2023-05-28,Max Capacity,Current
2023-05-29,Max Capacity,Current
2023-05-30,Max Capacity,Current
2023-05-31,Max Capacity,Current
2023-06-01,Max Capacity,Current
2023-06-02,Max Capacity,Current
2023-06-02,Turn Away,Optimized
2023-06-03,Max Capacity,Current
2023-06-04,Max Capacity,Current
2023-06-05,Max Capacity,Current
2023-06-07,Turn Away,Optimized
2023-06-07,Max Capacity,Current
2023-06-09,Turn Away,Optimized
2023-06-11,Max Capacity,Current
2023-06-12,Max Capacity,Current
2023-06-15,Max Capacity,Current
2023-06-16,Max Capacity,Current
2023-06-17,Max Capacity,Current
2023-06-18,Max Capacity,Current
2023-06-19,Max Capacity,Current
2023-06-20,Max Capacity,Current
2023-06-21,Max Capacity,Current
2023-06-22,Max Capacity,Current
2023-06-23,Max Capacity,Current
2023-06-24,Max Capacity,Current
2023-06-25,Max Capacity,Current
2023-06-26,Max Capacity,Current
2023-06-27,Max Capacity,Current
2023-06-28,Max Capacity,Current
2023-06-29,Max Capacity,Current
2023-07-04,Max Capacity,Current
2023-07-05,Max Capacity,Current
2023-07-06,Max Capacity,Current
2023-07-07,Turn Away,Optimized
2023-07-07,Max Capacity,Current
2023-07-08,Max Capacity,Current
2023-07-09,Max Capacity,Current
2023-07-10,Max Capacity,Current
2023-07-15,Max Capacity,Current
2023-07-16,Max Capacity,Current
2023-07-17,Max Capacity,Current
2023-08-20,Max Capacity,Current
2023-08-21,Max Capacity,Current
2023-08-26,Max Capacity,Current
2023-08-27,Max Capacity,Current
2023-08-28,Max Capacity,Current
2023-09-10,Max Capacity,Current
2023-09-11,Max Capacity,Current
2023-09-15,Max Capacity,Current
2023-09-16,Max Capacity,Current
2023-09-17,Max Capacity,Current
2023-09-18,Max Capacity,Current
2023-10-01,Max Capacity,Current
2023-10-02,Max Capacity,Current
2023-10-07,Max Capacity,Current
2023-10-08,Max Capacity,Current
2023-10-09,Max Capacity,Current
2023-10-15,Max Capacity,Current
2023-10-16,Max Capacity,Current
2023-10-17,Max Capacity,Current
2023-10-19,Max Capacity,Current
2023-10-29,Max Capacity,Current
2023-10-30,Max Capacity,Current
2023-10-31,Max Capacity,Current
2023-11-01,Max Capacity,Current
2023-11-02,Max Capacity,Current
2023-11-03,Max Capacity,Current
2023-11-04,Max Capacity,Current
2023-11-05,Max Capacity,Current
2023-11-06,Max Capacity,Current
2023-11-07,Max Capacity,Current
2023-11-08,Max Capacity,Current
2023-11-09,Max Capacity,Current
2023-11-11,Max Capacity,Current
2023-11-12,Max Capacity,Current
2023-11-13,Max Capacity,Current
2023-11-14,Max Capacity,Current
2023-11-15,Max Capacity,Current
2023-11-18,Max Capacity,Current
2023-11-19,Max Capacity,Current
2023-11-20,Max Capacity,Current
2023-11-22,Max Capacity,Current
2023-11-25,Max Capacity,Current
2023-11-26,Max Capacity,Current
2023-11-27,Max Capacity,Current
2023-11-28,Max Capacity,Current
2023-12-01,Max Capacity,Current
2023-12-02,Max Capacity,Current
2023-12-03,Max Capacity,Current
2023-12-04,Max Capacity,Current
2023-12-07,Max Capacity,Current
2023-12-13,Max Capacity,Current
2023-12-14,Max Capacity,Current
2023-12-15,Max Capacity,Current
2023-12-18,Max Capacity,Current
2023-12-19,Max Capacity,Current
2023-12-21,Max Capacity,Current
2023-12-28,Max Capacity,Current
2023-12-29,Max Capacity,Current
2024-01-02,Max Capacity,Current
2024-01-05,Max Capacity,Current
2024-01-06,Max Capacity,Current
2024-01-07,Max Capacity,Current
2024-01-08,Max Capacity,Current
2024-01-10,Max Capacity,Current
2024-01-16,Max Capacity,Current
2024-01-17,Max Capacity,Current
2024-01-25,Max Capacity,Current
2024-02-03,Max Capacity,Current
2024-02-04,Max Capacity,Current
2024-02-18,Max Capacity,Current
2024-02-19,Max Capacity,Current
2024-02-20,Max Capacity,Current
2024-02-23,Max Capacity,Current
2024-02-24,Max Capacity,Current
2024-02-25,Max Capacity,Current
2024-02-26,Max Capacity,Current
2024-02-27,Max Capacity,Current
2024-03-03,Max Capacity,Current
2024-03-04,Max Capacity,Current
2024-03-19,Max Capacity,Current
2024-04-04,Max Capacity,Current

================
File: max_capacity_summary.csv
================
Metric,Current Model,Optimized Model
Total Days at Max Capacity,210,0
Total Turn Away Events,0,0
Percent Days at Max Capacity,44.40%,0.00%
Percent Days with Turn Away Events,0.00%,0.00%

================
File: max_capacity.py
================
import pandas as pd
import numpy as np
from datetime import datetime
import seaborn as sns
import matplotlib.pyplot as plt

def calculate_max_capacity_events(raw_data_path, current_model_path, optimized_model_path):
    """
    Calculate when the ward reaches max capacity under both configurations.
    
    Parameters:
    raw_data_path: Path to raw census data CSV
    current_model_path: Path to current model results CSV
    optimized_model_path: Path to optimized model results CSV
    
    Returns:
    dict: Statistics about max capacity events for both configurations
    """
    # Load all datasets
    raw_data = pd.read_csv(raw_data_path)
    current_model = pd.read_csv(current_model_path)
    optimized_model = pd.read_csv(optimized_model_path)
    
    # Merge datasets
    analysis_df = pd.merge(raw_data, current_model, on='Date', suffixes=('', '_current'))
    analysis_df = pd.merge(analysis_df, optimized_model, on='Date', suffixes=('', '_optimized'))
        
    def analyze_configuration(df, is_current_model=True):
        max_capacity_days = []
        turned_away_events = []
        capacity_data = []
        
        if is_current_model:
            # Current model: 13 double rooms (26 beds)
            total_rooms = 13
            double_rooms = 13
            single_rooms = 0
            max_beds = 26
        else:
            # Optimized model: 8 double rooms (16 beds) + 10 single rooms (10 beds)
            total_rooms = 18  # 8 + 10
            double_rooms = 8
            single_rooms = 10
            max_beds = 26
            
        for index, row in df.iterrows():
            single_room_patients = row['Total Single Room Patients']
            double_room_patients = row['Double Room Patients']
            total_patients = row['Total Patients for Day']
            
            # Calculate available beds
            if is_current_model:
                # In current model:
                # 1. Single room patients each need their own double room
                rooms_for_single_patients = single_room_patients
                
                # 2. Calculate how many double rooms are used by double room patients
                # Use integer division to pair patients
                paired_double_patients = (double_room_patients // 2) * 2
                remaining_single_double_patients = double_room_patients % 2
                
                rooms_for_double_patients = paired_double_patients // 2
                
                # Calculate remaining capacity
                rooms_used = rooms_for_single_patients + rooms_for_double_patients
                rooms_available = total_rooms - rooms_used
                
                # Max capacity is reached if:
                # 1. All rooms are fully occupied (no space for even a single patient)
                # 2. Or we're at max total patients
                # 3. Or we have one unpaired patient and no more rooms
                is_max_capacity = (
                    (rooms_available == 0 and remaining_single_double_patients == 0) or
                    total_patients >= max_beds or
                    (rooms_available == 0 and remaining_single_double_patients > 0)
                )
                
                # Turn away occurs if we need more rooms than available
                would_turn_away = rooms_used > total_rooms
                                
            else:
                # Optimized model logic remains the same
                single_rooms_used = min(single_room_patients, single_rooms)
                remaining_single_patients = max(0, single_room_patients - single_rooms)
                
                double_rooms_for_isolation = remaining_single_patients
                available_double_rooms = double_rooms - double_rooms_for_isolation
                
                paired_double_patients = (double_room_patients // 2) * 2
                remaining_single_double_patients = double_room_patients % 2
                
                rooms_used = (
                    single_rooms_used +
                    double_rooms_for_isolation +
                    (paired_double_patients // 2)
                )
                
                rooms_available = total_rooms - rooms_used
                
                is_max_capacity = (
                    total_patients >= max_beds or
                    (rooms_available == 0 and remaining_single_double_patients > 0)
                )
                
                would_turn_away = rooms_used > total_rooms

            # Store detailed information for capacity events
            if is_max_capacity or would_turn_away:
                capacity_data.append({
                    'Date': row['Date'],
                    'Total_Patients': total_patients,
                    'Single_Room_Patients': single_room_patients,
                    'Double_Room_Patients': double_room_patients,
                    'Is_Max_Capacity': is_max_capacity,
                })
            
            if is_max_capacity:
                max_capacity_days.append(row['Date'])
                
            if would_turn_away:
                turned_away_events.append(row['Date'])
        
        return {
            'max_capacity_days': max_capacity_days,
            'turned_away_events': turned_away_events,
            'total_max_capacity_days': len(max_capacity_days),
            'total_turned_away_events': len(turned_away_events),
            'capacity_data': capacity_data
        }
    
    # Analyze both configurations
    current_model_stats = analyze_configuration(analysis_df, is_current_model=True)
    optimized_model_stats = analyze_configuration(analysis_df, is_current_model=False)
    
    # Create and save detailed capacity event CSVs
    current_capacity_df = pd.DataFrame(current_model_stats['capacity_data'])
    if not current_capacity_df.empty:
        current_capacity_df.sort_values('Date').to_csv('output/current_model_max_capacity.csv', index=False)
    
    new_capacity_df = pd.DataFrame(optimized_model_stats['capacity_data'])
    if not new_capacity_df.empty:
        new_capacity_df.sort_values('Date').to_csv('output/new_model_capacity.csv', index=False)
    
    # Calculate additional statistics
    total_days = len(analysis_df)
    
    results = {
        'current_model': {
            **current_model_stats,
            'percent_max_capacity': (current_model_stats['total_max_capacity_days'] / total_days) * 100
        },
        'optimized_model': {
            **optimized_model_stats,
            'percent_max_capacity': (optimized_model_stats['total_max_capacity_days'] / total_days) * 100
        },
        'total_days_analyzed': total_days
    }
    
    # Generate summary report
    summary_df = pd.DataFrame({
        'Metric': ['Total Days at Max Capacity', 'Percent Days at Max Capacity'],
        'Current Model': [
            results['current_model']['total_max_capacity_days'],
            f"{results['current_model']['percent_max_capacity']:.2f}%"
        ],
        'Optimized Model': [
            results['optimized_model']['total_max_capacity_days'],
            f"{results['optimized_model']['percent_max_capacity']:.2f}%"
        ]
    })
    
    # Save results
    summary_df.to_csv('output/max_capacity_summary.csv', index=False)
    
    return results

def create_visualizations(results):
    # Set the style for all plots
    sns.set()

    # Create DataFrame for easier plotting
    data = pd.DataFrame({
        'Model': ['Current Model', 'Optimized Model'],
        'Days at Max Capacity': [
            results['current_model']['total_max_capacity_days'],
            results['optimized_model']['total_max_capacity_days']
        ],
        'Percent at Max Capacity': [
            results['current_model']['percent_max_capacity'],
            results['optimized_model']['percent_max_capacity']
        ]
    })

    # 1. Bar Plot Comparison
    plt.figure(figsize=(10, 6))
    sns.barplot(data=data, x='Model', y='Days at Max Capacity', palette='muted')
    plt.title('Days at Max Capacity by Model')
    plt.ylabel('Number of Days')
    plt.xticks(rotation=0)
    plt.tight_layout()
    plt.savefig('output/capacity_events_comparison.png')
    plt.close()

    # 2. Percentage Comparison
    plt.figure(figsize=(8, 6))
    sns.barplot(data=data, x='Model', y='Percent at Max Capacity', 
                palette=['#ff7f0e', '#2ca02c'])
    plt.title('Percent of Days at Max Capacity')
    plt.ylabel('Percentage')
    plt.xticks(rotation=0)
    for i, v in enumerate(data['Percent at Max Capacity']):
        plt.text(i, v + 1, f'{v:.1f}%', ha='center')
    plt.tight_layout()
    plt.savefig('output/capacity_percentages.png')
    plt.close()

    # 3. Capacity Distribution (Pie Charts)
    fig, (ax1, ax2) = plt.subplots(1, 2, figsize=(12, 6))

    # Current Model
    current_below = 100 - data.loc[0, 'Percent at Max Capacity']
    current_at = data.loc[0, 'Percent at Max Capacity']
    current_data = [current_below, current_at]
    ax1.pie(current_data, labels=['Below Capacity', 'At Max Capacity'], 
            autopct='%1.1f%%', colors=sns.color_palette('pastel'))
    ax1.set_title('Current Model')

    # Optimized Model
    optimized_below = 100 - data.loc[1, 'Percent at Max Capacity']
    optimized_at = data.loc[1, 'Percent at Max Capacity']
    optimized_data = [optimized_below, optimized_at]
    ax2.pie(optimized_data, labels=['Below Capacity', 'At Max Capacity'], 
            autopct='%1.1f%%', colors=sns.color_palette('pastel'))
    ax2.set_title('Optimized Model')

    plt.suptitle('Capacity Distribution')
    plt.tight_layout()
    plt.savefig('output/capacity_distribution.png')
    plt.close()

    # 4. Heatmap of Metrics
    plt.figure(figsize=(10, 4))
    metrics_data = data.set_index('Model').T
    sns.heatmap(metrics_data, annot=True, fmt='.1f', cmap='YlOrRd', 
                cbar_kws={'label': 'Value'})
    plt.title('Summary of Metrics')
    plt.tight_layout()
    plt.savefig('output/metrics_heatmap.png')
    plt.close()

if __name__ == "__main__":
    # Adjust these paths as needed
    results = calculate_max_capacity_events(
        'data/final_census_data_test_set_may_to_oct2024.csv',
        'output/current_model_data.csv',
        'output/optimized_model_data.csv'
    )
    
    print("\nAnalysis Complete!")
    print(f"Total days analyzed: {results['total_days_analyzed']}")
    print("\nCurrent Model (13 Double Rooms):")
    print(f"Days at max capacity: {results['current_model']['total_max_capacity_days']}")
    print(f"Percent at max capacity: {results['current_model']['percent_max_capacity']:.2f}%")
    
    print("\nOptimized Model (8 Double + 10 Single Rooms):")
    print(f"Days at max capacity: {results['optimized_model']['total_max_capacity_days']}")
    print(f"Percent at max capacity: {results['optimized_model']['percent_max_capacity']:.2f}%")

    # Create visualizations
    create_visualizations(results)



def calculate_max_capacity_events(raw_data_path, current_model_path, optimized_model_path):
    """
    Calculate when the ward reaches max capacity under both configurations.
    
    Parameters:
    raw_data_path: Path to raw census data CSV
    current_model_path: Path to current model results CSV
    optimized_model_path: Path to optimized model results CSV
    
    Returns:
    dict: Statistics about max capacity events for both configurations
    """
    # Load all datasets
    raw_data = pd.read_csv(raw_data_path)
    current_model = pd.read_csv(current_model_path)
    optimized_model = pd.read_csv(optimized_model_path)
    
    # Merge datasets
    analysis_df = pd.merge(raw_data, current_model, on='Date', suffixes=('', '_current'))
    analysis_df = pd.merge(analysis_df, optimized_model, on='Date', suffixes=('', '_optimized'))

================
File: model_current.py
================
import pandas as pd

class CurrentModelEvaluator:
    def __init__(self, data_path):
        self.data = pd.read_csv(data_path)

    def calculate_wasted_beds(self):
        records = []

        # Consider only the most recent year(s) of data (2023 and 2024)
        self.data["Date"] = pd.to_datetime(self.data["Date"])
        self.data.dropna(subset=['Single Room E'], inplace=True)
        recent_year_data = self.data[self.data['Date'].dt.year.isin([2023, 2024])]

        running_sum_available_beds = 0
        running_sum_wasted_beds = 0
        running_sum_wasted_potential = 0

        for _, row in recent_year_data.iterrows():
            date = pd.to_datetime(row['Date'])

            available_beds = 26 - row['Closed Rooms']
            wasted_beds = row['Total Single Room Patients'] # + row['Closed Rooms']
            wasted_potential = 0  # No wasted potential in current model as all rooms are double

            running_sum_available_beds += available_beds
            running_sum_wasted_beds += wasted_beds
            running_sum_wasted_potential += wasted_potential

            daily_efficiency = (available_beds - wasted_beds - wasted_potential) / available_beds if available_beds > 0 else 0
            cumulative_efficiency = (running_sum_available_beds - running_sum_wasted_beds - running_sum_wasted_potential) / running_sum_available_beds if running_sum_available_beds > 0 else 0

            records.append({
                "Date": date.date(),
                "Available Beds": available_beds,
                "Wasted Beds": wasted_beds,
                "Wasted Potential": wasted_potential,
                "Daily Efficiency": daily_efficiency,
                "Cumulative Available Beds": running_sum_available_beds,
                "Cumulative Wasted Beds": running_sum_wasted_beds,
                "Cumulative Wasted Potential": running_sum_wasted_potential,
                "Cumulative Efficiency": cumulative_efficiency
            })

        return pd.DataFrame(records)

# Usage
if __name__ == "__main__":
    data_path = 'data/final_census_data.csv'
    evaluator = CurrentModelEvaluator(data_path)
    df = evaluator.calculate_wasted_beds()
    df.to_csv('output/current_model_data.csv', index=False)

    print(df)

================
File: model_optimizer.py
================
import pandas as pd
class OptimizedModelEvaluator:
    def __init__(self, data_path, single_rooms=10, double_rooms=8):
        self.data = pd.read_csv(data_path)
        self.single_rooms = single_rooms
        self.double_rooms = double_rooms

    def calculate_wasted_beds(self):
        records = []

        # Ensure that the Date column is datetime and filter for the relevant years
        self.data["Date"] = pd.to_datetime(self.data["Date"])
        self.data.sort_values(by='Date', inplace=True)
        self.data.dropna(subset=['Single Room E'], inplace=True)
        recent_year_data = self.data[self.data['Date'].dt.year.isin([2023, 2024])]

        running_sum_available_beds = 0
        running_sum_wasted_beds = 0
        running_sum_wasted_potential = 0

        for _, row in recent_year_data.iterrows():
            date = pd.to_datetime(row['Date'])

            available_beds = 26 - row['Closed Rooms']
            single_room_patients = row['Total Single Room Patients']
            double_room_patients = row['Double Room Patients']

            # Calculate wasted beds (single room patients in double rooms)
            wasted_single_in_double = max(0, single_room_patients - self.single_rooms)

            # Calculate wasted potential (double room patients in single rooms)
            wasted_double_in_single = max(0, double_room_patients - (self.double_rooms * 2))

            wasted_beds = wasted_single_in_double
            wasted_potential = wasted_double_in_single
            running_sum_available_beds += available_beds
            running_sum_wasted_beds += wasted_beds
            running_sum_wasted_potential += wasted_potential

            daily_efficiency = (available_beds - wasted_beds - wasted_potential) / available_beds if available_beds > 0 else 0
            cumulative_efficiency = (running_sum_available_beds - running_sum_wasted_beds - running_sum_wasted_potential) / running_sum_available_beds if running_sum_available_beds > 0 else 0

            records.append({
                "Date": date.date(),
                "Available Beds": available_beds,
                "Wasted Beds": wasted_beds,
                "Wasted Potential": wasted_potential,
                "Daily Efficiency": daily_efficiency,
                "Cumulative Available Beds": running_sum_available_beds,
                "Cumulative Wasted Beds": running_sum_wasted_beds,
                "Cumulative Wasted Potential": running_sum_wasted_potential,
                "Cumulative Efficiency": cumulative_efficiency
            })

        return pd.DataFrame(records)

# Usage
if __name__ == "__main__":
    data_path = 'data/final_census_data_test_set_may_to_oct2024.csv'
    evaluator = OptimizedModelEvaluator(data_path)
    df = evaluator.calculate_wasted_beds()
    df.to_csv('output/optimized_model_data_test_set_may_to_oct2024.csv', index=False)

================
File: optimizer_overview.md
================
# Optimizer Description

## Introduction

This document provides a detailed yet accessible explanation of how the optimizer works in the context of the inpatient psych ward space optimization project. The purpose of the optimizer is to find the most efficient way to allocate beds in the ward, minimizing wasted beds while ensuring all patients' needs are met.

## What is a Wasted Bed?

A "wasted bed" is a bed that could be used by another patient but isn’t, due to specific needs of the patients.

### Current Method

- Currently, all rooms are double rooms (each with two beds).
- If a patient needs to be alone in a room due to their condition, they occupy one bed in a double room, leaving the other bed unused. This unused bed is considered "wasted."

### Optimized Method

- The optimized method proposes a mix of single and double rooms.
- Single rooms are given to patients who need to be alone. If there are no single rooms left, these patients are placed in a double room, possibly leaving one bed in that room wasted.

## What is Linear Programming?

Linear programming is a mathematical method used to find the best possible outcome in a given situation, where you have specific goals (like minimizing wasted beds) and certain constraints (like the total number of beds).

### How Does Linear Programming Work?

At the core of linear programming is the **objective function**, which represents the goal you're trying to achieve—this could be minimizing costs, maximizing profits, or optimizing resource allocation. The objective function is a linear equation that you want to either maximize or minimize.

To find the best outcome, you must also define **constraints**, which are conditions that your solution must satisfy. These constraints are usually expressed as linear inequalities or equations and represent the limitations or requirements of the problem (e.g., the number of available beds, staffing limitations, or room availability).

When you plot these constraints on a graph, they form a feasible region—this is the area where all the constraints overlap and represents all possible solutions that meet the conditions. The optimal solution lies at one of the vertices (corners) of this feasible region. Any solution outside of this region is considered infeasible because it does not satisfy all the constraints.

In summary, linear programming helps you identify the optimal solution by finding the point on the feasible region that maximizes or minimizes your objective function while satisfying all the constraints.

## How the Optimizer Solves the Problem

### 1. Understanding the Problem

We have a total of 26 beds in the ward. The optimizer needs to decide how many of these beds should be in single rooms and how many should be in double rooms.

### 2. Defining the Goal

The goal is to minimize the number of wasted beds while meeting the patients’ needs. This goal is translated into an "objective function," which the optimizer tries to minimize.

### 3. Setting the Rules (Constraints)

- **Total Bed Constraint:** The total number of beds must always equal 26.
- **Single Room Constraint:** There must be enough single rooms or double rooms to accommodate all patients who need to be alone.
- **Double Room Constraint:** There must be enough double rooms to accommodate patients who can share a room.

### 4. Testing Combinations

The optimizer tests different combinations of single and double rooms. For example, it might test having 6 single rooms and 10 double rooms, then calculate how many beds would be wasted with this setup.

- **Graph:**
  ![Heatmap showing the total wasted beds for different configurations of single and double rooms.](output/optimizer_heatmap.png)

### 5. Using Linear Programming to Solve

The optimizer uses linear programming to systematically go through all possible combinations of single and double rooms. It calculates the total number of wasted beds for each combination, always following the rules (constraints).

- **Graph:**
  ![Efficiency plot of the optimizer as it evaluates different room configurations.](output/optimizer_efficiency_plot.png)

### 6. Choosing the Best Option

After testing all combinations, the optimizer selects the one that results in the fewest wasted beds.

- **Graph:**
  ![Bar chart comparing the total wasted beds for various room configurations. The selected optimal configuration is highlighted.](output/optimizer_bar_chart.png)

## Are Constraints Flexible?

Constraints in linear programming are the rules that must be satisfied for a solution to be valid. They are not flexible in the sense that they must be met. However, the optimizer handles situations where it’s impossible to perfectly meet all constraints, which is why the concept of "wasted beds" comes into play.

### Handling Constraints

- **Single Room Constraint:** The model tries to allocate single rooms to patients who need them. If there aren’t enough single rooms, some patients will have to go into double rooms, resulting in wasted beds.
- **Wasted Beds:** Even though the optimizer works within rigid constraints, it calculates how many beds are wasted if it can’t perfectly satisfy all patient needs.
- **Optimization:** The optimizer then works to find the best possible combination that minimizes these wasted beds, even if it can’t eliminate them entirely.

### Summary

- Constraints are not flexible—they must be satisfied.
- Wasted beds arise because, while the constraints are met as much as possible, the ward’s real-world limitations mean that some beds may end up being unused.
- The optimizer tries to minimize these wasted beds while adhering to the constraints, even if it can’t meet all needs perfectly.

This is a common aspect of optimization problems: the solution may not be perfect but is the best possible under the given constraints.

================
File: optimizer_results.md
================
# Inpatient Psych Ward Space Optimization Report

## Introduction

This report evaluates the efficiency of two different bed allocation methodologies in an inpatient psych ward setting. The goal is to optimize the use of available beds, minimizing wasted beds while ensuring patient needs are met. The comparison is made between the current bed allocation method and a new approach derived from a linear programming optimization.

### Wasted Beds

In the context of this study, a "wasted bed" is defined as a bed that cannot be utilized due to specific patient needs:

- **Current Model:** In the current model, all rooms are double rooms, meaning they have two beds each. A bed is considered "wasted" when a patient has extra needs and must be isolated, occupying a double room alone. The second bed in that room becomes unavailable to other patients, and thus, it is wasted.

- **Optimized Model:** Under the new optimized model, rooms are a mix of single and double rooms. A bed is considered "wasted" in the same way as in the current model, but this only happens after all single-bed rooms are full. If a patient requiring isolation must be placed in a double room, the other bed in that double room is then wasted.

## Defining Efficiency

In this study, "efficiency" refers to the effective utilization of available beds in the ward. Specifically, efficiency is calculated as the ratio of occupied beds (excluding wasted beds) to the total number of available beds.

### Efficiency Calculation

- **Daily Efficiency:** This is calculated on a daily basis as:
  `Daily Efficiency = (Total Available Beds - Wasted Beds) / Total Available Beds`

- **Cumulative Efficiency:** This tracks efficiency over time, providing insight into long-term trends in bed utilization:
  `Cumulative Efficiency = Cumulative Occupied Beds / Cumulative Available Beds`

The goal is to maximize efficiency, ensuring that as few beds as possible are wasted while meeting the needs of patients.

## Linear Programming and Optimizer Solution

Linear programming (LP) is a mathematical technique used to find the best possible outcome in a given model, where the model is represented by linear relationships. It is commonly used in various fields, including economics, engineering, and logistics, to optimize processes while adhering to specific constraints.

In this project, the goal was to minimize the number of wasted beds in an inpatient psych ward by optimizing the allocation of double and single rooms. The optimization problem was formulated as a linear program, where the objective function and constraints were defined as follows:

### Objective Function

The objective function is the function that we want to minimize or maximize. In our case, the goal was to **minimize the total number of wasted beds** in the ward. The optimizer script calculates the total wasted beds based on the room configuration and patient needs.

**Mathematically:**

Minimize: `total_wasted_beds`

Where `total_wasted_beds` is the sum of unused double beds and single-room patients placed in double rooms (which leaves one bed in the double room wasted).

### Decision Variables

In linear programming, decision variables represent the quantities we can control or adjust to achieve the desired outcome. In our optimizer, the decision variables were:

- **D:** The number of double rooms (ranging from 0 to 13).
- **S:** The number of single rooms (ranging from 0 to 26).

Additionally, we had variables to represent:

- **single_in_double:** The number of single-room patients placed in double rooms.
- **unused_double_beds:** The number of unused beds in double rooms.

### Constraints

Constraints are the conditions that must be satisfied in the model. In this optimization problem, the constraints included:

1. **Total Bed Constraint:**
   - The total number of beds in the ward is fixed at 26. Since each double room has 2 beds, the constraint is expressed as:
   `2D + S = 26`

2. **Single Room Capacity Constraint:**
   - The number of single rooms plus any single-room patients placed in double rooms must be greater than or equal to the number of patients requiring single rooms on any given day:
   `S + single_in_double_i >= single_rooms_needed_i`

3. **Double Room Capacity Constraint:**
   - The number of double rooms should be sufficient to accommodate the patients who can share rooms:
   `double_rooms_needed_i <= 2D`

4. **Unused Double Beds Calculation:**
   - Unused double beds are calculated based on the number of available beds in double rooms minus the number of double-room patients and single-room patients placed in double rooms:
   `unused_double_beds_i = 2D - double_rooms_needed_i - single_in_double_i`

5. **Total Wasted Beds:**
   - The total wasted beds is the sum of single-room patients in double rooms and unused double beds. The optimizer aims to minimize this value:
   `total_wasted_beds >= single_in_double_i + unused_double_beds_i`

### Solver and Results

The optimizer used a linear programming solver (PULP with CBC) to find the optimal values for the decision variables that minimize the total number of wasted beds while satisfying all constraints.

The solution produced by the optimizer was as follows:

- **Optimal number of double rooms:** 8.0
- **Optimal number of single rooms:** 10.0
- **Total wasted beds:** 52.0
- **Total wasted potential:** 22.0
- **Solver status:** Optimal
- **Objective function value:** 74.0

This means that the most efficient allocation of beds, given the constraints and patient needs, is to have 8 double rooms and 10 single rooms, which minimizes wasted beds to just 52 across the evaluated period.

## Report Aim

This report aims to compare the efficiency of the current bed allocation method against the new optimized solution. The key metrics considered are wasted beds and overall efficiency.

## Results Discussion

The following visualizations and tables provide a comparison between the current and optimized models:

### Wasted Beds Comparison

![Wasted Beds Comparison](output/wasted_beds_comparison.png)

The graph shows the number of wasted beds over time for both the current and optimized models. As can be seen, the optimized model significantly reduces the number of wasted beds compared to the current model.

### Daily Efficiency Comparison

![Daily Efficiency Comparison](output/daily_efficiency_comparison.png)

This graph compares the daily efficiency of bed usage between the two models. The optimized model consistently shows higher efficiency, indicating better utilization of available beds.

### Cumulative Efficiency Comparison

![Cumulative Efficiency Comparison](output/cumulative_efficiency_comparison.png)

The cumulative efficiency graph provides an overview of how efficiency trends over time. The optimized model achieves and maintains higher cumulative efficiency compared to the current model.

## Conclusions

The optimized model clearly outperforms the current model in terms of minimizing wasted beds and maximizing efficiency. This suggests that adopting the new room allocation strategy could lead to better utilization of resources in the ward.

## Additional Considerations

While the optimized model provides significant improvements, there are other factors that need to be considered:

- **Long-Term Trends:** The model could be further refined by analyzing long-term trends in patient needs and room utilization.

## Future Plans

To build on the success of this project, the following steps could be taken:

- **Dynamic Allocation:** Implement a system that dynamically adjusts room assignments based on real-time data.
- **Expand Scope:** Consider expanding the model to optimize other resources, such as staff or medical equipment.

================
File: optimizer_visualizations.py
================
import pandas as pd
import numpy as np
import seaborn as sns
import matplotlib.pyplot as plt

sns.set()

# Load the historical data
data_path = 'data/final_census_data_test_set.csv'
data = pd.read_csv(data_path)

# Consider only the most recent years (2023 and 2024)
data["Date"] = pd.to_datetime(data["Date"])
data.dropna(subset=['Single Room E'], inplace=True)
recent_year_data = data[data['Date'].dt.year.isin([2023, 2024])]

# Define the range of single and double rooms
single_rooms = np.arange(0, 27)
double_rooms = np.arange(0, 14)

# Initialize matrices to store the objective function values, singles in double, and doubles in single
objective_values = np.full((len(single_rooms), len(double_rooms)), np.nan)
total_singles_in_double_values = np.full((len(single_rooms), len(double_rooms)), np.nan)
total_doubles_in_single_values = np.full((len(single_rooms), len(double_rooms)), np.nan)

# Iterate through each configuration and calculate the objective function and inefficiencies
for i, S in enumerate(single_rooms):
    for j, D in enumerate(double_rooms):
        if 2 * D + S == 26:  # Feasibility condition
            total_waste = 0
            total_singles_in_double = 0
            total_doubles_in_single = 0

            for _, row in recent_year_data.iterrows():
                single_room_patients = row['Total Single Room Patients']
                double_room_patients = row['Double Room Patients']

                # Wasted beds in double rooms by single patients
                wasted_single_in_double = max(0, single_room_patients - S)

                # Wasted potential double room space when double patients are too many
                wasted_double_in_single = max(0, double_room_patients - 2 * D)

                # Total wasted single patients in double rooms
                total_singles_in_double += wasted_single_in_double

                # Total wasted double patients in single rooms
                total_doubles_in_single += wasted_double_in_single

                # Total waste = wasted single in double + wasted double in single
                total_waste += wasted_single_in_double + wasted_double_in_single

            # Store the total wasted beds, singles in double, and doubles in single
            objective_values[i, j] = total_waste
            total_singles_in_double_values[i, j] = total_singles_in_double
            total_doubles_in_single_values[i, j] = total_doubles_in_single

# Create a heatmap for the total wasted beds
plt.figure(figsize=(10, 8))
sns.heatmap(objective_values, annot=True, fmt=".0f", cmap="YlGnBu", xticklabels=double_rooms, yticklabels=single_rooms)
plt.title("Objective Function Heatmap\n(Minimize Total Incorrectly Assigned Patients)")
plt.xlabel("Number of Double Rooms (D)")
plt.ylabel("Number of Single Rooms (S)")
plt.savefig('output/optimizer_heatmap_test_set.png')

# Extract configurations for single/double rooms and wasted beds
configurations = [(S, D) for S in single_rooms for D in double_rooms if 2 * D + S == 26]
wasted_beds_space = [objective_values[i, j] for i, S in enumerate(single_rooms) for j, D in enumerate(double_rooms) if 2 * D + S == 26]
total_singles_in_double_space = [total_singles_in_double_values[i, j] for i, S in enumerate(single_rooms) for j, D in enumerate(double_rooms) if 2 * D + S == 26]
total_doubles_in_single_space = [total_doubles_in_single_values[i, j] for i, S in enumerate(single_rooms) for j, D in enumerate(double_rooms) if 2 * D + S == 26]

# Create a bar chart for wasted beds
plt.figure(figsize=(12, 10))
plt.bar([f"S: {S}, D: {D}" for S, D in configurations], wasted_beds_space, color='skyblue')
plt.xticks(rotation=45, ha='right')
plt.xlabel("Room Configurations (Single Rooms, Double Rooms)")
plt.ylabel("Inefficiency (Wasted Beds + Wasted Potential)")
plt.title("Inefficiency vs. Room Configurations")
plt.savefig('output/optimizer_bar_chart_test_set.png')

# Calculate efficiency for each configuration
total_available_beds = len(recent_year_data) * 26
efficiency = [(total_available_beds - wb) / total_available_beds for wb in wasted_beds_space]

# Create a line plot for efficiency
plt.figure(figsize=(12, 10))
plt.plot([f"S: {S}, D: {D}" for S, D in configurations], efficiency, marker='o', color='orange')
plt.xticks(rotation=45, ha='right')
plt.xlabel("Room Configurations (Single Rooms, Double Rooms)")
plt.ylabel("Efficiency")
plt.title("Efficiency vs. Room Configurations")
plt.savefig('output/optimizer_efficiency_plot_test_set.png')

# Create line plots for total singles in double and total doubles in single as a function of room configurations
plt.figure(figsize=(12, 10))
plt.plot([f"S: {S}, D: {D}" for S, D in configurations], total_singles_in_double_space, marker='o', label='Singles in Double', color='blue')
plt.plot([f"S: {S}, D: {D}" for S, D in configurations], total_doubles_in_single_space, marker='o', label='Doubles in Single', color='red')
plt.xticks(rotation=45, ha='right')
plt.xlabel("Room Configurations (Single Rooms, Double Rooms)")
plt.ylabel("Total Incorrectly Assigned Patients")
plt.title("Wasted Singles in Double Rooms and Doubles in Single Rooms\nvs. Room Configurations")
plt.legend()
plt.savefig('output/wasted_patients_plot_test_set.png')

================
File: optimizer.py
================
import pulp
import pandas as pd
import logging

# Set up logging to a file
logging.basicConfig(filename='optimizer_debug.log', level=logging.DEBUG, 
                    format='%(asctime)s - %(levelname)s - %(message)s')

class WardOptimizer:
    def __init__(self, data_path):
        self.data = pd.read_csv(data_path)
        
    def optimize_space(self, log_path=None):
        # Define the problem
        problem = pulp.LpProblem("OptimizeWardSpace", pulp.LpMinimize)

        # Decision Variables
        D = pulp.LpVariable('D', lowBound=0, upBound=13, cat='Integer')  # number of double rooms
        S = pulp.LpVariable('S', lowBound=0, upBound=26, cat='Integer')  # number of single rooms

        # Variables for wasted beds and wasted potential
        total_wasted_beds = pulp.LpVariable('total_wasted_beds', lowBound=0, cat='Integer')
        total_wasted_potential = pulp.LpVariable('total_wasted_potential', lowBound=0, cat='Integer')

        # Constraint: Total number of beds (2D + S) must equal 26
        problem += 2 * D + S == 26, "TotalBeds"

        single_in_double = []
        double_in_single = []

        # Processing data for recent years
        self.data["Date"] = pd.to_datetime(self.data["Date"])
        self.data.dropna(subset=['Single Room E'], inplace=True)
        recent_year_data = self.data[self.data['Date'].dt.year.isin([2023, 2024])]

        for i, row in recent_year_data.iterrows():
            single_rooms_needed = row['Total Single Room Patients']
            double_rooms_needed = row['Double Room Patients']

            # Variables to capture specific daily inefficiencies
            single_in_double_var = pulp.LpVariable(f'single_in_double_{i}', lowBound=0, cat='Integer')
            double_in_single_var = pulp.LpVariable(f'double_in_single_{i}', lowBound=0, cat='Integer')

            single_in_double.append(single_in_double_var)
            double_in_single.append(double_in_single_var)

            # Constraint: Ensure enough single rooms or double rooms accommodating single room patients
            problem += single_in_double_var >= single_rooms_needed - S, f"SingleInDouble_{i}"
            problem += single_in_double_var <= single_rooms_needed, f"SingleInDoubleCap_{i}"

            # Constraint: Ensure enough double rooms for double room patients
            problem += double_in_single_var >= double_rooms_needed - 2 * D, f"DoubleInSingle_{i}"
            problem += double_in_single_var <= double_rooms_needed, f"DoubleInSingleCap_{i}"

            # Accumulate wasted beds and potential
            problem += total_wasted_beds >= pulp.lpSum(single_in_double), f"TotalWastedBeds_{i}"
            problem += total_wasted_potential >= pulp.lpSum(double_in_single), f"TotalWastedPotential_{i}"

            # Logging: Log intermediate variables
            logging.debug(f"Date: {row['Date']}")
            logging.debug(f"Single Rooms Needed: {single_rooms_needed}, Double Rooms Needed: {double_rooms_needed}")
            logging.debug(f"Single in Double: {single_in_double_var.varValue}, Double in Single: {double_in_single_var.varValue}")

        # Objective function to minimize total wasted beds and wasted potential
        problem += total_wasted_beds + total_wasted_potential, "MinimizeWastedSpace"

        # Solve the problem with optional logging
        solver = pulp.PULP_CBC_CMD(logPath=log_path)
        problem.solve(solver)

        # Get the results
        double_rooms = pulp.value(D)
        single_rooms = pulp.value(S)
        total_wasted_beds_value = pulp.value(total_wasted_beds)
        total_wasted_potential_value = pulp.value(total_wasted_potential)

        # Additional information
        solver_status = pulp.LpStatus[problem.status]
        objective_value = pulp.value(problem.objective)

        # Calculate total free beds (26 beds total minus used beds)
        total_free_beds_value = 26 - (2 * double_rooms + single_rooms)

        # Calculate efficiency considering both wasted beds and potential
        efficiency = (26 - total_free_beds_value - total_wasted_beds_value - total_wasted_potential_value) / 26

        # Logging: Log final results
        logging.debug("\nFinal Results")
        logging.debug(f"Optimal number of double rooms: {double_rooms}")
        logging.debug(f"Optimal number of single rooms: {single_rooms}")
        logging.debug(f"Total wasted beds: {total_wasted_beds_value}")
        logging.debug(f"Total wasted potential: {total_wasted_potential_value}")
        logging.debug(f"Total free beds: {total_free_beds_value}")
        logging.debug(f"Efficiency: {efficiency:.2f}")
        logging.debug(f"Solver status: {solver_status}")
        logging.debug(f"Objective function value: {objective_value}")

        return (double_rooms, single_rooms, total_wasted_beds_value, total_wasted_potential_value, total_free_beds_value, efficiency, solver_status, objective_value)

# Usage
if __name__ == "__main__":
    data_path = 'data/final_census_data.csv'
    log_path = 'output/solver_log.txt'

    optimizer = WardOptimizer(data_path)
    (double_rooms, single_rooms, total_wasted_beds, total_wasted_potential, total_free_beds, efficiency, solver_status, objective_value) = optimizer.optimize_space(log_path)

    print(f"Optimal number of double rooms: {double_rooms}")
    print(f"Optimal number of single rooms: {single_rooms}")
    print(f"Total wasted beds: {total_wasted_beds}")
    print(f"Total wasted potential: {total_wasted_potential}")
    print(f"Total free beds: {total_free_beds}")
    print(f"Efficiency: {efficiency:.2f}")
    print(f"Solver status: {solver_status}")
    print(f"Objective function value: {objective_value}")

================
File: preprocess_data.py
================
import pandas as pd

def process_sheet(df, sheet_name: str, year: str):
    df = df.reset_index(drop=True)

    # Cut the dataframe to only keep rows above 'Monthly Totals'
    if 'Monthly Totals' in df.iloc[:, 0].values:
        cut_off_index = df[df.iloc[:, 0] == 'Monthly Totals'].index[0]
        df = df.iloc[:cut_off_index]

    # Define the expected column names
    expected_columns = {
        'Unnamed: 1': 'Day',
        'Census': 'Total Census Rooms',
        'Held Beds': 'Single Room E',
        'Held Due To Covid Swab/Quarantine': 'Single Room F',
        'Closed Beds': 'Closed Rooms'
    }

    # Apply column mapping
    df = df.rename(columns=expected_columns)

    # Ensure all required columns are present
    required_columns = ['Day', 'Double Room', 'Single Room E', 'Single Room F', 'Closed Rooms']
    for col in required_columns:
        if col not in df.columns:
            df[col] = 0  # Assign default value if column is missing

    # Calculate total single room patients and double room patients
    df['Single Room E'] = df['Single Room E'].astype(float)
    df['Single Room F'] = df['Single Room F'].astype(float)
    df['Total Single Room Patients'] = df['Single Room E'] + df['Single Room F']

    # If Total Single Rooms (held beds) > Total Census Rooms, set Total Single Rooms to Total Census Rooms, 
    df['Total Single Room Patients'] = df[['Total Single Room Patients', 'Total Census Rooms']].min(axis=1)

    df['Double Room Patients'] = df['Total Census Rooms'].astype(float) - df['Total Single Room Patients']
    df['Total Patients for Day'] = df['Total Single Room Patients'] + df['Double Room Patients']

    # Generate exact date based on the sheet_name (Month) and year
    df['Day'] = df.index + 1  # Assuming the first row corresponds to the 1st of the month
    df['Date'] = pd.to_datetime(df['Day'].astype(str) + '-' + sheet_name + '-' + year, format='%d-%b-%Y')

    # Select final columns
    df = df[
        [
            'Date', 'Day', 'Single Room E', 'Single Room F', 
            'Total Single Room Patients', 'Double Room Patients', 
            'Total Patients for Day', 'Closed Rooms', 'Total Census Rooms'
        ]
    ]
    return df

def process_workbooks(file_paths):
    all_data_frames = []

    for file_path in file_paths:
        # Get year from file path
        # example file path: Monthly Census 2022.xlsx
        year = file_path.split(' ')[-1].split('.')[0]
        xls = pd.ExcelFile(file_path)
        for sheet_name in xls.sheet_names:
            if len(sheet_name) == 3:
                df = pd.read_excel(xls, sheet_name=sheet_name, skiprows=4)
                processed_df = process_sheet(df, sheet_name, year)
                all_data_frames.append(processed_df)

    # Concatenate all dataframes
    final_df = pd.concat(all_data_frames, ignore_index=True)

    # Save the final dataframe to a CSV file
    output_csv_path = 'data/final_census_data.csv'
    final_df.to_csv(output_csv_path, index=False)
    print(f"Data has been successfully written to {output_csv_path}")

# List of file paths to process
file_paths = [
    'data/Monthly Census 2022.xlsx',
    'data/Monthly Census 2023.xlsx',
    'data/Monthly Census 2024.xlsx'
]

# Process the workbooks and generate the CSV
process_workbooks(file_paths)

================
File: preprocess_TEST_data.py
================
import pandas as pd

def process_sheet(df):
    df = df.reset_index(drop=True)

    # Cut the dataframe to only keep rows above 'Monthly Totals'
    if 'Monthly Totals' in df.iloc[:, 0].values:
        cut_off_index = df[df.iloc[:, 0] == 'Monthly Totals'].index[0]
        df = df.iloc[:cut_off_index]

    # Define the expected column names
    expected_columns = {
        'Date': 'Date',
        'Census': 'Total Census Rooms',
        'Held Beds': 'Single Room E',
        'Held Due To Covid Swab/Quarantine': 'Single Room F',
        'Closed Beds': 'Closed Rooms'
    }

    # Apply column mapping
    df = df.rename(columns=expected_columns)


    # Calculate total single room patients and double room patients
    df['Single Room E'] = df['Single Room E'].astype(float)
    df['Single Room F'] = df['Single Room F'].astype(float)
    df['Total Single Room Patients'] = df['Single Room E'] + df['Single Room F']

    # If Total Single Rooms (held beds) > Total Census Rooms, set Total Single Rooms to Total Census Rooms, 
    df['Total Single Room Patients'] = df[['Total Single Room Patients', 'Total Census Rooms']].min(axis=1)

    df['Double Room Patients'] = df['Total Census Rooms'].astype(float) - df['Total Single Room Patients']
    df['Total Patients for Day'] = df['Total Single Room Patients'] + df['Double Room Patients']

    # Generate exact date based on the sheet_name (Month) and year
    df['Date'] = pd.to_datetime(df['Date'])

    # Select final columns
    df = df[
        [
            'Date', 'Single Room E', 'Single Room F', 
            'Total Single Room Patients', 'Double Room Patients', 
            'Total Patients for Day', 'Closed Rooms', 'Total Census Rooms'
        ]
    ]
    return df

def process_workbooks(file_paths):
    all_data_frames = []

    for file_path in file_paths:
        # Get year from file path
        # example file path: Monthly Census 2022.xlsx
        df = pd.read_csv(file_path)
        processed_df = process_sheet(df)
        all_data_frames.append(processed_df)

    # Concatenate all dataframes
    final_df = pd.concat(all_data_frames, ignore_index=True)

    # Save the final dataframe to a CSV file
    output_csv_path = 'data/final_census_data_test_set_may_to_oct2024.csv'
    final_df.to_csv(output_csv_path, index=False)
    print(f"Data has been successfully written to {output_csv_path}")

# List of file paths to process
file_paths = [
    'data/Monthly Census 2024(Aug).csv',
    'data/Monthly Census 2024(Jul).csv',
    'data/Monthly Census 2024(Jun).csv',
    'data/Monthly Census 2024(May).csv',
    'data/Monthly Census 2024(Oct).csv',
    'data/Monthly Census 2024(Sept).csv',
]

# Process the workbooks and generate the CSV
process_workbooks(file_paths)

================
File: README.md
================
# Inpatient Psych Ward Space Optimization

## Project Overview

This project aims to model the most efficient use of space for an inpatient psych ward certified to hold up to 26 patients. The objective is to find an optimal combination of double and single rooms to minimize wasted space and ensure efficient utilization of beds. The comparison is made between the current bed allocation method and a new approach derived from a linear programming optimization.

## Methodology

The project is divided into several key components:

### Data Preprocessing

1. **preprocess_data.py**: This script processes raw data from Excel files, cleans it, and prepares it for analysis. The script extracts information about daily room usage, including the number of single-room patients, double-room patients, and closed rooms, and generates a final CSV file containing this data with accurate dates.

### Model Evaluation

1. **model_current.py**: 
    - Evaluates the current bed allocation model, where all rooms are double rooms. 
    - It calculates the number of wasted beds daily and cumulatively by considering patients who require isolation, thus wasting the second bed in a double room.

2. **model_optimizer.py**:
    - Evaluates the optimized bed allocation model derived from linear programming.
    - In this model, the ward has a combination of 8 double rooms and 10 single rooms, minimizing wasted beds by only placing isolated patients in double rooms when all single rooms are occupied.

### Visualization

1. **visualizer.py**: 
    - Generates visualizations comparing the efficiency of the current and optimized models. 
    - Key metrics such as daily wasted beds, cumulative efficiency, and daily efficiency are plotted to provide insights into how each model performs over time.

### Optimization Approach

- **Decision Variables:** 
  - Number of double rooms (D).
  - Number of single rooms (S).
- **Constraints:** 
  - Total number of beds (2D + S) must equal 26.
  - Ensure enough rooms for patients requiring single rooms.
  - Allow double room patients to occupy either single or double rooms.
- **Objective Function:** 
  - Minimize the total number of wasted beds.

A high-level overview of the approach includes:
1. **Defining the Objective Function:** The objective is to minimize the total number of wasted beds.
2. **Setting Decision Variables:** The number of double rooms (D) and single rooms (S).
3. **Establishing Constraints:** Ensuring the total number of beds is 26, and there are enough rooms for patients requiring single rooms while allowing double room patients to occupy any room type.
4. **Solving the Linear Program:** Using linear programming techniques to find the optimal values for D and S that minimize the objective function.
5. **Interpreting Results:** Extracting and analyzing the optimal room configuration and the associated number of wasted beds.

## Results

For a detailed discussion of the results, please refer to the `optimizer_results.md` file, which provides an in-depth analysis of the linear programming optimization and a comparison of the current and optimized models.

## Usage

### Prerequisites

Ensure you have the necessary dependencies installed. You can install them using the `requirements.txt` file:

```
pip install -r requirements.txt
```

### Running the Scripts

#### Data Preprocessing

Before running the models, ensure that your data is preprocessed using:

```
python preprocess_data.py
```

This will generate the `final_census_data.csv` file required by the model scripts.

#### Running the Current Model Evaluation

The `model_current.py` script evaluates the current bed allocation model:

```
python model_current.py
```

This will output a CSV file containing the evaluation results for the current model.

#### Running the Optimized Model Evaluation

The `model_optimizer.py` script evaluates the optimized bed allocation model:

```
python model_optimizer.py
```

This will output a CSV file containing the evaluation results for the optimized model.

#### Running the Visualization Script

The `visualizer.py` script generates visualizations to compare the current and optimized models:

```
python visualizer.py
```

This will output various visualizations as PNG files, comparing the two models.

### Running with Docker

You can also run the project using Docker. Ensure Docker is installed and running on your system.

#### Building the Docker Image

Build the Docker image using the provided `Dockerfile`:

```
docker-compose build   
```

Start the application using:

```
docker-compose up   
```

## Additional Information

For more details on how the linear programming was implemented and the specific results of the optimization, please refer to the `optimizer_results.md` file.

================
File: requirements.txt
================
PuLP==2.8.0
matplotlib==3.8.4
matplotlib-inline==0.1.7
seaborn==0.13.2
notebook==7.1.3
pandas==2.2.2

================
File: visualizer.py
================
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

# Set Seaborn style
sns.set(style="darkgrid", context="talk", palette="colorblind")

class Visualizer:
    def __init__(self, current_data, optimized_data):
        self.current_data = current_data
        self.optimized_data = optimized_data
    def plot_wasted_beds_comparison(self, plot_path):
        plt.figure(figsize=(14, 14))
        plt.plot(self.current_data['Date'], self.current_data['Wasted Beds'], label='Current Model Wasted Beds', marker='o', linestyle='-', linewidth=1, markersize=4, color=sns.color_palette("colorblind")[0])
        plt.plot(self.optimized_data['Date'], self.optimized_data['Wasted Beds'], label='Optimized Model Wasted Beds', marker='x', linestyle='--', linewidth=1, markersize=4, color=sns.color_palette("colorblind")[2])
        plt.xlabel('Date')
        plt.ylabel('Wasted Beds')
        plt.title('Comparison of Wasted Beds: Current Model vs Optimized Model')
        plt.legend(loc='upper left')  # Legend moved to the top left
        plt.grid(True)
        
        # Improve date label readability
        plt.xticks(rotation=45)
        plt.gca().xaxis.set_major_locator(plt.MaxNLocator(nbins=10))  # Show fewer date labels

        plt.savefig(plot_path)
        plt.show()

    def plot_wasted_potential_comparison(self, plot_path):
        plt.figure(figsize=(14, 14))
        plt.plot(self.current_data['Date'], self.current_data['Wasted Potential'], label='Current Model Wasted Potential', marker='o', linestyle='-', linewidth=1, markersize=4, color=sns.color_palette("colorblind")[1])
        plt.plot(self.optimized_data['Date'], self.optimized_data['Wasted Potential'], label='Optimized Model Wasted Potential', marker='x', linestyle='--', linewidth=1, markersize=4, color=sns.color_palette("colorblind")[3])
        plt.xlabel('Date')
        plt.ylabel('Wasted Potential')
        plt.title('Comparison of Wasted Potential: Current Model vs Optimized Model')
        plt.legend(loc='upper left')  # Legend moved to the top left
        plt.grid(True)

        # Improve date label readability
        plt.xticks(rotation=45)
        plt.gca().xaxis.set_major_locator(plt.MaxNLocator(nbins=10))  # Show fewer date labels

        plt.savefig(plot_path)
        plt.show()

    def plot_daily_efficiency_comparison(self, plot_path):
        plt.figure(figsize=(14, 14))
        plt.plot(self.current_data['Date'], self.current_data['Daily Efficiency'], label='Current Model Daily Efficiency', marker='o', linestyle='-', linewidth=1, markersize=4, color=sns.color_palette("colorblind")[0])
        plt.plot(self.optimized_data['Date'], self.optimized_data['Daily Efficiency'], label='Optimized Model Daily Efficiency', marker='x', linestyle='--', linewidth=1, markersize=4, color=sns.color_palette("colorblind")[2])
        plt.xlabel('Date')
        plt.ylabel('Daily Efficiency')
        plt.title('Comparison of Daily Efficiency: Current Model vs Optimized Model')
        plt.legend(loc='upper left')  # Legend moved to the top left
        plt.grid(True)

        # Improve date label readability
        plt.xticks(rotation=45)
        plt.gca().xaxis.set_major_locator(plt.MaxNLocator(nbins=10))  # Show fewer date labels

        plt.savefig(plot_path)
        plt.show()

    def plot_cumulative_efficiency_comparison(self, plot_path):
        plt.figure(figsize=(14, 14))
        plt.plot(self.current_data['Date'], self.current_data['Cumulative Efficiency'], label='Current Model Cumulative Efficiency', marker='o', linestyle='-', linewidth=1, markersize=4, color=sns.color_palette("colorblind")[0])
        plt.plot(self.optimized_data['Date'], self.optimized_data['Cumulative Efficiency'], label='Optimized Model Cumulative Efficiency', marker='x', linestyle='--', linewidth=1, markersize=4, color=sns.color_palette("colorblind")[2])
        plt.xlabel('Date')
        plt.ylabel('Cumulative Efficiency')
        plt.title('Comparison of Cumulative Efficiency: Current Model vs Optimized Model')
        plt.legend(loc='upper left')  # Legend moved to the top left
        plt.grid(True)

        # Improve date label readability
        plt.xticks(rotation=45)
        plt.gca().xaxis.set_major_locator(plt.MaxNLocator(nbins=10))  # Show fewer date labels

        plt.savefig(plot_path)
        plt.show()

# Usage
if __name__ == "__main__":
    current_df = pd.read_csv('output/current_model_data.csv')
    optimized_df = pd.read_csv('output/optimized_model_data.csv')

    visualizer = Visualizer(current_df, optimized_df)

    # Generate the plots
    visualizer.plot_wasted_beds_comparison('output/wasted_beds_comparison.png')
    visualizer.plot_wasted_potential_comparison('output/wasted_potential_comparison.png')
    visualizer.plot_daily_efficiency_comparison('output/daily_efficiency_comparison.png')
    visualizer.plot_cumulative_efficiency_comparison('output/cumulative_efficiency_comparison.png')
